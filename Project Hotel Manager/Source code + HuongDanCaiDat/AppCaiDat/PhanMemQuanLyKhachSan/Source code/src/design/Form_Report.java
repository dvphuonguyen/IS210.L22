package design;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class Form_Report extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
//	public static void main(String[] args) {
//		EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				try {
//					Form_Report frame = new Form_Report();
//					frame.setVisible(true);
//				} catch (Exception e) {
//					e.printStackTrace();
//				}
//			}
//		});
//	}

	/**
	 * Create the frame.
	 */
	public Form_Report() {
        initComponents();
        showQuanLy();
        showNhanVien();

        showVIP();
        showThanThiet();
        showThanhVien();
        
        showPhongTrong();
        showPhongDat();
        showPhongThue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnThanThiet = new javax.swing.JPanel();
        lbThanThiet = new javax.swing.JLabel();
        pnThanhVien = new javax.swing.JPanel();
        lbThanhVien = new javax.swing.JLabel();
        pnQuanLy = new javax.swing.JPanel();
        lbQuanLy = new javax.swing.JLabel();
        pnPhongTrong = new javax.swing.JPanel();
        lbTrong = new javax.swing.JLabel();
        pnPhongThue = new javax.swing.JPanel();
        lbThuePhong = new javax.swing.JLabel();
        pnPhongDat = new javax.swing.JPanel();
        lbDatPhong = new javax.swing.JLabel();
        pnNhanVien = new javax.swing.JPanel();
        lbNhanVien = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnVIP = new javax.swing.JPanel();
        lbVIP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        pnThanThiet.setBackground(new java.awt.Color(255, 255, 255));

        lbThanThiet.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnThanThietLayout = new javax.swing.GroupLayout(pnThanThiet);
        pnThanThiet.setLayout(pnThanThietLayout);
        pnThanThietLayout.setHorizontalGroup(
            pnThanThietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThanThietLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbThanThiet, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnThanThietLayout.setVerticalGroup(
            pnThanThietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThanThietLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbThanThiet, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnThanhVien.setBackground(new java.awt.Color(255, 255, 255));

        lbThanhVien.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnThanhVienLayout = new javax.swing.GroupLayout(pnThanhVien);
        pnThanhVien.setLayout(pnThanhVienLayout);
        pnThanhVienLayout.setHorizontalGroup(
            pnThanhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThanhVienLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnThanhVienLayout.setVerticalGroup(
            pnThanhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThanhVienLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnQuanLy.setBackground(new java.awt.Color(255, 255, 255));

        lbQuanLy.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnQuanLyLayout = new javax.swing.GroupLayout(pnQuanLy);
        pnQuanLy.setLayout(pnQuanLyLayout);
        pnQuanLyLayout.setHorizontalGroup(
            pnQuanLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuanLyLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnQuanLyLayout.setVerticalGroup(
            pnQuanLyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuanLyLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnPhongTrong.setBackground(new java.awt.Color(255, 255, 255));

        lbTrong.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnPhongTrongLayout = new javax.swing.GroupLayout(pnPhongTrong);
        pnPhongTrong.setLayout(pnPhongTrongLayout);
        pnPhongTrongLayout.setHorizontalGroup(
            pnPhongTrongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongTrongLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbTrong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnPhongTrongLayout.setVerticalGroup(
            pnPhongTrongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongTrongLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbTrong, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnPhongThue.setBackground(new java.awt.Color(255, 255, 255));

        lbThuePhong.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnPhongThueLayout = new javax.swing.GroupLayout(pnPhongThue);
        pnPhongThue.setLayout(pnPhongThueLayout);
        pnPhongThueLayout.setHorizontalGroup(
            pnPhongThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongThueLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbThuePhong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnPhongThueLayout.setVerticalGroup(
            pnPhongThueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongThueLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbThuePhong, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnPhongDat.setBackground(new java.awt.Color(255, 255, 255));

        lbDatPhong.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnPhongDatLayout = new javax.swing.GroupLayout(pnPhongDat);
        pnPhongDat.setLayout(pnPhongDatLayout);
        pnPhongDatLayout.setHorizontalGroup(
            pnPhongDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongDatLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnPhongDatLayout.setVerticalGroup(
            pnPhongDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhongDatLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pnNhanVien.setBackground(new java.awt.Color(255, 255, 255));

        lbNhanVien.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnNhanVienLayout = new javax.swing.GroupLayout(pnNhanVien);
        pnNhanVien.setLayout(pnNhanVienLayout);
        pnNhanVienLayout.setHorizontalGroup(
            pnNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNhanVienLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnNhanVienLayout.setVerticalGroup(
            pnNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNhanVienLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jLabel1.setText("FormNhanVien");

        jLabel2.setText("FormKhachHang");

        pnVIP.setBackground(new java.awt.Color(255, 255, 255));

        lbVIP.setFont(new java.awt.Font("Century", 1, 48)); // NOI18N

        javax.swing.GroupLayout pnVIPLayout = new javax.swing.GroupLayout(pnVIP);
        pnVIP.setLayout(pnVIPLayout);
        pnVIPLayout.setHorizontalGroup(
            pnVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnVIPLayout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(lbVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnVIPLayout.setVerticalGroup(
            pnVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnVIPLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jLabel3.setText("FormPhong");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnVIP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(pnThanThiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnPhongTrong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnPhongDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnPhongThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(588, 588, 588)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(199, 199, 199))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnPhongTrong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnPhongDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnVIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnPhongThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnThanhVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnThanThiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbDatPhong;
    private javax.swing.JLabel lbNhanVien;
    private javax.swing.JLabel lbQuanLy;
    private javax.swing.JLabel lbThanThiet;
    private javax.swing.JLabel lbThanhVien;
    private javax.swing.JLabel lbThuePhong;
    private javax.swing.JLabel lbTrong;
    private javax.swing.JLabel lbVIP;
    private javax.swing.JPanel pnNhanVien;
    private javax.swing.JPanel pnPhongDat;
    private javax.swing.JPanel pnPhongThue;
    private javax.swing.JPanel pnPhongTrong;
    private javax.swing.JPanel pnQuanLy;
    private javax.swing.JPanel pnThanThiet;
    private javax.swing.JPanel pnThanhVien;
    private javax.swing.JPanel pnVIP;
    // End of variables declaration//GEN-END:variables

    private void showQuanLy() {
        //try {
            //Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(*) sl from nhanvien where maql is null";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbQuanLy.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showNhanVien() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(*) sl from nhanvien where maql is not null";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbNhanVien.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showVIP() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(*) sl from khachhang where malkh = 3";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbVIP.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showThanThiet() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(*) sl from khachhang where malkh = 2";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbThanThiet.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showThanhVien() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(*) sl from khachhang where malkh = 1";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbThanhVien.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showPhongTrong() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql =  "SELECT COUNT(MAPHONG) Sl\n" +
                                "FROM CHITIETTTP\n" +
                                "WHERE   MATTP = 1 AND TRUNC(NGAYBD) <= TRUNC(SYSDATE) AND TRUNC(NGAYKT) >= TRUNC(SYSDATE)";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbTrong.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showPhongDat() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "select count(maphong) sl from phieudattruoc pdt join chitietpdt ctpdt on pdt.mapdt = ctpdt.mapdt where matt = 1";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while ( rs.next()){
                    lbDatPhong.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void showPhongThue() {
//        try {
//            Class.forName("oracle.jdbc.driver.OracleDriver");
            try {
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "c##demo", "123456");
                String sql = "SELECT COUNT(MAPHONG) sl\n" +
                                "FROM CHITIETPTP CTPTP JOIN PHIEUTHUEPHONG PTP ON PTP.MAPTP = CTPTP.MAPTP\n" +
                                "WHERE   MATT = 1 \n" +
                                "        AND TRUNC(NGAYNP) <= TRUNC(SYSDATE)\n" +
                                "        AND TRUNC(NGAYTPTT) >= TRUNC(SYSDATE)";
                PreparedStatement statement = conn.prepareStatement(sql);
                ResultSet rs = statement.executeQuery();
                while (rs.next()) {
                    lbThuePhong.setText(String.valueOf(rs.getInt("sl")));
                }

            } catch (SQLException ex) {
                Logger.getLogger(Form_Report.class.getName()).log(Level.SEVERE, null, ex);
            }

//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(FormReport.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
}



