--------------------------------------------------------
--  File created - Thursday-July-08-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence DONVI_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."DONVI_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence DV_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."DV_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 33 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence HD_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."HD_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 79 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence KH_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."KH_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 29 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence KM_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."KM_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 15 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence LKH_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."LKH_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence LP_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."LP_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence NV_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."NV_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 13 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PDT_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."PDT_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 96 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PDV_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."PDV_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 43 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PTP_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."PTP_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 155 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence P_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."P_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 77 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence QD_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."QD_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TTP_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."TTP_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TT_S
--------------------------------------------------------

   CREATE SEQUENCE  "C##LUCIFER"."TT_S"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table CHITIETKM
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."CHITIETKM" 
   (	"MAKM" NUMBER(*,0), 
	"MALKH" NUMBER(*,0), 
	"PHANTRAMKM" NUMBER(3,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CHITIETPDT
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."CHITIETPDT" 
   (	"MAPDT" NUMBER(*,0), 
	"MAPHONG" NUMBER(*,0), 
	"NGAYNP" DATE, 
	"NGAYTPDD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CHITIETPDV
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."CHITIETPDV" 
   (	"MAPDV" NUMBER(*,0), 
	"MADV" NUMBER(*,0), 
	"SLDV" NUMBER(*,0), 
	"NGAYSD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CHITIETPTP
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."CHITIETPTP" 
   (	"MAPTP" NUMBER(*,0), 
	"MAPHONG" NUMBER(*,0), 
	"NGAYNP" DATE, 
	"NGAYTPTT" DATE, 
	"PHUTHU" NUMBER(3,2), 
	"SLNGUOI" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CHITIETTTP
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."CHITIETTTP" 
   (	"MAPHONG" NUMBER(*,0), 
	"MATTP" NUMBER(*,0), 
	"NGAYBD" DATE, 
	"NGAYKT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DICHVU
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."DICHVU" 
   (	"MADV" NUMBER(*,0), 
	"TENDV" VARCHAR2(50 BYTE), 
	"GIADV" NUMBER(15,0), 
	"MADONVI" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DONVI
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."DONVI" 
   (	"MADONVI" NUMBER(*,0), 
	"TENDONVI" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HOADON
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."HOADON" 
   (	"MAHD" NUMBER(*,0), 
	"TONGTIEN" NUMBER(15,0), 
	"NGAYTT" DATE, 
	"MANV" NUMBER(*,0), 
	"MAKH" NUMBER(*,0), 
	"MAPTP" NUMBER(*,0), 
	"MAPDV" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table KHACHHANG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."KHACHHANG" 
   (	"MAKH" NUMBER(*,0), 
	"TENKH" VARCHAR2(50 BYTE), 
	"CCCDKH" VARCHAR2(12 BYTE), 
	"NGAYSINHKH" DATE, 
	"GIOITINHKH" VARCHAR2(4 BYTE), 
	"SDTKH" VARCHAR2(10 BYTE), 
	"QUOCTICH" VARCHAR2(25 BYTE), 
	"DOANHSO" NUMBER(15,0), 
	"MALKH" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table KHUYENMAI
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."KHUYENMAI" 
   (	"MAKM" NUMBER(*,0), 
	"TENKM" VARCHAR2(50 BYTE), 
	"TUNGAY" DATE, 
	"DENNGAY" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LOAIKHACHHANG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."LOAIKHACHHANG" 
   (	"MALKH" NUMBER(*,0), 
	"TENLKH" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LOAIPHONG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."LOAIPHONG" 
   (	"MALP" NUMBER(*,0), 
	"TENLP" VARCHAR2(25 BYTE), 
	"GIAPHONG" NUMBER(15,0), 
	"SLTOIDA" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table NHANVIEN
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."NHANVIEN" 
   (	"MANV" NUMBER(*,0), 
	"TENNV" VARCHAR2(50 BYTE), 
	"CCCDNV" VARCHAR2(12 BYTE), 
	"NGAYSINHNV" DATE, 
	"GIOITINHNV" VARCHAR2(4 BYTE), 
	"CHUCVU" VARCHAR2(50 BYTE), 
	"NGAYVL" DATE, 
	"TENND" VARCHAR2(25 BYTE), 
	"PASSWORD" VARCHAR2(25 BYTE), 
	"EMAILNV" VARCHAR2(30 BYTE), 
	"MAQL" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PHIEUDATTRUOC
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."PHIEUDATTRUOC" 
   (	"MAPDT" NUMBER(*,0), 
	"NGAYDT" DATE, 
	"MAKH" NUMBER(*,0), 
	"MANV" NUMBER(*,0), 
	"MATT" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PHIEUDICHVU
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."PHIEUDICHVU" 
   (	"MAPDV" NUMBER(*,0), 
	"TIENDV" NUMBER(15,0), 
	"MAKH" NUMBER(*,0), 
	"MANV" NUMBER(*,0), 
	"MATT" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PHIEUTHUEPHONG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."PHIEUTHUEPHONG" 
   (	"MAPTP" NUMBER(*,0), 
	"TIENPHONG" NUMBER(15,0), 
	"MAKH" NUMBER(*,0), 
	"MANV" NUMBER(*,0), 
	"MAPDT" NUMBER(*,0), 
	"MATT" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PHONG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."PHONG" 
   (	"MAPHONG" NUMBER(*,0), 
	"TENPHONG" VARCHAR2(10 BYTE), 
	"GHICHU" VARCHAR2(100 BYTE), 
	"MALP" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table QUYDINH
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."QUYDINH" 
   (	"MAQD" NUMBER(*,0), 
	"TENQD" VARCHAR2(25 BYTE), 
	"MOTA" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TINHTRANGPHIEU
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."TINHTRANGPHIEU" 
   (	"MATT" NUMBER(*,0), 
	"TENTT" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TINHTRANGPHONG
--------------------------------------------------------

  CREATE TABLE "C##LUCIFER"."TINHTRANGPHONG" 
   (	"MATTP" NUMBER(*,0), 
	"TENTTP" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into C##LUCIFER.CHITIETKM
SET DEFINE OFF;
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (1,2,0.04);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (1,3,0.07);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (2,1,0.05);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (2,2,0.1);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (2,3,0.15);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (3,1,0.05);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (3,2,0.1);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (3,3,0.15);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (4,3,0.1);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (5,3,0.4);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (5,2,0.03);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (5,1,0.02);
Insert into C##LUCIFER.CHITIETKM (MAKM,MALKH,PHANTRAMKM) values (6,3,0.05);
REM INSERTING into C##LUCIFER.CHITIETPDT
SET DEFINE OFF;
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (1,1,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (1,2,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (1,3,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (2,13,to_date('14-JAN-21','DD-MON-RR'),to_date('16-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (3,5,to_date('18-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (4,3,to_date('25-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (4,4,to_date('25-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (5,15,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (5,16,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (6,2,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (7,11,to_date('20-FEB-21','DD-MON-RR'),to_date('23-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (7,12,to_date('20-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (6,6,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (6,7,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (8,11,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (8,10,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (9,18,to_date('24-MAR-21','DD-MON-RR'),to_date('26-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (10,2,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (10,3,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (11,2,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (11,4,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (11,3,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (12,5,to_date('01-AUG-21','DD-MON-RR'),to_date('04-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (13,6,to_date('21-SEP-21','DD-MON-RR'),to_date('24-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (13,7,to_date('21-SEP-21','DD-MON-RR'),to_date('24-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (14,8,to_date('10-AUG-21','DD-MON-RR'),to_date('12-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (14,9,to_date('10-AUG-21','DD-MON-RR'),to_date('12-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (15,10,to_date('28-JUL-21','DD-MON-RR'),to_date('30-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (16,11,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (16,12,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (16,13,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (17,14,to_date('21-OCT-21','DD-MON-RR'),to_date('24-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (17,15,to_date('21-OCT-21','DD-MON-RR'),to_date('24-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (18,16,to_date('24-DEC-21','DD-MON-RR'),to_date('26-DEC-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (19,17,to_date('19-AUG-21','DD-MON-RR'),to_date('21-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (19,18,to_date('19-AUG-21','DD-MON-RR'),to_date('21-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (20,19,to_date('16-SEP-21','DD-MON-RR'),to_date('17-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDT (MAPDT,MAPHONG,NGAYNP,NGAYTPDD) values (21,20,to_date('13-OCT-21','DD-MON-RR'),to_date('15-OCT-21','DD-MON-RR'));
REM INSERTING into C##LUCIFER.CHITIETPDV
SET DEFINE OFF;
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (36,4,1,to_date('01-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (1,12,1,to_date('01-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (2,6,3,to_date('04-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (2,9,7,to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (3,8,7,to_date('09-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (3,17,2,to_date('10-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (4,21,1,to_date('14-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (4,16,1,to_date('15-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (5,20,1,to_date('19-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (5,18,1,to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (6,23,2,to_date('27-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (7,10,1,to_date('02-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (8,11,1,to_date('11-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (9,3,2,to_date('17-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (9,4,2,to_date('17-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (9,6,1,to_date('17-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (10,14,1,to_date('25-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (10,15,4,to_date('25-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (11,8,4,to_date('01-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (12,11,1,to_date('16-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (13,13,1,to_date('25-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (13,19,1,to_date('25-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (14,16,3,to_date('28-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (15,10,2,to_date('29-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (16,5,1,to_date('08-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (17,9,4,to_date('11-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (18,8,2,to_date('14-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (19,1,24,to_date('23-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (19,2,17,to_date('24-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (20,6,4,to_date('26-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (22,16,1,to_date('08-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (23,23,6,to_date('17-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (24,6,3,to_date('25-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (24,9,6,to_date('25-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (25,3,2,to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (25,4,2,to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (25,5,1,to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (25,9,8,to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (25,14,1,to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (26,12,1,to_date('05-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (27,3,2,to_date('11-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (27,4,2,to_date('11-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (28,10,5,to_date('20-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (29,3,1,to_date('26-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (29,4,1,to_date('26-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (29,5,1,to_date('26-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (30,15,3,to_date('27-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETPDV (MAPDV,MADV,SLDV,NGAYSD) values (24,10,6,to_date('25-MAY-21','DD-MON-RR'));
REM INSERTING into C##LUCIFER.CHITIETPTP
SET DEFINE OFF;
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (1,1,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (1,2,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (1,3,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (2,10,to_date('06-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (2,11,to_date('06-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (3,19,to_date('09-JAN-21','DD-MON-RR'),to_date('11-JAN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (3,20,to_date('09-JAN-21','DD-MON-RR'),to_date('11-JAN-21','DD-MON-RR'),0.25,5);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (4,13,to_date('14-JAN-21','DD-MON-RR'),to_date('16-JAN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (5,14,to_date('14-JAN-21','DD-MON-RR'),to_date('16-JAN-21','DD-MON-RR'),0,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (6,5,to_date('18-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'),0.15,5);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (7,9,to_date('19-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (8,12,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (8,13,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (8,14,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (8,15,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (9,8,to_date('26-JAN-21','DD-MON-RR'),to_date('28-JAN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (10,17,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (10,18,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (10,19,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (11,6,to_date('01-FEB-21','DD-MON-RR'),to_date('03-FEB-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (11,7,to_date('01-FEB-21','DD-MON-RR'),to_date('03-FEB-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (12,15,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (12,16,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (13,14,to_date('10-FEB-21','DD-MON-RR'),to_date('13-FEB-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (14,8,to_date('12-FEB-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (14,10,to_date('12-FEB-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (15,1,to_date('15-FEB-21','DD-MON-RR'),to_date('17-FEB-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (15,2,to_date('15-FEB-21','DD-MON-RR'),to_date('17-FEB-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (16,13,to_date('16-FEB-21','DD-MON-RR'),to_date('18-FEB-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (16,14,to_date('16-FEB-21','DD-MON-RR'),to_date('18-FEB-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (17,11,to_date('20-FEB-21','DD-MON-RR'),to_date('23-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (17,12,to_date('20-FEB-21','DD-MON-RR'),to_date('23-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (18,14,to_date('21-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (18,15,to_date('21-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (19,3,to_date('25-FEB-21','DD-MON-RR'),to_date('27-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (19,4,to_date('25-FEB-21','DD-MON-RR'),to_date('27-MAR-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (20,16,to_date('27-FEB-21','DD-MON-RR'),to_date('28-FEB-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (21,2,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (21,6,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (21,7,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (22,3,to_date('01-MAR-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (22,4,to_date('01-MAR-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (23,18,to_date('04-MAR-21','DD-MON-RR'),to_date('05-MAR-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (23,19,to_date('04-MAR-21','DD-MON-RR'),to_date('05-MAR-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (24,11,to_date('08-MAR-21','DD-MON-RR'),to_date('10-MAR-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (24,12,to_date('08-MAR-21','DD-MON-RR'),to_date('10-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (25,7,to_date('14-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (25,8,to_date('14-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (26,2,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (26,3,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (27,10,to_date('19-MAR-21','DD-MON-RR'),to_date('22-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (27,11,to_date('19-MAR-21','DD-MON-RR'),to_date('22-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (28,18,to_date('24-MAR-21','DD-MON-RR'),to_date('26-MAR-21','DD-MON-RR'),0,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (29,14,to_date('25-MAR-21','DD-MON-RR'),to_date('27-MAR-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (30,1,to_date('27-MAR-21','DD-MON-RR'),to_date('29-MAR-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (31,10,to_date('28-MAR-21','DD-MON-RR'),to_date('31-MAR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (32,9,to_date('01-APR-21','DD-MON-RR'),to_date('03-APR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (32,10,to_date('01-APR-21','DD-MON-RR'),to_date('03-APR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (33,2,to_date('08-APR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (33,1,to_date('08-APR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (34,12,to_date('10-APR-21','DD-MON-RR'),to_date('12-APR-21','DD-MON-RR'),0.1,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (34,11,to_date('10-APR-21','DD-MON-RR'),to_date('12-APR-21','DD-MON-RR'),0,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (35,6,to_date('14-APR-21','DD-MON-RR'),to_date('15-APR-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (35,7,to_date('14-APR-21','DD-MON-RR'),to_date('15-APR-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (36,19,to_date('14-APR-21','DD-MON-RR'),to_date('17-APR-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (36,20,to_date('14-APR-21','DD-MON-RR'),to_date('17-APR-21','DD-MON-RR'),0,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (37,14,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (37,15,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (38,3,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (38,4,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (39,5,to_date('24-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'),0.1,5);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (39,13,to_date('24-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (40,8,to_date('25-APR-21','DD-MON-RR'),to_date('27-APR-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (40,16,to_date('25-APR-21','DD-MON-RR'),to_date('27-APR-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (41,17,to_date('26-APR-21','DD-MON-RR'),to_date('28-APR-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (41,18,to_date('26-APR-21','DD-MON-RR'),to_date('28-APR-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (42,5,to_date('29-APR-21','DD-MON-RR'),to_date('02-MAY-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (43,1,to_date('04-MAY-21','DD-MON-RR'),to_date('06-MAY-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (43,2,to_date('06-MAY-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (44,3,to_date('07-MAY-21','DD-MON-RR'),to_date('10-MAY-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (44,4,to_date('07-MAY-21','DD-MON-RR'),to_date('10-MAY-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (45,5,to_date('08-MAY-21','DD-MON-RR'),to_date('11-MAY-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (45,6,to_date('08-MAY-21','DD-MON-RR'),to_date('11-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (46,7,to_date('15-MAY-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (46,8,to_date('15-MAY-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (47,10,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (47,11,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (48,9,to_date('20-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (48,12,to_date('20-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (49,13,to_date('24-MAY-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (49,14,to_date('24-MAY-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (50,15,to_date('25-MAY-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (50,16,to_date('25-MAY-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (51,17,to_date('27-MAY-21','DD-MON-RR'),to_date('29-MAY-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (51,18,to_date('27-MAY-21','DD-MON-RR'),to_date('29-MAY-21','DD-MON-RR'),0.1,5);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (52,19,to_date('28-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (52,20,to_date('28-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'),0.1,5);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (53,2,to_date('29-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'),0,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (53,3,to_date('29-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'),0,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (54,19,to_date('01-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (54,20,to_date('01-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (55,17,to_date('02-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (55,18,to_date('02-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (56,15,to_date('07-JUN-21','DD-MON-RR'),to_date('08-JUN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (56,16,to_date('07-JUN-21','DD-MON-RR'),to_date('08-JUN-21','DD-MON-RR'),0,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (57,13,to_date('10-JUN-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (57,14,to_date('10-JUN-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (58,11,to_date('13-JUN-21','DD-MON-RR'),to_date('14-JUN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (58,12,to_date('13-JUN-21','DD-MON-RR'),to_date('14-JUN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (59,9,to_date('19-JUN-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'),0.25,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (59,10,to_date('19-JUN-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (60,7,to_date('22-JUN-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (60,8,to_date('22-JUN-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'),0.1,3);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (61,5,to_date('25-JUN-21','DD-MON-RR'),to_date('27-JUN-21','DD-MON-RR'),0.15,4);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (61,6,to_date('25-JUN-21','DD-MON-RR'),to_date('27-JUN-21','DD-MON-RR'),0.15,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (62,3,to_date('26-JUN-21','DD-MON-RR'),to_date('29-JUN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (62,4,to_date('26-JUN-21','DD-MON-RR'),to_date('29-JUN-21','DD-MON-RR'),0,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (63,1,to_date('27-JUN-21','DD-MON-RR'),to_date('28-JUN-21','DD-MON-RR'),0,1);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (63,2,to_date('27-JUN-21','DD-MON-RR'),to_date('28-JUN-21','DD-MON-RR'),0.15,2);
Insert into C##LUCIFER.CHITIETPTP (MAPTP,MAPHONG,NGAYNP,NGAYTPTT,PHUTHU,SLNGUOI) values (64,13,to_date('29-JUN-21','DD-MON-RR'),to_date('30-JUN-21','DD-MON-RR'),0.15,1);
REM INSERTING into C##LUCIFER.CHITIETTTP
SET DEFINE OFF;
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('01-JAN-21','DD-MON-RR'),to_date('03-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('07-JAN-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('18-FEB-21','DD-MON-RR'),to_date('26-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('30-MAR-21','DD-MON-RR'),to_date('07-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('10-APR-21','DD-MON-RR'),to_date('03-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('07-MAY-21','DD-MON-RR'),to_date('26-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,1,to_date('29-JUN-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('15-FEB-21','DD-MON-RR'),to_date('17-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('27-MAR-21','DD-MON-RR'),to_date('29-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('08-APR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('04-MAY-21','DD-MON-RR'),to_date('06-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (1,3,to_date('27-JUN-21','DD-MON-RR'),to_date('28-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('01-JAN-21','DD-MON-RR'),to_date('03-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('07-JAN-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('03-MAR-21','DD-MON-RR'),to_date('16-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('22-MAR-21','DD-MON-RR'),to_date('07-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('10-APR-21','DD-MON-RR'),to_date('03-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('07-MAY-21','DD-MON-RR'),to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('01-JUN-21','DD-MON-RR'),to_date('26-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('29-JUN-21','DD-MON-RR'),to_date('13-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,1,to_date('17-JUL-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,2,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('08-APR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('04-MAY-21','DD-MON-RR'),to_date('06-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('29-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (2,3,to_date('27-JUN-21','DD-MON-RR'),to_date('28-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('01-JAN-21','DD-MON-RR'),to_date('03-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('07-JAN-21','DD-MON-RR'),to_date('24-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('28-FEB-21','DD-MON-RR'),to_date('28-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('03-MAR-21','DD-MON-RR'),to_date('16-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('22-MAR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('26-APR-21','DD-MON-RR'),to_date('06-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('11-MAY-21','DD-MON-RR'),to_date('28-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('01-JUN-21','DD-MON-RR'),to_date('25-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('30-JUN-21','DD-MON-RR'),to_date('13-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,1,to_date('17-JUL-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,2,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('04-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('25-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('01-MAR-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('17-MAR-21','DD-MON-RR'),to_date('21-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('22-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('07-MAY-21','DD-MON-RR'),to_date('10-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('29-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (3,3,to_date('26-JUN-21','DD-MON-RR'),to_date('29-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('01-JAN-21','DD-MON-RR'),to_date('24-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('28-FEB-21','DD-MON-RR'),to_date('28-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('03-MAR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('26-APR-21','DD-MON-RR'),to_date('06-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('11-MAY-21','DD-MON-RR'),to_date('25-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('30-JUN-21','DD-MON-RR'),to_date('13-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('17-JUL-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,1,to_date('05-AUG-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,2,to_date('14-JUL-21','DD-MON-RR'),to_date('16-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,3,to_date('25-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,3,to_date('01-MAR-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,3,to_date('22-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,3,to_date('07-MAY-21','DD-MON-RR'),to_date('10-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (4,3,to_date('26-JUN-21','DD-MON-RR'),to_date('29-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('01-JAN-21','DD-MON-RR'),to_date('17-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('21-JAN-21','DD-MON-RR'),to_date('23-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('26-APR-21','DD-MON-RR'),to_date('28-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('03-MAY-21','DD-MON-RR'),to_date('07-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('12-MAY-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,1,to_date('28-JUN-21','DD-MON-RR'),to_date('31-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,2,to_date('01-AUG-21','DD-MON-RR'),to_date('04-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,3,to_date('18-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,3,to_date('24-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,3,to_date('29-APR-21','DD-MON-RR'),to_date('02-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,3,to_date('08-MAY-21','DD-MON-RR'),to_date('11-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (5,3,to_date('25-JUN-21','DD-MON-RR'),to_date('27-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('01-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('04-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('03-MAR-21','DD-MON-RR'),to_date('13-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('19-MAR-21','DD-MON-RR'),to_date('13-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('16-APR-21','DD-MON-RR'),to_date('14-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('19-MAY-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('28-JUN-21','DD-MON-RR'),to_date('20-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,1,to_date('25-SEP-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,2,to_date('21-SEP-21','DD-MON-RR'),to_date('24-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('01-FEB-21','DD-MON-RR'),to_date('03-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('14-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('14-APR-21','DD-MON-RR'),to_date('15-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('15-MAY-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (6,3,to_date('25-JUN-21','DD-MON-RR'),to_date('27-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('01-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('04-FEB-21','DD-MON-RR'),to_date('27-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('03-MAR-21','DD-MON-RR'),to_date('13-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('19-MAR-21','DD-MON-RR'),to_date('13-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('16-APR-21','DD-MON-RR'),to_date('14-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('19-MAY-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('25-JUN-21','DD-MON-RR'),to_date('20-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,1,to_date('25-SEP-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,2,to_date('21-SEP-21','DD-MON-RR'),to_date('24-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('01-FEB-21','DD-MON-RR'),to_date('03-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('28-FEB-21','DD-MON-RR'),to_date('02-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('14-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('14-APR-21','DD-MON-RR'),to_date('15-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('15-MAY-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (7,3,to_date('22-JUN-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('01-JAN-21','DD-MON-RR'),to_date('25-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('29-JAN-21','DD-MON-RR'),to_date('11-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('15-FEB-21','DD-MON-RR'),to_date('13-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('19-MAR-21','DD-MON-RR'),to_date('24-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('28-APR-21','DD-MON-RR'),to_date('14-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('19-MAY-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('25-JUN-21','DD-MON-RR'),to_date('09-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,1,to_date('13-AUG-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,2,to_date('10-AUG-21','DD-MON-RR'),to_date('12-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('26-JAN-21','DD-MON-RR'),to_date('28-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('12-FEB-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('14-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('25-APR-21','DD-MON-RR'),to_date('27-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('15-MAY-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (8,3,to_date('22-JUN-21','DD-MON-RR'),to_date('24-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('01-JAN-21','DD-MON-RR'),to_date('18-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('21-JAN-21','DD-MON-RR'),to_date('31-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('04-APR-21','DD-MON-RR'),to_date('19-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('23-MAY-21','DD-MON-RR'),to_date('18-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('22-JUN-21','DD-MON-RR'),to_date('09-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,1,to_date('13-AUG-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,2,to_date('10-AUG-21','DD-MON-RR'),to_date('12-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,3,to_date('19-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,3,to_date('01-APR-21','DD-MON-RR'),to_date('03-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,3,to_date('20-MAY-21','DD-MON-RR'),to_date('22-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (9,3,to_date('19-JUN-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('01-JAN-21','DD-MON-RR'),to_date('06-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('09-JAN-21','DD-MON-RR'),to_date('11-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('15-FEB-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('23-MAR-21','DD-MON-RR'),to_date('27-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('04-APR-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('23-MAY-21','DD-MON-RR'),to_date('18-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('22-JUN-21','DD-MON-RR'),to_date('27-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,1,to_date('31-JUL-21','DD-MON-RR'),to_date('26-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,2,to_date('28-JUL-21','DD-MON-RR'),to_date('30-JUL-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('06-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('12-FEB-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('19-MAR-21','DD-MON-RR'),to_date('22-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('28-MAR-21','DD-MON-RR'),to_date('31-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('01-APR-21','DD-MON-RR'),to_date('03-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (10,3,to_date('19-JUN-21','DD-MON-RR'),to_date('21-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('01-JAN-21','DD-MON-RR'),to_date('05-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('09-JAN-21','DD-MON-RR'),to_date('19-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('24-FEB-21','DD-MON-RR'),to_date('07-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('11-MAR-21','DD-MON-RR'),to_date('18-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('23-MAR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('13-APR-21','DD-MON-RR'),to_date('18-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('23-MAY-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('15-JUN-21','DD-MON-RR'),to_date('16-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,1,to_date('20-NOV-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,2,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('06-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('20-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('08-MAR-21','DD-MON-RR'),to_date('10-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('19-MAR-21','DD-MON-RR'),to_date('22-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('10-APR-21','DD-MON-RR'),to_date('12-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('19-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (11,3,to_date('12-JUN-21','DD-MON-RR'),to_date('14-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('01-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('24-JAN-21','DD-MON-RR'),to_date('14-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('18-FEB-21','DD-MON-RR'),to_date('19-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('24-FEB-21','DD-MON-RR'),to_date('07-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('11-MAR-21','DD-MON-RR'),to_date('09-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('13-APR-21','DD-MON-RR'),to_date('19-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('23-MAY-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('15-JUN-21','DD-MON-RR'),to_date('16-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,1,to_date('20-NOV-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,2,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('15-FEB-21','DD-MON-RR'),to_date('17-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('20-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('08-MAR-21','DD-MON-RR'),to_date('10-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('10-APR-21','DD-MON-RR'),to_date('12-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('20-MAY-21','DD-MON-RR'),to_date('22-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (12,3,to_date('13-JUN-21','DD-MON-RR'),to_date('14-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('01-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('24-JAN-21','DD-MON-RR'),to_date('15-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('19-FEB-21','DD-MON-RR'),to_date('23-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('26-APR-21','DD-MON-RR'),to_date('23-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('28-MAY-21','DD-MON-RR'),to_date('09-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('13-JUN-21','DD-MON-RR'),to_date('28-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('01-JUL-21','DD-MON-RR'),to_date('16-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,1,to_date('20-NOV-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,2,to_date('17-NOV-21','DD-MON-RR'),to_date('19-NOV-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('16-FEB-21','DD-MON-RR'),to_date('18-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('24-APR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('24-MAY-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('10-JUN-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (13,3,to_date('29-JUN-21','DD-MON-RR'),to_date('30-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('01-JAN-21','DD-MON-RR'),to_date('13-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('16-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('24-JAN-21','DD-MON-RR'),to_date('09-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('14-FEB-21','DD-MON-RR'),to_date('15-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('19-FEB-21','DD-MON-RR'),to_date('20-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('24-FEB-21','DD-MON-RR'),to_date('24-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('28-MAR-21','DD-MON-RR'),to_date('18-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('22-APR-21','DD-MON-RR'),to_date('23-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('28-MAY-21','DD-MON-RR'),to_date('09-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('13-JUN-21','DD-MON-RR'),to_date('20-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,1,to_date('25-OCT-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,2,to_date('21-OCT-21','DD-MON-RR'),to_date('24-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('14-JAN-21','DD-MON-RR'),to_date('15-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('10-FEB-21','DD-MON-RR'),to_date('13-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('16-FEB-21','DD-MON-RR'),to_date('18-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('21-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('25-MAR-21','DD-MON-RR'),to_date('27-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('24-MAY-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (14,3,to_date('10-JUN-21','DD-MON-RR'),to_date('12-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('01-JAN-21','DD-MON-RR'),to_date('20-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('24-JAN-21','DD-MON-RR'),to_date('01-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('06-FEB-21','DD-MON-RR'),to_date('20-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('24-FEB-21','DD-MON-RR'),to_date('18-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('22-APR-21','DD-MON-RR'),to_date('24-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('27-MAY-21','DD-MON-RR'),to_date('06-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('09-JUN-21','DD-MON-RR'),to_date('20-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,1,to_date('25-OCT-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,2,to_date('21-OCT-21','DD-MON-RR'),to_date('24-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('21-JAN-21','DD-MON-RR'),to_date('23-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('21-FEB-21','DD-MON-RR'),to_date('23-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('19-APR-21','DD-MON-RR'),to_date('21-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('25-MAY-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (15,3,to_date('07-JUN-21','DD-MON-RR'),to_date('08-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('01-JAN-21','DD-MON-RR'),to_date('01-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('06-FEB-21','DD-MON-RR'),to_date('26-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('01-MAR-21','DD-MON-RR'),to_date('24-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('28-APR-21','DD-MON-RR'),to_date('24-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('27-MAY-21','DD-MON-RR'),to_date('06-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('09-JUN-21','DD-MON-RR'),to_date('23-DEC-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,1,to_date('27-DEC-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,2,to_date('24-DEC-21','DD-MON-RR'),to_date('26-DEC-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,3,to_date('02-FEB-21','DD-MON-RR'),to_date('05-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,3,to_date('27-FEB-21','DD-MON-RR'),to_date('28-FEB-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,3,to_date('25-APR-21','DD-MON-RR'),to_date('27-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,3,to_date('25-MAY-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (16,3,to_date('07-JUN-21','DD-MON-RR'),to_date('08-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('01-JAN-21','DD-MON-RR'),to_date('28-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('01-FEB-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('29-APR-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('30-MAY-21','DD-MON-RR'),to_date('01-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('04-JUN-21','DD-MON-RR'),to_date('18-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,1,to_date('22-AUG-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,2,to_date('19-AUG-21','DD-MON-RR'),to_date('21-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,3,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,3,to_date('26-APR-21','DD-MON-RR'),to_date('28-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,3,to_date('27-MAY-21','DD-MON-RR'),to_date('29-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (17,3,to_date('02-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('01-JAN-21','DD-MON-RR'),to_date('28-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('01-FEB-21','DD-MON-RR'),to_date('03-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('06-MAR-21','DD-MON-RR'),to_date('23-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('27-MAR-21','DD-MON-RR'),to_date('25-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('29-APR-21','DD-MON-RR'),to_date('26-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('30-MAY-21','DD-MON-RR'),to_date('01-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('04-JUN-21','DD-MON-RR'),to_date('18-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,1,to_date('22-AUG-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,2,to_date('19-AUG-21','DD-MON-RR'),to_date('21-AUG-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('04-MAR-21','DD-MON-RR'),to_date('05-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('24-MAR-21','DD-MON-RR'),to_date('26-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('26-APR-21','DD-MON-RR'),to_date('28-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('27-MAY-21','DD-MON-RR'),to_date('29-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (18,3,to_date('02-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('01-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('12-JAN-21','DD-MON-RR'),to_date('28-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('01-FEB-21','DD-MON-RR'),to_date('03-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('06-MAR-21','DD-MON-RR'),to_date('13-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('18-APR-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('04-JUN-21','DD-MON-RR'),to_date('15-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,1,to_date('18-SEP-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,2,to_date('16-SEP-21','DD-MON-RR'),to_date('17-SEP-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('09-JAN-21','DD-MON-RR'),to_date('11-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('29-JAN-21','DD-MON-RR'),to_date('31-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('04-MAR-21','DD-MON-RR'),to_date('05-MAR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('14-APR-21','DD-MON-RR'),to_date('17-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('28-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (19,3,to_date('01-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,1,to_date('01-JAN-21','DD-MON-RR'),to_date('08-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,1,to_date('12-JAN-21','DD-MON-RR'),to_date('13-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,1,to_date('18-APR-21','DD-MON-RR'),to_date('27-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,1,to_date('04-JUN-21','DD-MON-RR'),to_date('12-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,1,to_date('16-OCT-21','DD-MON-RR'),to_date('27-JUN-24','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,2,to_date('13-OCT-21','DD-MON-RR'),to_date('15-OCT-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,3,to_date('09-JAN-21','DD-MON-RR'),to_date('11-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,3,to_date('14-APR-21','DD-MON-RR'),to_date('17-APR-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,3,to_date('28-MAY-21','DD-MON-RR'),to_date('31-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.CHITIETTTP (MAPHONG,MATTP,NGAYBD,NGAYKT) values (20,3,to_date('01-JUN-21','DD-MON-RR'),to_date('03-JUN-21','DD-MON-RR'));
REM INSERTING into C##LUCIFER.DICHVU
SET DEFINE OFF;
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (1,'Mượn đồ',230000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (2,'Giặt là',139000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (3,'Mát xa',549000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (4,'Xông hơi',439000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (5,'Thuê xe ôtô',439000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (6,'Thuê xe máy',239000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (7,'Thuê xe đạp',59000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (8,'Buffet dinner',2500000,2);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (9,'Buffet lunch',2000000,2);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (10,'Buffet breakfast',1759000,2);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (11,'Tổ chức hội thảo',54999000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (12,'Tổ chức tiệc cưới',83239000,2);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (13,'Fitness centre',0,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (14,'Dịch vụ trông trẻ',0,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (15,'Quầy bar',34900000,2);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (16,'Casino',15439000,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (19,'Chở khách hàng đi tham quan',0,3);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (17,'Dọn phòng',0,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (18,'Đưa đón khách hàng ra sân bay',150000,3);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (20,'Đặt vé máy bay',0,4);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (21,'Đổi tiền tệ',0,1);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (22,'Thuê phòng họp',50325000,6);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (23,'Đặt vé khu vui chơi',320000,5);
Insert into C##LUCIFER.DICHVU (MADV,TENDV,GIADV,MADONVI) values (24,'Đặt phòng Karaoke',0,7);
REM INSERTING into C##LUCIFER.DONVI
SET DEFINE OFF;
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (8,'Grab''s Corporation');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (1,'Lucifer’s Hotel');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (2,'Lumina’s Restaurant');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (3,'Mai Linh Corporation');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (4,'Vietnam Airline');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (5,'DamSen’s Park');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (6,'Red’s Restaurant');
Insert into C##LUCIFER.DONVI (MADONVI,TENDONVI) values (7,'Nano’s Karaoke');
REM INSERTING into C##LUCIFER.HOADON
SET DEFINE OFF;
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (1,86984755,to_date('01-JAN-21','DD-MON-RR'),1,7,null,1);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (2,30642700,to_date('06-JAN-21','DD-MON-RR'),1,1,1,2);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (3,5280000,to_date('08-JAN-21','DD-MON-RR'),1,2,2,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (4,34661000,to_date('11-JAN-21','DD-MON-RR'),1,3,3,3);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (5,7590000,to_date('16-JAN-21','DD-MON-RR'),1,4,4,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (6,23582900,to_date('16-JAN-21','DD-MON-RR'),1,5,5,4);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (7,11385000,to_date('20-JAN-21','DD-MON-RR'),1,6,6,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (8,5225000,to_date('20-JAN-21','DD-MON-RR'),1,7,7,5);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (9,29782500,to_date('23-JAN-21','DD-MON-RR'),1,8,8,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (10,6314000,to_date('28-JAN-21','DD-MON-RR'),1,9,9,6);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (11,21433500,to_date('31-JAN-21','DD-MON-RR'),1,10,10,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (12,9900000,to_date('03-FEB-21','DD-MON-RR'),1,11,11,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (13,1934900,to_date('02-FEB-21','DD-MON-RR'),1,17,null,7);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (14,25300000,to_date('05-FEB-21','DD-MON-RR'),1,12,12,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (15,10120000,to_date('13-FEB-21','DD-MON-RR'),1,13,13,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (16,60498900,to_date('11-FEB-21','DD-MON-RR'),1,9,null,8);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (17,9487500,to_date('14-FEB-21','DD-MON-RR'),1,14,14,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (18,7590000,to_date('17-FEB-21','DD-MON-RR'),1,15,15,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (19,17616500,to_date('18-FEB-21','DD-MON-RR'),1,16,16,9);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (20,80960000,to_date('23-MAR-21','DD-MON-RR'),1,17,17,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (21,13860000,to_date('23-FEB-21','DD-MON-RR'),1,1,18,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (22,285527000,to_date('27-MAR-21','DD-MON-RR'),1,2,19,10);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (23,7590000,to_date('28-FEB-21','DD-MON-RR'),1,3,20,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (24,17077500,to_date('02-MAR-21','DD-MON-RR'),1,4,21,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (25,19140000,to_date('02-MAR-21','DD-MON-RR'),1,5,22,11);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (26,9790000,to_date('05-MAR-21','DD-MON-RR'),1,6,23,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (27,8728500,to_date('10-MAR-21','DD-MON-RR'),1,7,24,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (28,20240000,to_date('18-MAR-21','DD-MON-RR'),1,8,25,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (29,60498900,to_date('16-MAR-21','DD-MON-RR'),1,12,null,12);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (30,19250000,to_date('21-MAR-21','DD-MON-RR'),1,9,26,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (31,8096000,to_date('22-MAR-21','DD-MON-RR'),1,10,27,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (32,9900000,to_date('26-MAR-21','DD-MON-RR'),1,11,28,13);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (33,7590000,to_date('27-MAR-21','DD-MON-RR'),1,12,29,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (34,54248700,to_date('29-MAR-21','DD-MON-RR'),1,13,30,14);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (35,4048000,to_date('31-MAR-21','DD-MON-RR'),1,14,31,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (36,3869800,to_date('29-MAR-21','DD-MON-RR'),1,15,null,15);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (37,9240000,to_date('03-APR-21','DD-MON-RR'),1,15,32,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (38,6301900,to_date('09-APR-21','DD-MON-RR'),1,16,33,16);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (39,8085000,to_date('12-APR-21','DD-MON-RR'),1,17,34,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (40,8800000,to_date('11-APR-21','DD-MON-RR'),1,4,null,17);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (41,7260000,to_date('15-APR-21','DD-MON-RR'),1,1,35,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (42,5500000,to_date('14-APR-21','DD-MON-RR'),1,10,null,18);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (43,16720000,to_date('17-APR-21','DD-MON-RR'),1,2,36,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (44,15840000,to_date('21-APR-21','DD-MON-RR'),1,3,37,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (45,22712800,to_date('24-APR-21','DD-MON-RR'),1,4,38,19);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (46,12100000,to_date('25-APR-21','DD-MON-RR'),1,5,39,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (47,18888100,to_date('27-APR-21','DD-MON-RR'),1,6,40,20);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (48,17836500,to_date('28-APR-21','DD-MON-RR'),1,7,41,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (49,13860000,to_date('02-MAY-21','DD-MON-RR'),1,8,42,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (50,55357500,to_date('03-MAY-21','DD-MON-RR'),1,3,null,21);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (51,37290000,to_date('26-MAY-21','DD-MON-RR'),1,9,43,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (52,16280000,to_date('10-MAY-21','DD-MON-RR'),1,11,44,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (53,16982900,to_date('08-MAY-21','DD-MON-RR'),1,5,null,22);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (54,22770000,to_date('11-MAY-21','DD-MON-RR'),1,12,45,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (55,18304000,to_date('18-MAY-21','DD-MON-RR'),1,13,46,23);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (56,8096000,to_date('22-MAY-21','DD-MON-RR'),1,10,47,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (57,13282500,to_date('22-MAY-21','DD-MON-RR'),1,14,48,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (58,44958100,to_date('27-MAY-21','DD-MON-RR'),1,15,49,24);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (59,12650000,to_date('26-MAY-21','DD-MON-RR'),1,16,50,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (60,37317500,to_date('29-MAY-21','DD-MON-RR'),1,17,51,25);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (61,18040000,to_date('31-MAY-21','DD-MON-RR'),1,1,52,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (62,11550000,to_date('31-MAY-21','DD-MON-RR'),1,2,53,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (63,14421000,to_date('03-JUN-21','DD-MON-RR'),1,3,54,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (64,12265000,to_date('03-JUN-21','DD-MON-RR'),1,4,55,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (65,91562900,to_date('05-JUN-21','DD-MON-RR'),1,14,null,26);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (66,17353600,to_date('12-JUN-21','DD-MON-RR'),1,6,57,27);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (67,6149000,to_date('14-JUN-21','DD-MON-RR'),1,7,58,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (68,20960500,to_date('21-JUN-21','DD-MON-RR'),1,8,59,28);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (69,11121000,to_date('24-JUN-21','DD-MON-RR'),1,9,60,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (70,18647200,to_date('27-JUN-21','DD-MON-RR'),1,10,61,29);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (71,16280000,to_date('29-JUN-21','DD-MON-RR'),1,11,62,null);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (72,120725000,to_date('28-JUN-21','DD-MON-RR'),1,12,63,30);
Insert into C##LUCIFER.HOADON (MAHD,TONGTIEN,NGAYTT,MANV,MAKH,MAPTP,MAPDV) values (73,5060000,to_date('30-JUN-21','DD-MON-RR'),1,13,64,null);
REM INSERTING into C##LUCIFER.KHACHHANG
SET DEFINE OFF;
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (1,'Vũ Thị Tuyết','185201',to_date('24-NOV-84','DD-MON-RR'),'Nữ','30301','Việt Nam',69802700,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (2,'Lê Sỹ Minh','185202',to_date('06-MAY-89','DD-MON-RR'),'Nam','30302','Việt Nam',319077000,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (3,'Velasquez Carmen',null,to_date('03-MAR-90','DD-MON-RR'),'Nữ','30303','USA',127869500,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (4,'Robeburn Audry',null,to_date('02-JUL-95','DD-MON-RR'),'Nam','30304','Pháp',68445300,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (6,'Phạm Châu Tung','185206',to_date('30-DEC-70','DD-MON-RR'),'Nam','30306','Campuchia',57416700,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (7,'Bela Dancs',null,to_date('09-SEP-95','DD-MON-RR'),'Nữ','30307','Canada',124923755,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (8,'Json Chang',null,to_date('21-OCT-89','DD-MON-RR'),'Nam','30308','Hà Lan',84843000,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (9,'Võ Thu Thủy','185209',to_date('04-JUN-00','DD-MON-RR'),'Nữ','30309','Việt Nam',134473900,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (10,'Huyneda Schwart',null,to_date('24-MAY-98','DD-MON-RR'),'Nữ','30310','Nh?t B?n',61772700,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (20,'Cao Hưng Phú','185220',to_date('24-JUL-01','DD-MON-RR'),'Nam','30320','Việt Nam',0,1);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (18,'Nguyễn Ngọc Thiện','185218',to_date('02-MAR-01','DD-MON-RR'),'Nam','30318','Việt Nam',0,1);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (19,'Charles Lowry',null,to_date('01-MAY-99','DD-MON-RR'),'Nam','30319','Israel',0,1);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (5,'Phan Văn Quyên','185205',to_date('11-AUG-80','DD-MON-RR'),'Nữ','30305','Việt Nam',71805800,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (11,'Trần Thị Kiều Mỹ','185211',to_date('02-MAR-01','DD-MON-RR'),'Nữ','30311','Việt Nam',52360000,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (12,'Jonh Cenira',null,to_date('05-JUL-95','DD-MON-RR'),'Nam','30312','United Kingdom',236883900,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (13,'Via Bahia',null,to_date('01-FEB-98','DD-MON-RR'),'Nam','30313','Brazil',87732700,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (14,'Futbol Sonorada',null,to_date('31-DEC-97','DD-MON-RR'),'Nữ','30314','Mexico',118380900,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (15,'Lê Thái Đạt','185215',to_date('21-AUG-97','DD-MON-RR'),'Nam','30315','Việt Nam',65657900,2);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (16,'Fernand Hanks',null,to_date('11-AUG-00','DD-MON-RR'),'Nam','30316','Australia',36568400,1);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (17,'Trần Đình Phú','185217',to_date('20-FEB-87','DD-MON-RR'),'Nam','30317','Việt Nam',128297400,3);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (21,'Đặng Vũ Phương Uyên','079301003666',to_date('05-MAR-21','DD-MON-RR'),'Nữ','0773915608','Việt Nam',0,1);
Insert into C##LUCIFER.KHACHHANG (MAKH,TENKH,CCCDKH,NGAYSINHKH,GIOITINHKH,SDTKH,QUOCTICH,DOANHSO,MALKH) values (26,'CoCa CoLa','223',to_date('01-JAN-93','DD-MON-RR'),'Nam','123','Việt Nam',0,1);
REM INSERTING into C##LUCIFER.KHUYENMAI
SET DEFINE OFF;
Insert into C##LUCIFER.KHUYENMAI (MAKM,TENKM,TUNGAY,DENNGAY) values (1,'Mừng ngày phụ nữ Việt Nam',to_date('19-OCT-20','DD-MON-RR'),to_date('21-OCT-20','DD-MON-RR'));
Insert into C##LUCIFER.KHUYENMAI (MAKM,TENKM,TUNGAY,DENNGAY) values (2,'Kỷ niệm 5 năm ngày thành lập khách sạn',to_date('30-DEC-20','DD-MON-RR'),to_date('02-JAN-21','DD-MON-RR'));
Insert into C##LUCIFER.KHUYENMAI (MAKM,TENKM,TUNGAY,DENNGAY) values (3,'Mừng ngày 30/04/1975',to_date('29-APR-21','DD-MON-RR'),to_date('02-MAY-21','DD-MON-RR'));
Insert into C##LUCIFER.KHUYENMAI (MAKM,TENKM,TUNGAY,DENNGAY) values (4,'Tết thiếu nhi',to_date('01-JUN-21','DD-MON-RR'),to_date('02-JUN-21','DD-MON-RR'));
Insert into C##LUCIFER.KHUYENMAI (MAKM,TENKM,TUNGAY,DENNGAY) values (6,'Mùa hè nhộn nhịp',to_date('25-JUL-21','DD-MON-RR'),to_date('01-AUG-21','DD-MON-RR'));
REM INSERTING into C##LUCIFER.LOAIKHACHHANG
SET DEFINE OFF;
Insert into C##LUCIFER.LOAIKHACHHANG (MALKH,TENLKH) values (1,'Thành viên');
Insert into C##LUCIFER.LOAIKHACHHANG (MALKH,TENLKH) values (2,'Thân thiết');
Insert into C##LUCIFER.LOAIKHACHHANG (MALKH,TENLKH) values (3,'VIP');
REM INSERTING into C##LUCIFER.LOAIPHONG
SET DEFINE OFF;
Insert into C##LUCIFER.LOAIPHONG (MALP,TENLP,GIAPHONG,SLTOIDA) values (1,'Standard Room',800000,3);
Insert into C##LUCIFER.LOAIPHONG (MALP,TENLP,GIAPHONG,SLTOIDA) values (2,'Superior Room',1500000,3);
Insert into C##LUCIFER.LOAIPHONG (MALP,TENLP,GIAPHONG,SLTOIDA) values (3,'Deluxe Room',2000000,3);
Insert into C##LUCIFER.LOAIPHONG (MALP,TENLP,GIAPHONG,SLTOIDA) values (4,'Suite Room',1700000,3);
Insert into C##LUCIFER.LOAIPHONG (MALP,TENLP,GIAPHONG,SLTOIDA) values (5,'Connecting Room',3000000,5);
REM INSERTING into C##LUCIFER.NHANVIEN
SET DEFINE OFF;
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (1,'Đinh Trọng Huy','195201',to_date('08-JUN-81','DD-MON-RR'),'Nam','Quản lý',to_date('01-JAN-17','DD-MON-RR'),'admin','admin','huydinh01@gmail.com',null);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (2,'Đào Mạnh Huy','195202',to_date('27-FEB-86','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-17','DD-MON-RR'),'user2','user2','huydao02@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (4,'Nguyễn Ngọc Huyền','195204',to_date('09-JUN-88','DD-MON-RR'),'Nữ','Nhân viên lễ tân',to_date('01-JAN-17','DD-MON-RR'),'user4','user4','huyennguyen04@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (6,'Lê Trọng Tấn','195206',to_date('03-DEC-89','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-18','DD-MON-RR'),'user6','user6','letan06@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (7,'Phạm Văn Hoàn','195207',to_date('25-MAY-97','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-20','DD-MON-RR'),'user7','user7','hoanpham07@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (8,'Dương Đắc Thọ','195208',to_date('11-APR-99','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-21','DD-MON-RR'),'user8','user8','thoduong08@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (9,'Phạm Minh Hiên','195209',to_date('07-JUL-99','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-21','DD-MON-RR'),'user9','user9','hienphan09@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (10,'Trần Minh Thành','19521012121',to_date('14-MAY-98','DD-MON-RR'),'Nam','Nhân viên lễ tân',to_date('01-JAN-20','DD-MON-RR'),'user10','user10','thanhtran10@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (5,'Phạm Thu Huyền','195205',to_date('09-NOV-90','DD-MON-RR'),'Nữ','Nhân viên lễ tân',to_date('01-JAN-19','DD-MON-RR'),'user5','user5','huyenpham05@gmail.com',1);
Insert into C##LUCIFER.NHANVIEN (MANV,TENNV,CCCDNV,NGAYSINHNV,GIOITINHNV,CHUCVU,NGAYVL,TENND,PASSWORD,EMAILNV,MAQL) values (3,'Lê Thu Huyền','195203',to_date('23-OCT-85','DD-MON-RR'),'Nữ','Nhân viên lễ tân',to_date('01-JAN-17','DD-MON-RR'),'user3','user3','huyenle03@gmail.com',1);
REM INSERTING into C##LUCIFER.PHIEUDATTRUOC
SET DEFINE OFF;
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (1,to_date('02-JAN-21','DD-MON-RR'),1,10,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (2,to_date('04-JAN-21','DD-MON-RR'),4,4,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (3,to_date('05-JAN-21','DD-MON-RR'),6,6,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (4,to_date('08-JAN-21','DD-MON-RR'),2,6,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (5,to_date('09-JAN-21','DD-MON-RR'),12,7,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (6,to_date('01-FEB-21','DD-MON-RR'),4,8,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (7,to_date('14-FEB-21','DD-MON-RR'),17,9,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (8,to_date('14-FEB-21','DD-MON-RR'),10,10,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (9,to_date('20-FEB-21','DD-MON-RR'),11,2,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (10,to_date('23-FEB-21','DD-MON-RR'),9,3,2);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (11,to_date('01-APR-21','DD-MON-RR'),14,4,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (12,to_date('02-APR-21','DD-MON-RR'),15,5,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (13,to_date('24-APR-21','DD-MON-RR'),16,6,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (14,to_date('25-APR-21','DD-MON-RR'),17,7,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (15,to_date('03-MAY-21','DD-MON-RR'),1,8,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (16,to_date('03-MAY-21','DD-MON-RR'),2,9,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (17,to_date('14-MAY-21','DD-MON-RR'),3,10,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (18,to_date('14-MAY-21','DD-MON-RR'),4,1,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (19,to_date('15-MAY-21','DD-MON-RR'),5,2,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (20,to_date('16-MAY-21','DD-MON-RR'),6,3,1);
Insert into C##LUCIFER.PHIEUDATTRUOC (MAPDT,NGAYDT,MAKH,MANV,MATT) values (21,to_date('30-MAY-21','DD-MON-RR'),7,4,1);
REM INSERTING into C##LUCIFER.PHIEUDICHVU
SET DEFINE OFF;
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (36,439000,21,1,1);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (1,86984755,7,4,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (2,14717000,1,5,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (3,17500000,3,6,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (4,15439000,5,7,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (5,150000,7,8,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (6,640000,9,9,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (7,1759000,17,10,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (8,54999000,9,1,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (9,2215000,16,2,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (10,139600000,2,3,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (11,10000000,5,4,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (12,54999000,12,5,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (13,0,11,6,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (14,46317000,13,7,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (15,3518000,15,8,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (16,439000,16,9,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (17,8000000,4,10,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (18,5000000,10,1,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (19,7883000,4,2,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (20,956000,6,3,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (21,50325000,3,4,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (22,15439000,5,5,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (23,1920000,13,6,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (24,23271000,15,7,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (25,18415000,17,8,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (26,83239000,14,9,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (27,1976000,6,10,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (28,8795000,8,1,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (29,1427000,10,2,2);
Insert into C##LUCIFER.PHIEUDICHVU (MAPDV,TIENDV,MAKH,MANV,MATT) values (30,104700000,12,3,2);
REM INSERTING into C##LUCIFER.PHIEUTHUEPHONG
SET DEFINE OFF;
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (1,13140000,1,8,1,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (2,4800000,2,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (3,14010000,3,3,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (4,6900000,4,4,2,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (5,6000000,5,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (6,10350000,6,6,3,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (7,4600000,7,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (8,27075000,8,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (9,5100000,9,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (10,19485000,10,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (11,9000000,11,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (12,23000000,12,3,5,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (13,9200000,13,4,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (14,8625000,14,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (15,6900000,15,6,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (16,13800000,16,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (17,73600000,17,4,7,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (18,12600000,1,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (19,119970000,2,5,4,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (20,6900000,3,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (21,15525000,4,6,6,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (22,7400000,5,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (23,8900000,6,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (24,7935000,7,3,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (25,18400000,8,4,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (26,17500000,9,7,10,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (27,7360000,10,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (28,9000000,11,8,9,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (29,6900000,12,6,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (30,3000000,13,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (31,3680000,14,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (32,8400000,15,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (33,5290000,16,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (34,7350000,17,1,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (35,6600000,1,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (36,15200000,2,3,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (37,14400000,3,4,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (38,12765000,4,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (39,11000000,5,6,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (40,16215000,6,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (41,16215000,7,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (42,12600000,8,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (43,33900000,9,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (44,14800000,11,1,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (45,20700000,12,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (46,14720000,13,3,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (47,7360000,10,4,8,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (48,12075000,14,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (49,17600000,15,6,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (50,11500000,16,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (51,15510000,17,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (52,16400000,1,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (53,10500000,2,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (54,13110000,3,1,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (55,11150000,4,2,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (56,0,5,3,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (57,13800000,6,4,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (58,5590000,7,5,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (59,10260000,8,6,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (60,10110000,9,7,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (61,15525000,10,8,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (62,14800000,11,9,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (63,5050000,12,10,null,2);
Insert into C##LUCIFER.PHIEUTHUEPHONG (MAPTP,TIENPHONG,MAKH,MANV,MAPDT,MATT) values (64,4600000,13,1,null,2);
REM INSERTING into C##LUCIFER.PHONG
SET DEFINE OFF;
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (1,'SD101',null,1);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (2,'SP102',null,2);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (3,'DL203',null,3);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (4,'ST204',null,4);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (5,'CN305',null,5);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (6,'SP306',null,2);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (7,'SP407',null,2);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (8,'ST408',null,4);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (9,'DL509',null,3);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (10,'SD510',null,1);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (11,'SD611',null,1);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (12,'SP612',null,2);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (13,'DL713',null,3);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (14,'DL714',null,3);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (15,'DL815',null,3);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (16,'CN816',null,5);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (17,'ST917',null,4);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (18,'CN918',null,5);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (19,'SD1019',null,1);
Insert into C##LUCIFER.PHONG (MAPHONG,TENPHONG,GHICHU,MALP) values (20,'CN1020',null,5);
REM INSERTING into C##LUCIFER.QUYDINH
SET DEFINE OFF;
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (1,'Quy định 1','Có năm loại phòng và mỗi loại phòng có một mức giá nhất định');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (2,'Quy định 2','Đối với các phòng có người nước ngoài thuê, thì phụ thu thêm 15%');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (3,'Quy định 3','Các phòng có số lượng người bằng với số lượng tối đa thì phụ thu thêm 10%');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (4,'Quy định 4','Các phòng có số lượng người lớn hơn số lượng tối đa thì thông báo với khách hàng để thuê thêm phòng');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (6,'Quy định 6','Hệ thống sẽ được kiểm tra định kỳ vào đầu tháng');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (7,'Quy định 7','Ngày 05/07, khách sạn tạm ngưng hoạt động một ngày.');
Insert into C##LUCIFER.QUYDINH (MAQD,TENQD,MOTA) values (5,'Quy định 5','Nhân viên làm việc vào thứ 7 và chủ nhật sẽ được tăng lương');
REM INSERTING into C##LUCIFER.TINHTRANGPHIEU
SET DEFINE OFF;
Insert into C##LUCIFER.TINHTRANGPHIEU (MATT,TENTT) values (1,'Chưa sử dụng');
Insert into C##LUCIFER.TINHTRANGPHIEU (MATT,TENTT) values (2,'Đã sử dụng');
REM INSERTING into C##LUCIFER.TINHTRANGPHONG
SET DEFINE OFF;
Insert into C##LUCIFER.TINHTRANGPHONG (MATTP,TENTTP) values (1,'Trống');
Insert into C##LUCIFER.TINHTRANGPHONG (MATTP,TENTTP) values (2,'Đặt trước');
Insert into C##LUCIFER.TINHTRANGPHONG (MATTP,TENTTP) values (3,'Thuê');
--------------------------------------------------------
--  DDL for Index CTKM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTKM_PK" ON "C##LUCIFER"."CHITIETKM" ("MAKM", "MALKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPDT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPDT_PK" ON "C##LUCIFER"."CHITIETPDT" ("MAPDT", "MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPDV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPDV_PK" ON "C##LUCIFER"."CHITIETPDV" ("MADV", "MAPDV", "NGAYSD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPTP_PK" ON "C##LUCIFER"."CHITIETPTP" ("MAPTP", "MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTTTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTTTP_PK" ON "C##LUCIFER"."CHITIETTTP" ("MAPHONG", "MATTP", "NGAYBD", "NGAYKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DONVI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."DONVI_PK" ON "C##LUCIFER"."DONVI" ("MADONVI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."DV_PK" ON "C##LUCIFER"."DICHVU" ("MADV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."HD_PK" ON "C##LUCIFER"."HOADON" ("MAHD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."KH_PK" ON "C##LUCIFER"."KHACHHANG" ("MAKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."KM_PK" ON "C##LUCIFER"."KHUYENMAI" ("MAKM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LKH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."LKH_PK" ON "C##LUCIFER"."LOAIKHACHHANG" ("MALKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."LP_PK" ON "C##LUCIFER"."LOAIPHONG" ("MALP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index NV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."NV_PK" ON "C##LUCIFER"."NHANVIEN" ("MANV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PDT_PK" ON "C##LUCIFER"."PHIEUDATTRUOC" ("MAPDT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PDV_PK" ON "C##LUCIFER"."PHIEUDICHVU" ("MAPDV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PTP_PK" ON "C##LUCIFER"."PHIEUTHUEPHONG" ("MAPTP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index P_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."P_PK" ON "C##LUCIFER"."PHONG" ("MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index QD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."QD_PK" ON "C##LUCIFER"."QUYDINH" ("MAQD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."TTP_PK" ON "C##LUCIFER"."TINHTRANGPHONG" ("MATTP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."TT_PK" ON "C##LUCIFER"."TINHTRANGPHIEU" ("MATT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UK_NV
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."UK_NV" ON "C##LUCIFER"."NHANVIEN" ("CCCDNV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTKM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTKM_PK" ON "C##LUCIFER"."CHITIETKM" ("MAKM", "MALKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPDT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPDT_PK" ON "C##LUCIFER"."CHITIETPDT" ("MAPDT", "MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPDV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPDV_PK" ON "C##LUCIFER"."CHITIETPDV" ("MADV", "MAPDV", "NGAYSD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTPTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTPTP_PK" ON "C##LUCIFER"."CHITIETPTP" ("MAPTP", "MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CTTTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."CTTTP_PK" ON "C##LUCIFER"."CHITIETTTP" ("MAPHONG", "MATTP", "NGAYBD", "NGAYKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."DV_PK" ON "C##LUCIFER"."DICHVU" ("MADV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DONVI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."DONVI_PK" ON "C##LUCIFER"."DONVI" ("MADONVI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."HD_PK" ON "C##LUCIFER"."HOADON" ("MAHD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."KH_PK" ON "C##LUCIFER"."KHACHHANG" ("MAKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."KM_PK" ON "C##LUCIFER"."KHUYENMAI" ("MAKM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LKH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."LKH_PK" ON "C##LUCIFER"."LOAIKHACHHANG" ("MALKH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."LP_PK" ON "C##LUCIFER"."LOAIPHONG" ("MALP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index NV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."NV_PK" ON "C##LUCIFER"."NHANVIEN" ("MANV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UK_NV
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."UK_NV" ON "C##LUCIFER"."NHANVIEN" ("CCCDNV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PDT_PK" ON "C##LUCIFER"."PHIEUDATTRUOC" ("MAPDT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDV_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PDV_PK" ON "C##LUCIFER"."PHIEUDICHVU" ("MAPDV") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."PTP_PK" ON "C##LUCIFER"."PHIEUTHUEPHONG" ("MAPTP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index P_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."P_PK" ON "C##LUCIFER"."PHONG" ("MAPHONG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index QD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."QD_PK" ON "C##LUCIFER"."QUYDINH" ("MAQD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."TT_PK" ON "C##LUCIFER"."TINHTRANGPHIEU" ("MATT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TTP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LUCIFER"."TTP_PK" ON "C##LUCIFER"."TINHTRANGPHONG" ("MATTP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    -- KIEM TRA DOANH SO
    -- KIEM TRA MALKH
    :NEW.DOANHSO := 0;
    :NEW.MALKH := 1;
END;

/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
BEGIN
    IF :NEW.TENND IS NULL THEN 
        BEGIN
            :NEW.TENND := 'user'||:new.manv;
        END;
    END IF;
    IF :NEW.PASSWORD IS NULL THEN 
        BEGIN
            :NEW.PASSWORD := 'user'||:new.manv;
        END;
    END IF;	
END;
/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.NGAYDT) IS NULL THEN
        BEGIN
            :NEW.NGAYDT := SYSDATE;
        END;
    END IF;
    :NEW.MATT := 1;
END;

/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HUY_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."HUY_PHIEUDATTRUOC" 
BEFORE DELETE ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    KIEM_TRA INT;
    CURSOR CUR_PHONG IS SELECT MAPHONG, NGAYNP, NGAYTPDD
                        FROM CHITIETPDT CTPDT JOIN PHIEUDATTRUOC PDT ON PDT.MAPDT = CTPDT.MAPDT
                        WHERE PDT.MAPDT = :OLD.MAPDT AND MATT = 1;
    V_PHONG PHONG.MAPHONG%TYPE;
    V_NGAYNP CHITIETPDT.NGAYNP%TYPE;
    V_NGAYTPDD CHITIETPDT.NGAYTPDD%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = :OLD.MAPDT AND MATT = 1;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu đặt trước này không tồn tại, vui lòng kiểm tra lai');
        END;
    ELSE
        BEGIN
            OPEN CUR_PHONG;
            LOOP
                FETCH CUR_PHONG INTO V_PHONG, V_NGAYNP, V_NGAYTPDD;
                EXIT WHEN CUR_PHONG%NOTFOUND;
                SUA_MATTP_CTTTP(V_PHONG, 1, V_NGAYNP, V_NGAYTPDD);

            END LOOP;
            CLOSE CUR_PHONG;

            DELETE FROM CHITIETPDT WHERE MAPDT = :OLD.MAPDT;
            COMMIT;
        END;
    END IF;
END;
/
ALTER TRIGGER "C##LUCIFER"."HUY_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_CCCDKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDKH_KHACHHANG" 
BEFORE INSERT OR UPDATE of CCCDKH ON KHACHHANG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_CCCDKH KHACHHANG.CCCDKH%TYPE;
    pragma autonomous_transaction;
BEGIN
    so_luong_loi := 0;
   IF LENGTH(:NEW.CCCDKH) > 12 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('CCCD khách hàng khồng quá 12 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSif :new.cccdkh is not null then
        BEGIN
            SELECT COUNT(CCCDKH) INTO V_CCCDKH
            FROM KHACHHANG
            WHERE CCCDKH = :NEW.CCCDKH AND MAKH <> :NEW.MAKH;

            IF V_CCCDKH > 0 THEN
                BEGIN   
                    DBMS_OUTPUT.PUT_LINE('CCCD này đã tồn tại, vui lòng kiểm tra lại');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;

    IF so_luong_loi > 0 and inserting THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
    ELSIF UPDATING THEN
        begin
            if so_luong_loi > 0 then
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật cccd khách hàng thất bại');
            else
                commit;
            end if;
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_CCCDNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDNV_NHANVIEN" 
BEFORE INSERT OR UPDATE OF CCCDNV ON NHANVIEN
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_CCCDNV NHANVIEN.CCCDNV%TYPE;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.CCCDNV) > 12 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('CCCD nhân viên phải ít hơn 13 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(CCCDNV) INTO V_CCCDNV
            FROM NHANVIEN
            WHERE CCCDNV = :NEW.CCCDNV AND MANV <> :NEW.MANV;

            IF V_CCCDNV <> 0 THEN
                BEGIN   
                    DBMS_OUTPUT.PUT_LINE('CCCD này không tồn tại, vui lòng kiểm tra lại');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 and INSERTING THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
    elsif updating then
        begin
            IF so_luong_loi > 0 THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật cccd nhân viên thất bại');
            ELSE
                COMMIT;
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20002, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT" 
AFTER UPDATE OF NGAYNP ON CHITIETPDT
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:NEW.NGAYNP) AND
                TRUNC(NGAYKT) >= TRUNC(:OLD.NGAYNP - 1);
    IF TRUNC(:NEW.NGAYNP) < TRUNC(:OLD.NGAYNP) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu đặt phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPDD);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 2, :NEW.NGAYNP, :OLD.NGAYTPDD);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT" 
AFTER UPDATE OF NGAYTPDD ON CHITIETPDT
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:OLD.NGAYTPDD + 1) AND
                TRUNC(NGAYKT) >= TRUNC(:NEW.NGAYTPDD);
    IF TRUNC(:OLD.NGAYTPDD) < TRUNC(:NEW.NGAYTPDD) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu đặt phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPDD);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 2, :OLD.NGAYNP, :NEW.NGAYTPDD);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP" 
AFTER UPDATE OF NGAYTPTT ON CHITIETPTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:OLD.NGAYTPTT + 1) AND
                TRUNC(NGAYKT) >= TRUNC(:NEW.NGAYTPTT);
    IF TRUNC(:OLD.NGAYTPTT) < TRUNC(:NEW.NGAYTPTT) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPTT);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 3, :OLD.NGAYNP, :NEW.NGAYTPTT);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON" 
BEFORE UPDATE ON HOADON
FOR EACH ROW
DECLARE
    V_DOANHSO KHACHHANG.DOANHSO%TYPE;
    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    KIEM_TRA INT;
BEGIN    
    V_LKH := 1;
    SELECT DOANHSO INTO V_DOANHSO
    FROM KHACHHANG
    WHERE MAKH = :OLD.MAKH;

    V_DOANHSO := V_DOANHSO + :NEW.TONGTIEN - :OLD.TONGTIEN;

    IF V_DOANHSO >= 100000000 THEN
        BEGIN
            V_LKH := 3;
        END;
    ELSIF V_DOANHSO >= 50000000 THEN
        BEGIN
            V_LKH := 2;
        END;
    END IF;

    UPDATE KHACHHANG
    SET DOANHSO = V_DOANHSO, MALKH = V_LKH
    WHERE MAKH = :OLD.MAKH;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP" 
BEFORE UPDATE ON CHITIETPTP
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA NGAYNP VA NGAYTPTT
    IF :OLD.NGAYNP > :NEW.NGAYTPTT THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nngày nhận phòng phải nhỏ hơn hoặc bằng ngày trả phòng thực tế');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP" BEFORE UPDATE ON CHITIETTTP
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        BEGIN
            IF :NEW.NGAYBD > :OLD.NGAYKT THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
                END;
            END IF;
        END;
    ELSIF UPDATING THEN 
        BEGIN
            IF :NEW.NGAYBD > :NEW.NGAYKT OR :NEW.NGAYBD > :OLD.NGAYKT OR :OLD.NGAYBD > :OLD.NGAYKT THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('NNgày bắt đàu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết tình trạng phòng thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP" 
BEFORE UPDATE OF SLNGUOI ON CHITIETPTP
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    so_luong_loi INT;
    KIEM_TRA INT;
    V_SLTOIDA LOAIPHONG.SLTOIDA%TYPE;
BEGIN
    so_luong_loi := 0;

    --KIEM TRA SLNGUOI
    SELECT SLTOIDA INTO V_SLTOIDA
    FROM LOAIPHONG LP JOIN PHONG P ON P.MALP = LP.MALP
    WHERE MAPHONG = :NEW.MAPHONG;

    IF :OLD.SLNGUOI = V_SLTOIDA THEN
        BEGIN
            IF :NEW.SLNGUOI > V_SLTOIDA THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá số lượng quy định');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.SLNGUOI < V_SLTOIDA THEN
                BEGIN
                    :NEW.PHUTHU := :OLD.PHUTHU - 0.1;
                    COMMIT;
                END;
            END IF;
        END;
    ELSIF :OLD.SLNGUOI < V_SLTOIDA THEN
        BEGIN
            IF :NEW.SLNGUOI > V_SLTOIDA THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá số lượng quy định');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.SLNGUOI = V_SLTOIDA THEN
                BEGIN
                    :NEW.PHUTHU := :OLD.PHUTHU + 0.1;
                    COMMIT;
                END;
            END IF;
        END;
    END IF;

    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDT" 
BEFORE INSERT ON CHITIETPDT
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MAPHONG
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MAPDT
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = :NEW.MAPDT;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu đặt trước này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA NGAYNP VA NGAYTPDD
    IF :NEW.NGAYNP > :NEW.NGAYTPDD THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ngày nhận phòng phải nhỏ hơn hoặc bằng ngày trả phòng dự đoán');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu đặt phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDV" 
BEFORE INSERT ON CHITIETPDV
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MADV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV = :NEW.MADV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Dịch vụ này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MAPDV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDICHVU
    WHERE MAPDV = :NEW.MAPDV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu dịch vụ này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA NGAYSD
    IF :NEW.NGAYSD IS NULL THEN
        :NEW.NGAYSD := SYSDATE;
    END IF;
    --KIEM TRA SLDV
    IF :NEW.SLDV = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Số lượng dịch vụ phải khác không');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu dịch vụ thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPTP" 
BEFORE INSERT ON CHITIETPTP
FOR EACH ROW
DECLARE
    --PRAGMA AUTONOMOUS_TRANSACTION;
    so_luong_loi INT;
    KIEM_TRA INT;
    V_QUOCTICH KHACHHANG.QUOCTICH%TYPE;
    V_SLTOIDA LOAIPHONG.SLTOIDA%TYPE;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MAPHONG
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    /*
    --KIEM TRA MAPTP
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUTHUEPHONG
    WHERE MAPTP = :NEW.MAPTP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu thuê phòng không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    */
    --KIEM TRA NGAYNP VA NGAYTPTT
    IF :NEW.NGAYNP > :NEW.NGAYTPTT THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ngày nhận phòng phải nhỏ hơn ngày trả phòng thực tế');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA PHUTHU
    :NEW.PHUTHU := TINH_PHU_THU_KH(:NEW.MAPTP);

    --KIEM TRA SLNGUOI
    SELECT SLTOIDA INTO V_SLTOIDA
    FROM LOAIPHONG
    WHERE MALP = (	SELECT MALP
			FROM PHONG
			WHERE MAPHONG = :NEW.MAPHONG
			);

    IF :NEW.SLNGUOI > V_SLTOIDA THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá quy định');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSIF :NEW.SLNGUOI = V_SLTOIDA THEN
        BEGIN
            :NEW.PHUTHU := :NEW.PHUTHU + 0.1;
        END;
    END IF;

    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_PHIEUDICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUDICHVU" 
BEFORE INSERT ON PHIEUDICHVU
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA TIENDV
    :NEW.TIENDV := 0;
    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MATT
    :NEW.MATT := 1;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu dịch vụ thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUDICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC" 
BEFORE INSERT ON PHIEUTHUEPHONG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA TIENPHONG
    :NEW.TIENPHONG := 0;
    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khach hang nay khong ton tai, vui long kiem tra lai');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MATT
    :NEW.MATT := 1;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiêu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_QD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_QD" 
BEFORE INSERT OR UPDATE ON QUYDINH
FOR EACH ROW
DECLARE
    so_luong_loi INT;
BEGIN
    so_luong_loi := 0;
    -- KIEM TRA TEN
    IF LENGTH(:NEW.TENQD) > 25 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên quy định pải ít hơn 25 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA MOTA
    IF :NEW.MOTA IS NOT NULL AND LENGTH(:NEW.MOTA) > 500 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Mô tả không vượt qua 500 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA TOAN BO:
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm quy định thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_QD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_THEM_HOADON
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_THEM_HOADON" 
BEFORE INSERT ON HOADON
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_DOANHSO KHACHHANG.DOANHSO%TYPE;
    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    V_TIENPHONG PHIEUTHUEPHONG.TIENPHONG%TYPE;
    V_TIENDV PHIEUDICHVU.TIENDV%TYPE;
    KIEM_TRA INT;
BEGIN    
    so_luong_loi := 0;

    V_LKH := 1;
    --KIEM TRA TONGIEN
    IF :NEW.TONGTIEN IS NULL THEN 
        :NEW.TONGTIEN := 0;
    END IF;

    --KIEM TRA NGAYTT
    IF :NEW.NGAYTT IS NULL THEN
        :NEW.NGAYTT := SYSDATE;
    END IF;

    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này khong tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT DOANHSO INTO V_DOANHSO
            FROM KHACHHANG
            WHERE MAKH = :NEW.MAKH;

            V_DOANHSO := V_DOANHSO + :NEW.TONGTIEN;

            IF V_DOANHSO >= 100000000 THEN
                BEGIN
                    V_LKH := 3;
                END;
            ELSIF V_DOANHSO >= 50000000 THEN
                BEGIN
                    V_LKH := 2;
                END;
            END IF;

            UPDATE KHACHHANG
            SET DOANHSO = V_DOANHSO, MALKH = V_LKH
            WHERE MAKH = :NEW.MAKH;
        END;
    END IF;

    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tịa, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;

    --KIEM TRA MAPTP
    IF :NEW.MAPTP IS NOT NULL THEN
        BEGIN
            UPDATE PHIEUTHUEPHONG
            SET MATT = 2
            WHERE  MAPTP = :NEW.MAPTP;
        END;
    END IF;
    --KIEM TRA MAPDV
    IF :NEW.MAPDV IS NOT NULL THEN
        BEGIN
            UPDATE PHIEUDICHVU
            SET MATT = 2
            WHERE  MAPDV = :NEW.MAPDV;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 AND INSERTING THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm hóa đơn thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_THEM_HOADON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_EMAILNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_EMAILNV_NHANVIEN" 
BEFORE INSERT OR UPDATE OF EMAILNV ON NHANVIEN
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_EMAILNV NHANVIEN.EMAILNV%TYPE;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.EMAILNV) > 30 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Email nhân viên phải ít hơn 31 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(EMAILNV) INTO V_EMAILNV
            FROM NHANVIEN
            WHERE EMAILNV = :NEW.EMAILNV and MANV <> :NEW.MANV;

            IF V_EMAILNV <> 0 THEN
                DBMS_OUTPUT.PUT_LINE('Email này đã tồn tại, vui lòng kiểm tra lại');
                so_luong_loi := so_luong_loi + 1;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 THEN
        BEGIN
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
            ELSIF UPDATING THEN
                IF so_luong_loi > 0 THEN
                    RAISE_APPLICATION_ERROR(-20001, 'Cập nhật nhân viên thất bại');
                ELSE
                    COMMIT;
                END IF;
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20002, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_EMAILNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GHICHU_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GHICHU_PHONG" 
BEFORE INSERT OR UPDATE ON PHONG
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    IF LENGTH(:NEW.GHICHU) > 100 AND :NEW.GHICHU IS NOT NULL THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ghi chú phải ít hơn 101 ký tự');
            IF INSERTING THEN   
                 RAISE_APPLICATION_ERROR(-20001, 'Thêm phòng thất bại');
            ELSIF UPDATING THEN
                 RAISE_APPLICATION_ERROR(-20002, 'Cập nhật phòng thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GHICHU_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIADV_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIADV_DICHVU" 
BEFORE INSERT OR UPDATE ON DICHVU
FOR EACH ROW
BEGIN
    IF :NEW.GIADV IS NULL THEN
        BEGIN
            :NEW.GIADV := 0;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIADV_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIOITINHKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHKH_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
declare
    so_luong_loi int;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.GIOITINHKH) > 4 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Giới tính khách hàng không vượt quá 4 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            IF :NEW.GIOITINHKH IS NULL THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Nhập thông tin giới tính');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.GIOITINHKH NOT IN ('Nam', 'Nữ') THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Giới tính của khách hàng chỉ có thể là nam hoặc nữ');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20002, 'Them khách hàng thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIOITINHNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHNV_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.GIOITINHNV) > 4 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Giới tính nhân viên không vượt quá 4 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
        END;
    ELSE
        BEGIN
            IF :NEW.GIOITINHNV IS NULL THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Nhập thông tin giới tính');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
                END;
            ELSIF :NEW.GIOITINHNV NOT IN ('Nam', 'Nữ') THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Giới tính nhân viên chỉ có thể là nam hoặc nữ');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MADONVI_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MADONVI_DICHVU" 
BEFORE INSERT OR UPDATE ON DICHVU
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DONVI
    WHERE MADONVI= :NEW.MADONVI;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Đơn vị này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm dịch vụ thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật dịch vụ thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MADONVI_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAKH_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAKH_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tả lại');
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu đặt trước thất bại');
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAKH_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAKM_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAKM_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHUYENMAI
    WHERE MAKM = :NEW.MAKM;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chương trình khuyến mãi này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAKM_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALKH_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM LOAIKHACHHANG
    WHERE MALKH = :NEW.MALKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Loại khách hàng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALKH_MAKM_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_MAKM_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
BEGIN
     IF :NEW.PHANTRAMKM <= 0 OR :NEW.PHANTRAMKM >= 1 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phần trăm khuyến mãi không hợp lệ, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_MAKM_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALP_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALP_PHONG" 
BEFORE INSERT OR UPDATE ON PHONG
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM LOAIPHONG
    WHERE MALP = :NEW.MALP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Loại phòng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm phòng thất bại');
            ELSIF UPDATING THEN
                 RAISE_APPLICATION_ERROR(-20002, 'Cập nhật phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALP_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MANV_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MANV_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu đặt trước thất bại');
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MANV_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAPHONG_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAPHONG_CHITIETTTP" 
BEFORE INSERT OR UPDATE ON CHITIETTTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chi tiết tình trạng phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAPHONG_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MATTP_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MATTP_CHITIETTTP" 
BEFORE INSERT OR UPDATE OF MATTP ON CHITIETTTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE CHITIETTTP IN SHARE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM TINHTRANGPHONG
    WHERE MATTP = :NEW.MATTP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tình trạng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chi tiết tình trạng phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MATTP_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAYNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYNV_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
DECLARE
BEGIN
    :NEW.NGAYVL := SYSDATE;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAYSINHKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYSINHKH_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
BEGIN
    IF SYSDATE <= ADD_MONTHS(:NEW.NGAYSINHKH, 12*18) THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng phải đủ 18 tuổi trở lên');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYSINHKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAY_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAY_KHUYENMAI" 
BEFORE INSERT OR UPDATE OF TUNGAY, DENNGAY ON KHUYENMAI
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        BEGIN
            IF :NEW.TUNGAY > :NEW.DENNGAY THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm chương trình khuyến mãi thất bại');
                END;
            END IF;
        END;
    ELSIF UPDATING THEN 
        BEGIN
            IF :NEW.TUNGAY > :NEW.DENNGAY OR :NEW.TUNGAY > :OLD.DENNGAY OR :OLD.TUNGAY > :NEW.DENNGAY THEN
                BEGIN
                    RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chương trình khuyến mãi thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAY_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_QUOCTICH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_QUOCTICH_KHACHHANG" 
BEFORE INSERT OR UPDATE ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.QUOCTICH) > 25 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Quốc tịch phải ít hơn 26 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            end if;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_QUOCTICH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_SDTKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_SDTKH_KHACHHANG" 
BEFORE INSERT OR UPDATE of SDTKH ON KHACHHANG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_sdtKH KHACHHANG.sdtKH%TYPE;
    pragma autonomous_transaction;
BEGIN
    so_luong_loi := 0;
   IF LENGTH(:NEW.SDTKH) > 10 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('SDT khách hàng phải ít hơn 11 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(SDTKH) INTO V_SDTKH
            FROM KHACHHANG
            WHERE SDTKH = :NEW.SDTKH AND MAKH <> :NEW.MAKH;

            IF V_SDTKH <> 0 THEN
                DBMS_OUTPUT.PUT_LINE('SDT này không tồn tại, vui lòng kiểm tra lại');
                so_luong_loi := so_luong_loi + 1;
            END IF;
        END;
    END IF;

    IF so_luong_loi > 0 and inserting THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
    ELSIF UPDATING THEN
        begin
            if so_luong_loi > 0 then
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            else
                commit;
            end if;
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_SDTKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENDONVI_DONVI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENDONVI_DONVI" BEFORE INSERT OR UPDATE ON DONVI
FOR EACH ROW
DECLARE
    so_luong_loi INT;
BEGIN
    so_luong_loi := 0;
    -- KIEM TRA TENDONVI
    IF LENGTH(:NEW.TENDONVI) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên đơn vị không vượt quá 51 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm đơn vị thất bại');
            ELSIF UPDATING THEN 
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật đơn vị thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENDONVI_DONVI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENDV_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENDV_DICHVU" 
BEFORE INSERT ON DICHVU
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENDV) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên dịch vụ không vượt quá 50 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm dịch vụ thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENDV_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENKH_KHACHHANG" 
BEFORE INSERT OR UPDATE ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.TENKH) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên khách hàng không vượt quá 50 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            end if;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENKM_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENKM_KHUYENMAI" 
BEFORE INSERT ON KHUYENMAI
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENKM) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên chương trình khuyến mãi không vượt quá 51 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chương trình khuyến mãi thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENKM_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENNV_NHANVIEN" 
BEFORE INSERT or UPDATE ON NHANVIEN
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENNV) > 50 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên nhân viên phải ít hơn 51 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENPHONG_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENPHONG_PHONG" 
BEFORE INSERT OR UPDATE OF MALP ON PHONG
FOR EACH ROW
BEGIN
    CASE
        WHEN :NEW.MALP = 1 THEN :NEW.TENPHONG :='SD';
        WHEN :NEW.MALP = 2 THEN :NEW.TENPHONG :='SP';
        WHEN :NEW.MALP = 3 THEN :NEW.TENPHONG :='DL';
        WHEN :NEW.MALP = 4 THEN :NEW.TENPHONG :='ST';
        WHEN :NEW.MALP = 5 THEN :NEW.TENPHONG :='CN';
     END CASE;

     CASE 
        WHEN :NEW.MAPHONG < 10 THEN :NEW.TENPHONG := :NEW.TENPHONG ||ROUND(:NEW.MAPHONG/2)||0||:NEW.MAPHONG;
        ELSE 
            :NEW.TENPHONG := :NEW.TENPHONG ||ROUND(:NEW.MAPHONG/2)||:NEW.MAPHONG;
     END CASE;
     IF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('Cập nhật tên phòng thành công');
      END IF;  
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENPHONG_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_XOA_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_XOA_NHANVIEN" 
BEFORE DELETE ON NHANVIEN
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    UPDATE PHIEUDATTRUOC SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE PHIEUTHUEPHONG SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE PHIEUDICHVU SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE HOADON SET MANV = NULL WHERE MANV = :OLD.MANV;
    COMMIT;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_XOA_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRANH_TRUNG_LAP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP" 
BEFORE INSERT ON CHITIETTTP
FOR EACH ROW
BEGIN
    DELETE FROM CHITIETTTP
    WHERE MAPHONG = :NEW.MAPHONG 
        AND MATTP = :NEW.MATTP
        AND TRUNC(NGAYBD) = TRUNC(:NEW.NGAYBD);

    DELETE FROM CHITIETTTP
    WHERE MAPHONG = :NEW.MAPHONG 
        AND MATTP = :NEW.MATTP
        AND TRUNC(NGAYKT) = TRUNC(:NEW.NGAYKT);
END;

/
ALTER TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRANH_TRUNG_LAP_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP_CHITIETPTP" 
BEFORE INSERT ON CHITIETPTP
FOR EACH ROW
BEGIN
    DELETE FROM CHITIETPTP WHERE MAPHONG = :NEW.MAPHONG AND MAPTP = :NEW.MAPTP;
END;

/
ALTER TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_CTPDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_CTPDV" 
before delete on chitietpdv
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(*) into kiem_tra
    from chitietpdv
    where sysdate > ngaysd;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_CTPDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_DV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_DV" 
before delete on dichvu
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(dv.madv) into kiem_tra
    from dichvu dv join chitietpdv ctpdv on dv.madv = ctpdv.madv join phieudichvu pdv on pdv.mapdv = ctpdv.mapdv
    where dv.madv = :new.madv and matt = 1;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_DV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_KHUYENMAI" 
before delete on khuyenmai
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(makm) into kiem_tra
    from khuyenmai km
    where trunc(sysdate) >= trunc(tungay) and trunc(sysdate) <= trunc(denngay) and makm = :old.makm;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    else
    begin
    delete from chitietkm where makm = :old.makm; 
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_PDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_PDT" 
before delete on phieudattruoc
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(*) into kiem_tra
    from phieudattruoc
    where mapdt = :old.mapdt and matt = 2;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_PDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_PDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_PDV" 
before delete on phieudichvu
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(mapdv) into kiem_tra
    from phieudichvu pdv
    where sysdate > (select max(ngaysd) from chitietpdv ctpdv  where pdv.mapdv = ctpdv.mapdv) and mapdv = :old.mapdv;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    else
        delete from chitietpdv where mapdv = :old.mapdv;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_PDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALKH_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM LOAIKHACHHANG
    WHERE MALKH = :NEW.MALKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Loại khách hàng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAKM_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAKM_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHUYENMAI
    WHERE MAKM = :NEW.MAKM;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chương trình khuyến mãi này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAKM_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALKH_MAKM_CHITIETKM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_MAKM_CHITIETKM" 
BEFORE INSERT OR UPDATE ON CHITIETKM
FOR EACH ROW
BEGIN
     IF :NEW.PHANTRAMKM <= 0 OR :NEW.PHANTRAMKM >= 1 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phần trăm khuyến mãi không hợp lệ, vui lòng kiểm tra lại');
            IF INSERTING THEN 
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết chương trình khuyến mãi thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết chương trình khuyến mãi thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALKH_MAKM_CHITIETKM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDT" 
BEFORE INSERT ON CHITIETPDT
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MAPHONG
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MAPDT
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = :NEW.MAPDT;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu đặt trước này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA NGAYNP VA NGAYTPDD
    IF :NEW.NGAYNP > :NEW.NGAYTPDD THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ngày nhận phòng phải nhỏ hơn hoặc bằng ngày trả phòng dự đoán');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu đặt phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT" 
AFTER UPDATE OF NGAYNP ON CHITIETPDT
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:NEW.NGAYNP) AND
                TRUNC(NGAYKT) >= TRUNC(:OLD.NGAYNP - 1);
    IF TRUNC(:NEW.NGAYNP) < TRUNC(:OLD.NGAYNP) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu đặt phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPDD);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 2, :NEW.NGAYNP, :OLD.NGAYTPDD);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYNP_CHITIETPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT" 
AFTER UPDATE OF NGAYTPDD ON CHITIETPDT
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:OLD.NGAYTPDD + 1) AND
                TRUNC(NGAYKT) >= TRUNC(:NEW.NGAYTPDD);
    IF TRUNC(:OLD.NGAYTPDD) < TRUNC(:NEW.NGAYTPDD) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu đặt phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPDD);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 2, :OLD.NGAYNP, :NEW.NGAYTPDD);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPDD_CHITIETPDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDV" 
BEFORE INSERT ON CHITIETPDV
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MADV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV = :NEW.MADV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Dịch vụ này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MAPDV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDICHVU
    WHERE MAPDV = :NEW.MAPDV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu dịch vụ này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA NGAYSD
    IF :NEW.NGAYSD IS NULL THEN
        :NEW.NGAYSD := SYSDATE;
    END IF;
    --KIEM TRA SLDV
    IF :NEW.SLDV = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Số lượng dịch vụ phải khác không');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu dịch vụ thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_CTPDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_CTPDV" 
before delete on chitietpdv
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(*) into kiem_tra
    from chitietpdv
    where sysdate > ngaysd;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_CTPDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP" 
BEFORE UPDATE ON CHITIETPTP
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA NGAYNP VA NGAYTPTT
    IF :OLD.NGAYNP > :NEW.NGAYTPTT THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nngày nhận phòng phải nhỏ hơn hoặc bằng ngày trả phòng thực tế');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAYTPTT_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP" 
BEFORE UPDATE OF SLNGUOI ON CHITIETPTP
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    so_luong_loi INT;
    KIEM_TRA INT;
    V_SLTOIDA LOAIPHONG.SLTOIDA%TYPE;
BEGIN
    so_luong_loi := 0;

    --KIEM TRA SLNGUOI
    SELECT SLTOIDA INTO V_SLTOIDA
    FROM LOAIPHONG LP JOIN PHONG P ON P.MALP = LP.MALP
    WHERE MAPHONG = :NEW.MAPHONG;

    IF :OLD.SLNGUOI = V_SLTOIDA THEN
        BEGIN
            IF :NEW.SLNGUOI > V_SLTOIDA THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá số lượng quy định');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.SLNGUOI < V_SLTOIDA THEN
                BEGIN
                    :NEW.PHUTHU := :OLD.PHUTHU - 0.1;
                    COMMIT;
                END;
            END IF;
        END;
    ELSIF :OLD.SLNGUOI < V_SLTOIDA THEN
        BEGIN
            IF :NEW.SLNGUOI > V_SLTOIDA THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá số lượng quy định');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.SLNGUOI = V_SLTOIDA THEN
                BEGIN
                    :NEW.PHUTHU := :OLD.PHUTHU + 0.1;
                    COMMIT;
                END;
            END IF;
        END;
    END IF;

    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_SLNGUOI_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRANH_TRUNG_LAP_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP_CHITIETPTP" 
BEFORE INSERT ON CHITIETPTP
FOR EACH ROW
BEGIN
    DELETE FROM CHITIETPTP WHERE MAPHONG = :NEW.MAPHONG AND MAPTP = :NEW.MAPTP;
END;

/
ALTER TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CTPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPTP" 
BEFORE INSERT ON CHITIETPTP
FOR EACH ROW
DECLARE
    --PRAGMA AUTONOMOUS_TRANSACTION;
    so_luong_loi INT;
    KIEM_TRA INT;
    V_QUOCTICH KHACHHANG.QUOCTICH%TYPE;
    V_SLTOIDA LOAIPHONG.SLTOIDA%TYPE;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA MAPHONG
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    /*
    --KIEM TRA MAPTP
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUTHUEPHONG
    WHERE MAPTP = :NEW.MAPTP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu thuê phòng không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    */
    --KIEM TRA NGAYNP VA NGAYTPTT
    IF :NEW.NGAYNP > :NEW.NGAYTPTT THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ngày nhận phòng phải nhỏ hơn ngày trả phòng thực tế');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA PHUTHU
    :NEW.PHUTHU := TINH_PHU_THU_KH(:NEW.MAPTP);

    --KIEM TRA SLNGUOI
    SELECT SLTOIDA INTO V_SLTOIDA
    FROM LOAIPHONG
    WHERE MALP = (	SELECT MALP
			FROM PHONG
			WHERE MAPHONG = :NEW.MAPHONG
			);

    IF :NEW.SLNGUOI > V_SLTOIDA THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Số lượng khách hàng vượt quá quy định');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSIF :NEW.SLNGUOI = V_SLTOIDA THEN
        BEGIN
            :NEW.PHUTHU := :NEW.PHUTHU + 0.1;
        END;
    END IF;

    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết phiếu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CTPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP" 
AFTER UPDATE OF NGAYTPTT ON CHITIETPTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
    XU_LY EXCEPTION;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = :OLD.MAPHONG AND MATTP = 1 AND 
                TRUNC(NGAYBD) <= TRUNC(:OLD.NGAYTPTT + 1) AND
                TRUNC(NGAYKT) >= TRUNC(:NEW.NGAYTPTT);
    IF TRUNC(:OLD.NGAYTPTT) < TRUNC(:NEW.NGAYTPTT) AND KIEM_TRA = 0 THEN
       BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết phiếu thuê phòng thất bại');
        END;
    ELSE
        BEGIN
           RAISE XU_LY;
        END;
    END IF;
    EXCEPTION WHEN XU_LY THEN
        BEGIN
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 1, :OLD.NGAYNP, :OLD.NGAYTPTT);
            SUA_MATTP_CTTTP(:OLD.MAPHONG, 3, :OLD.NGAYNP, :NEW.NGAYTPTT);
        END;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_CAP_NHAT_NGAYTPTT_CHITIETPTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MATTP_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MATTP_CHITIETTTP" 
BEFORE INSERT OR UPDATE OF MATTP ON CHITIETTTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE CHITIETTTP IN SHARE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM TINHTRANGPHONG
    WHERE MATTP = :NEW.MATTP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tình trạng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chi tiết tình trạng phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MATTP_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAPHONG_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAPHONG_CHITIETTTP" 
BEFORE INSERT OR UPDATE ON CHITIETTTP
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = :NEW.MAPHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chi tiết tình trạng phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAPHONG_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRANH_TRUNG_LAP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP" 
BEFORE INSERT ON CHITIETTTP
FOR EACH ROW
BEGIN
    DELETE FROM CHITIETTTP
    WHERE MAPHONG = :NEW.MAPHONG 
        AND MATTP = :NEW.MATTP
        AND TRUNC(NGAYBD) = TRUNC(:NEW.NGAYBD);

    DELETE FROM CHITIETTTP
    WHERE MAPHONG = :NEW.MAPHONG 
        AND MATTP = :NEW.MATTP
        AND TRUNC(NGAYKT) = TRUNC(:NEW.NGAYKT);
END;

/
ALTER TRIGGER "C##LUCIFER"."TRANH_TRUNG_LAP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP" BEFORE UPDATE ON CHITIETTTP
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        BEGIN
            IF :NEW.NGAYBD > :OLD.NGAYKT THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm chi tiết tình trạng phòng thất bại');
                END;
            END IF;
        END;
    ELSIF UPDATING THEN 
        BEGIN
            IF :NEW.NGAYBD > :NEW.NGAYKT OR :NEW.NGAYBD > :OLD.NGAYKT OR :OLD.NGAYBD > :OLD.NGAYKT THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('NNgày bắt đàu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Cập nhật chi tiết tình trạng phòng thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_NGAY_CHITIETTTP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MADONVI_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MADONVI_DICHVU" 
BEFORE INSERT OR UPDATE ON DICHVU
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DONVI
    WHERE MADONVI= :NEW.MADONVI;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Đơn vị này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm dịch vụ thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật dịch vụ thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MADONVI_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENDV_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENDV_DICHVU" 
BEFORE INSERT ON DICHVU
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENDV) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên dịch vụ không vượt quá 50 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm dịch vụ thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENDV_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIADV_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIADV_DICHVU" 
BEFORE INSERT OR UPDATE ON DICHVU
FOR EACH ROW
BEGIN
    IF :NEW.GIADV IS NULL THEN
        BEGIN
            :NEW.GIADV := 0;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIADV_DICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_DV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_DV" 
before delete on dichvu
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(dv.madv) into kiem_tra
    from dichvu dv join chitietpdv ctpdv on dv.madv = ctpdv.madv join phieudichvu pdv on pdv.mapdv = ctpdv.mapdv
    where dv.madv = :new.madv and matt = 1;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_DV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENDONVI_DONVI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENDONVI_DONVI" BEFORE INSERT OR UPDATE ON DONVI
FOR EACH ROW
DECLARE
    so_luong_loi INT;
BEGIN
    so_luong_loi := 0;
    -- KIEM TRA TENDONVI
    IF LENGTH(:NEW.TENDONVI) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên đơn vị không vượt quá 51 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm đơn vị thất bại');
            ELSIF UPDATING THEN 
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật đơn vị thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENDONVI_DONVI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_THEM_HOADON
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_THEM_HOADON" 
BEFORE INSERT ON HOADON
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_DOANHSO KHACHHANG.DOANHSO%TYPE;
    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    V_TIENPHONG PHIEUTHUEPHONG.TIENPHONG%TYPE;
    V_TIENDV PHIEUDICHVU.TIENDV%TYPE;
    KIEM_TRA INT;
BEGIN    
    so_luong_loi := 0;

    V_LKH := 1;
    --KIEM TRA TONGIEN
    IF :NEW.TONGTIEN IS NULL THEN 
        :NEW.TONGTIEN := 0;
    END IF;

    --KIEM TRA NGAYTT
    IF :NEW.NGAYTT IS NULL THEN
        :NEW.NGAYTT := SYSDATE;
    END IF;

    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này khong tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT DOANHSO INTO V_DOANHSO
            FROM KHACHHANG
            WHERE MAKH = :NEW.MAKH;

            V_DOANHSO := V_DOANHSO + :NEW.TONGTIEN;

            IF V_DOANHSO >= 100000000 THEN
                BEGIN
                    V_LKH := 3;
                END;
            ELSIF V_DOANHSO >= 50000000 THEN
                BEGIN
                    V_LKH := 2;
                END;
            END IF;

            UPDATE KHACHHANG
            SET DOANHSO = V_DOANHSO, MALKH = V_LKH
            WHERE MAKH = :NEW.MAKH;
        END;
    END IF;

    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tịa, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;

    --KIEM TRA MAPTP
    IF :NEW.MAPTP IS NOT NULL THEN
        BEGIN
            UPDATE PHIEUTHUEPHONG
            SET MATT = 2
            WHERE  MAPTP = :NEW.MAPTP;
        END;
    END IF;
    --KIEM TRA MAPDV
    IF :NEW.MAPDV IS NOT NULL THEN
        BEGIN
            UPDATE PHIEUDICHVU
            SET MATT = 2
            WHERE  MAPDV = :NEW.MAPDV;
        END;
    END IF;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 AND INSERTING THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm hóa đơn thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_THEM_HOADON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON" 
BEFORE UPDATE ON HOADON
FOR EACH ROW
DECLARE
    V_DOANHSO KHACHHANG.DOANHSO%TYPE;
    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    KIEM_TRA INT;
BEGIN    
    V_LKH := 1;
    SELECT DOANHSO INTO V_DOANHSO
    FROM KHACHHANG
    WHERE MAKH = :OLD.MAKH;

    V_DOANHSO := V_DOANHSO + :NEW.TONGTIEN - :OLD.TONGTIEN;

    IF V_DOANHSO >= 100000000 THEN
        BEGIN
            V_LKH := 3;
        END;
    ELSIF V_DOANHSO >= 50000000 THEN
        BEGIN
            V_LKH := 2;
        END;
    END IF;

    UPDATE KHACHHANG
    SET DOANHSO = V_DOANHSO, MALKH = V_LKH
    WHERE MAKH = :OLD.MAKH;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_CAP_NHAT_HOADON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    -- KIEM TRA DOANH SO
    -- KIEM TRA MALKH
    :NEW.DOANHSO := 0;
    :NEW.MALKH := 1;
END;

/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENKH_KHACHHANG" 
BEFORE INSERT OR UPDATE ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.TENKH) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên khách hàng không vượt quá 50 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            end if;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAYSINHKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYSINHKH_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
BEGIN
    IF SYSDATE <= ADD_MONTHS(:NEW.NGAYSINHKH, 12*18) THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng phải đủ 18 tuổi trở lên');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYSINHKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_QUOCTICH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_QUOCTICH_KHACHHANG" 
BEFORE INSERT OR UPDATE ON KHACHHANG
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.QUOCTICH) > 25 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Quốc tịch phải ít hơn 26 ký tự');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
            ELSIF UPDATING THEN
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            end if;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_QUOCTICH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIOITINHKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHKH_KHACHHANG" 
BEFORE INSERT ON KHACHHANG
FOR EACH ROW
declare
    so_luong_loi int;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.GIOITINHKH) > 4 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Giới tính khách hàng không vượt quá 4 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            IF :NEW.GIOITINHKH IS NULL THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Nhập thông tin giới tính');
                    so_luong_loi := so_luong_loi + 1;
                END;
            ELSIF :NEW.GIOITINHKH NOT IN ('Nam', 'Nữ') THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Giới tính của khách hàng chỉ có thể là nam hoặc nữ');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20002, 'Them khách hàng thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_CCCDKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDKH_KHACHHANG" 
BEFORE INSERT OR UPDATE of CCCDKH ON KHACHHANG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_CCCDKH KHACHHANG.CCCDKH%TYPE;
    pragma autonomous_transaction;
BEGIN
    so_luong_loi := 0;
   IF LENGTH(:NEW.CCCDKH) > 12 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('CCCD khách hàng khồng quá 12 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSif :new.cccdkh is not null then
        BEGIN
            SELECT COUNT(CCCDKH) INTO V_CCCDKH
            FROM KHACHHANG
            WHERE CCCDKH = :NEW.CCCDKH AND MAKH <> :NEW.MAKH;

            IF V_CCCDKH > 0 THEN
                BEGIN   
                    DBMS_OUTPUT.PUT_LINE('CCCD này đã tồn tại, vui lòng kiểm tra lại');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;

    IF so_luong_loi > 0 and inserting THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
    ELSIF UPDATING THEN
        begin
            if so_luong_loi > 0 then
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật cccd khách hàng thất bại');
            else
                commit;
            end if;
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_SDTKH_KHACHHANG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_SDTKH_KHACHHANG" 
BEFORE INSERT OR UPDATE of SDTKH ON KHACHHANG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_sdtKH KHACHHANG.sdtKH%TYPE;
    pragma autonomous_transaction;
BEGIN
    so_luong_loi := 0;
   IF LENGTH(:NEW.SDTKH) > 10 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('SDT khách hàng phải ít hơn 11 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(SDTKH) INTO V_SDTKH
            FROM KHACHHANG
            WHERE SDTKH = :NEW.SDTKH AND MAKH <> :NEW.MAKH;

            IF V_SDTKH <> 0 THEN
                DBMS_OUTPUT.PUT_LINE('SDT này không tồn tại, vui lòng kiểm tra lại');
                so_luong_loi := so_luong_loi + 1;
            END IF;
        END;
    END IF;

    IF so_luong_loi > 0 and inserting THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm khách hàng thất bại');
    ELSIF UPDATING THEN
        begin
            if so_luong_loi > 0 then
                RAISE_APPLICATION_ERROR(-20002, 'Cập nhật khách hàng thất bại');
            else
                commit;
            end if;
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_SDTKH_KHACHHANG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAY_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAY_KHUYENMAI" 
BEFORE INSERT OR UPDATE OF TUNGAY, DENNGAY ON KHUYENMAI
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        BEGIN
            IF :NEW.TUNGAY > :NEW.DENNGAY THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm chương trình khuyến mãi thất bại');
                END;
            END IF;
        END;
    ELSIF UPDATING THEN 
        BEGIN
            IF :NEW.TUNGAY > :NEW.DENNGAY OR :NEW.TUNGAY > :OLD.DENNGAY OR :OLD.TUNGAY > :NEW.DENNGAY THEN
                BEGIN
                    RAISE_APPLICATION_ERROR(-20002, 'Cập nhật chương trình khuyến mãi thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAY_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENKM_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENKM_KHUYENMAI" 
BEFORE INSERT ON KHUYENMAI
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENKM) > 50 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên chương trình khuyến mãi không vượt quá 51 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm chương trình khuyến mãi thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENKM_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_KHUYENMAI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_KHUYENMAI" 
before delete on khuyenmai
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(makm) into kiem_tra
    from khuyenmai km
    where trunc(sysdate) >= trunc(tungay) and trunc(sysdate) <= trunc(denngay) and makm = :old.makm;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    else
    begin
    delete from chitietkm where makm = :old.makm; 
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_KHUYENMAI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GIOITINHNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHNV_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.GIOITINHNV) > 4 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Giới tính nhân viên không vượt quá 4 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
        END;
    ELSE
        BEGIN
            IF :NEW.GIOITINHNV IS NULL THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Nhập thông tin giới tính');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
                END;
            ELSIF :NEW.GIOITINHNV NOT IN ('Nam', 'Nữ') THEN
                BEGIN
                    DBMS_OUTPUT.PUT_LINE('Giới tính nhân viên chỉ có thể là nam hoặc nữ');
                    RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
                END;
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GIOITINHNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENNV_NHANVIEN" 
BEFORE INSERT or UPDATE ON NHANVIEN
FOR EACH ROW
BEGIN
    IF LENGTH(:NEW.TENNV) > 50 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên nhân viên phải ít hơn 51 ký tự');
            RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_XOA_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_XOA_NHANVIEN" 
BEFORE DELETE ON NHANVIEN
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    UPDATE PHIEUDATTRUOC SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE PHIEUTHUEPHONG SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE PHIEUDICHVU SET MANV = NULL WHERE MANV = :OLD.MANV;
    UPDATE HOADON SET MANV = NULL WHERE MANV = :OLD.MANV;
    COMMIT;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_XOA_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_NGAYNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYNV_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
DECLARE
BEGIN
    :NEW.NGAYVL := SYSDATE;
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_NGAYNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_NHANVIEN" 
BEFORE INSERT ON NHANVIEN
FOR EACH ROW
BEGIN
    IF :NEW.TENND IS NULL THEN 
        BEGIN
            :NEW.TENND := 'user'||:new.manv;
        END;
    END IF;
    IF :NEW.PASSWORD IS NULL THEN 
        BEGIN
            :NEW.PASSWORD := 'user'||:new.manv;
        END;
    END IF;	
END;
/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_EMAILNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_EMAILNV_NHANVIEN" 
BEFORE INSERT OR UPDATE OF EMAILNV ON NHANVIEN
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_EMAILNV NHANVIEN.EMAILNV%TYPE;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.EMAILNV) > 30 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Email nhân viên phải ít hơn 31 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(EMAILNV) INTO V_EMAILNV
            FROM NHANVIEN
            WHERE EMAILNV = :NEW.EMAILNV and MANV <> :NEW.MANV;

            IF V_EMAILNV <> 0 THEN
                DBMS_OUTPUT.PUT_LINE('Email này đã tồn tại, vui lòng kiểm tra lại');
                so_luong_loi := so_luong_loi + 1;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 THEN
        BEGIN
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
            ELSIF UPDATING THEN
                IF so_luong_loi > 0 THEN
                    RAISE_APPLICATION_ERROR(-20001, 'Cập nhật nhân viên thất bại');
                ELSE
                    COMMIT;
                END IF;
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20002, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_EMAILNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_CCCDNV_NHANVIEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDNV_NHANVIEN" 
BEFORE INSERT OR UPDATE OF CCCDNV ON NHANVIEN
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    V_CCCDNV NHANVIEN.CCCDNV%TYPE;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    so_luong_loi := 0;
    IF LENGTH(:NEW.CCCDNV) > 12 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('CCCD nhân viên phải ít hơn 13 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    ELSE
        BEGIN
            SELECT COUNT(CCCDNV) INTO V_CCCDNV
            FROM NHANVIEN
            WHERE CCCDNV = :NEW.CCCDNV AND MANV <> :NEW.MANV;

            IF V_CCCDNV <> 0 THEN
                BEGIN   
                    DBMS_OUTPUT.PUT_LINE('CCCD này không tồn tại, vui lòng kiểm tra lại');
                    so_luong_loi := so_luong_loi + 1;
                END;
            END IF;
        END;
    END IF;
    IF so_luong_loi > 0 and INSERTING THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thêm nhân viên thất bại');
    elsif updating then
        begin
            IF so_luong_loi > 0 THEN
                RAISE_APPLICATION_ERROR(-20001, 'Cập nhật cccd nhân viên thất bại');
            ELSE
                COMMIT;
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20002, 'Lỗi');
END;
/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_CCCDNV_NHANVIEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MANV_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MANV_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu đặt trước thất bại');
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MANV_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BO_SUNG_THONG_TIN_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
BEGIN
    IF LENGTH(:NEW.NGAYDT) IS NULL THEN
        BEGIN
            :NEW.NGAYDT := SYSDATE;
        END;
    END IF;
    :NEW.MATT := 1;
END;

/
ALTER TRIGGER "C##LUCIFER"."BO_SUNG_THONG_TIN_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MAKH_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MAKH_PHIEUDATTRUOC" 
BEFORE INSERT ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tả lại');
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu đặt trước thất bại');
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MAKH_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_PDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_PDT" 
before delete on phieudattruoc
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(*) into kiem_tra
    from phieudattruoc
    where mapdt = :old.mapdt and matt = 2;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_PDT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HUY_PHIEUDATTRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."HUY_PHIEUDATTRUOC" 
BEFORE DELETE ON PHIEUDATTRUOC
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    KIEM_TRA INT;
    CURSOR CUR_PHONG IS SELECT MAPHONG, NGAYNP, NGAYTPDD
                        FROM CHITIETPDT CTPDT JOIN PHIEUDATTRUOC PDT ON PDT.MAPDT = CTPDT.MAPDT
                        WHERE PDT.MAPDT = :OLD.MAPDT AND MATT = 1;
    V_PHONG PHONG.MAPHONG%TYPE;
    V_NGAYNP CHITIETPDT.NGAYNP%TYPE;
    V_NGAYTPDD CHITIETPDT.NGAYTPDD%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = :OLD.MAPDT AND MATT = 1;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu đặt trước này không tồn tại, vui lòng kiểm tra lai');
        END;
    ELSE
        BEGIN
            OPEN CUR_PHONG;
            LOOP
                FETCH CUR_PHONG INTO V_PHONG, V_NGAYNP, V_NGAYTPDD;
                EXIT WHEN CUR_PHONG%NOTFOUND;
                SUA_MATTP_CTTTP(V_PHONG, 1, V_NGAYNP, V_NGAYTPDD);

            END LOOP;
            CLOSE CUR_PHONG;

            DELETE FROM CHITIETPDT WHERE MAPDT = :OLD.MAPDT;
            COMMIT;
        END;
    END IF;
END;
/
ALTER TRIGGER "C##LUCIFER"."HUY_PHIEUDATTRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_PHIEUDICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUDICHVU" 
BEFORE INSERT ON PHIEUDICHVU
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA TIENDV
    :NEW.TIENDV := 0;
    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MATT
    :NEW.MATT := 1;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiếu dịch vụ thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUDICHVU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger XOA_PDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."XOA_PDV" 
before delete on phieudichvu
for each row
declare 
    kiem_tra int;
begin
    kiem_tra := 0;
    select count(mapdv) into kiem_tra
    from phieudichvu pdv
    where sysdate > (select max(ngaysd) from chitietpdv ctpdv  where pdv.mapdv = ctpdv.mapdv) and mapdv = :old.mapdv;

    if kiem_tra <> 0 then
    begin
        raise_application_error(-20001, 'Xóa thất bại');
    end;
    else
        delete from chitietpdv where mapdv = :old.mapdv;
    end if;
end;
/
ALTER TRIGGER "C##LUCIFER"."XOA_PDV" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC" 
BEFORE INSERT ON PHIEUTHUEPHONG
FOR EACH ROW
DECLARE
    so_luong_loi INT;
    KIEM_TRA INT;
BEGIN
    so_luong_loi := 0;
    --KIEM TRA TIENPHONG
    :NEW.TIENPHONG := 0;
    --KIEM TRA MAKH
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = :NEW.MAKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khach hang nay khong ton tai, vui long kiem tra lai');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MANV
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    --KIEM TRA MATT
    :NEW.MATT := 1;
    --KIEM TRA TOAN BO
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20005, 'Thêm phiêu thuê phòng thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_PHIEUTHUEPHONG_TRUOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_MALP_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_MALP_PHONG" 
BEFORE INSERT OR UPDATE ON PHONG
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM LOAIPHONG
    WHERE MALP = :NEW.MALP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Loại phòng này không tồn tại, vui lòng kiểm tra lại');
            IF INSERTING THEN
                RAISE_APPLICATION_ERROR(-20001, 'Thêm phòng thất bại');
            ELSIF UPDATING THEN
                 RAISE_APPLICATION_ERROR(-20002, 'Cập nhật phòng thất bại');
            END IF;
        END;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_MALP_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_GHICHU_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_GHICHU_PHONG" 
BEFORE INSERT OR UPDATE ON PHONG
FOR EACH ROW
DECLARE
    KIEM_TRA INT;
BEGIN
    IF LENGTH(:NEW.GHICHU) > 100 AND :NEW.GHICHU IS NOT NULL THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Ghi chú phải ít hơn 101 ký tự');
            IF INSERTING THEN   
                 RAISE_APPLICATION_ERROR(-20001, 'Thêm phòng thất bại');
            ELSIF UPDATING THEN
                 RAISE_APPLICATION_ERROR(-20002, 'Cập nhật phòng thất bại');
            END IF;
        END;
    END IF;
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_GHICHU_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_TENPHONG_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_TENPHONG_PHONG" 
BEFORE INSERT OR UPDATE OF MALP ON PHONG
FOR EACH ROW
BEGIN
    CASE
        WHEN :NEW.MALP = 1 THEN :NEW.TENPHONG :='SD';
        WHEN :NEW.MALP = 2 THEN :NEW.TENPHONG :='SP';
        WHEN :NEW.MALP = 3 THEN :NEW.TENPHONG :='DL';
        WHEN :NEW.MALP = 4 THEN :NEW.TENPHONG :='ST';
        WHEN :NEW.MALP = 5 THEN :NEW.TENPHONG :='CN';
     END CASE;

     CASE 
        WHEN :NEW.MAPHONG < 10 THEN :NEW.TENPHONG := :NEW.TENPHONG ||ROUND(:NEW.MAPHONG/2)||0||:NEW.MAPHONG;
        ELSE 
            :NEW.TENPHONG := :NEW.TENPHONG ||ROUND(:NEW.MAPHONG/2)||:NEW.MAPHONG;
     END CASE;
     IF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('Cập nhật tên phòng thành công');
      END IF;  
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_TENPHONG_PHONG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KIEM_TRA_DIEU_KIEN_QD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_QD" 
BEFORE INSERT OR UPDATE ON QUYDINH
FOR EACH ROW
DECLARE
    so_luong_loi INT;
BEGIN
    so_luong_loi := 0;
    -- KIEM TRA TEN
    IF LENGTH(:NEW.TENQD) > 25 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tên quy định pải ít hơn 25 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA MOTA
    IF :NEW.MOTA IS NOT NULL AND LENGTH(:NEW.MOTA) > 500 THEN 
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Mô tả không vượt qua 500 ký tự');
            so_luong_loi := so_luong_loi + 1;
        END;
    END IF;
    -- KIEM TRA TOAN BO:
    IF so_luong_loi > 0 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20001, 'Thêm quy định thất bại');
        END;
    END IF;

    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20000, 'Lỗi');
END;

/
ALTER TRIGGER "C##LUCIFER"."KIEM_TRA_DIEU_KIEN_QD" ENABLE;
--------------------------------------------------------
--  DDL for Procedure GIA_PHONG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."GIA_PHONG" (v_lp loaiphong.malp%type, v_gia loaiphong.giaphong%type)
is
    pragma autonomous_transaction;
begin
    update loaiphong 
    set giaphong = v_gia
    where malp = v_lp;
    rollback;
    --commit;
end;

/
--------------------------------------------------------
--  DDL for Procedure HIEN_THI_THEO_MATTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."HIEN_THI_THEO_MATTP" (V_TTP TINHTRANGPHONG.MATTP%TYPE,
                                                V_NGAYBD CHITIETTTP.NGAYBD%TYPE,
                                                V_NGAYKT CHITIETTTP.NGAYKT%TYPE,
                                                V_PHIEU PHIEUTHUEPHONG.MAPTP%TYPE,
                                                V_TT TINHTRANGPHIEU.MATT%TYPE
                                               )
IS
    BO_VALUE VARCHAR2(5);
    TYPE T_PHONG IS  RECORD (   MPHONG PHONG.MAPHONG%TYPE,
                                TPHONG PHONG.TENPHONG%TYPE,
                                GPHONG LOAIPHONG.GIAPHONG%TYPE        
                            );
    TYPE T_HH IS TABLE OF T_PHONG INDEX BY PLS_INTEGER;  

    TYPE T_CTTTP IS TABLE OF CHITIETTTP%ROWTYPE INDEX BY PLS_INTEGER;
    TYPE T_PDT IS TABLE OF PHIEUDATTRUOC%ROWTYPE INDEX BY PLS_INTEGER;
    TYPE T_CTPDT IS TABLE OF CHITIETPDT%ROWTYPE INDEX BY PLS_INTEGER;
    TYPE T_PTP IS TABLE OF PHIEUTHUEPHONG%ROWTYPE INDEX BY PLS_INTEGER;
    TYPE T_CTPTP IS TABLE OF CHITIETPTP%ROWTYPE INDEX BY PLS_INTEGER;

    V_HH T_HH;
    V_CTTTP T_CTTTP;
    V_PDT T_PDT;
    V_CTPDT T_CTPDT;
    V_PTP T_PTP;
    V_CTPTP T_CTPTP;

    PROCEDURE HIEN_THI_CHI_TIET_1 IS 
        HH_INDEX PLS_INTEGER;
        CTTTP_INDEX PLS_INTEGER;
    BEGIN
        HH_INDEX := V_HH.FIRST;
        LOOP
            EXIT WHEN HH_INDEX IS NULL;
            DBMS_OUTPUT.PUT_LINE(V_HH(HH_INDEX).MPHONG ||'        '|| V_HH(HH_INDEX).TPHONG||'        '|| V_HH(HH_INDEX).GPHONG);

            SELECT DISTINCT * BULK COLLECT INTO V_CTTTP
            FROM CHITIETTTP
            WHERE MATTP = 1 AND MAPHONG = V_HH(HH_INDEX).MPHONG AND ( ( (BO_VALUE = 'TRUE') AND TRUNC(NGAYBD) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYKT))
                                                       OR (BO_VALUE = 'FALSE') 
                                                    )
            ORDER BY NGAYBD;

            FOR CTTTP_INDEX IN 1 .. V_CTTTP.COUNT
            LOOP
                DBMS_OUTPUT.PUT_LINE('                      '||V_CTTTP(CTTTP_INDEX).NGAYBD||'        '|| V_CTTTP(CTTTP_INDEX).NGAYKT);
            END LOOP;               
            HH_INDEX := V_HH.NEXT(HH_INDEX);
        END LOOP;
    END;

    PROCEDURE HIEN_THI_CHI_TIET_2 IS 
        PDT_INDEX PLS_INTEGER;
        CTPDT_INDEX PLS_INTEGER;
    BEGIN
        PDT_INDEX := V_PDT.FIRST;
        LOOP
            EXIT WHEN PDT_INDEX IS NULL;
            DBMS_OUTPUT.PUT_LINE(V_PDT(PDT_INDEX).MAPDT ||'        '|| V_PDT(PDT_INDEX).NGAYDT||'        '|| V_PDT(PDT_INDEX).MAKH);

            SELECT DISTINCT * BULK COLLECT INTO V_CTPDT
            FROM CHITIETPDT
            WHERE MAPDT = V_PDT(PDT_INDEX).MAPDT AND ( (BO_VALUE = 'TH1' OR BO_VALUE = 'TH4')
                                                        OR ((BO_VALUE = 'TH2' OR BO_VALUE = 'TH5')AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPDD))
                                                        OR ((BO_VALUE = 'TH3' OR BO_VALUE = 'TH6')AND MAPDT = V_PDT(PDT_INDEX).MAPDT)
                                                        )
            ORDER BY MAPHONG, NGAYNP;

            FOR CTPDT_INDEX IN 1 .. V_CTPDT.COUNT
            LOOP
                DBMS_OUTPUT.PUT_LINE('                      '||V_CTPDT(CTPDT_INDEX).MAPHONG||'        '|| V_CTPDT(CTPDT_INDEX).NGAYNP||'        '|| V_CTPDT(CTPDT_INDEX).NGAYTPDD);
            END LOOP;   

            PDT_INDEX := V_PDT.NEXT(PDT_INDEX);
        END LOOP;
    END;

    PROCEDURE HIEN_THI_CHI_TIET_3 IS 
        PTP_INDEX PLS_INTEGER;
        CTPTP_INDEX PLS_INTEGER;
    BEGIN
        PTP_INDEX := V_PTP.FIRST;
        LOOP
            EXIT WHEN PTP_INDEX IS NULL;
            DBMS_OUTPUT.PUT_LINE(V_PTP(PTP_INDEX).MAPTP ||'        '|| V_PTP(PTP_INDEX).TIENPHONG||'        '|| V_PTP(PTP_INDEX).MAKH||'        '|| V_PTP(PTP_INDEX).MAPDT);

            SELECT DISTINCT * BULK COLLECT INTO V_CTPTP
            FROM CHITIETPTP
            WHERE MAPTP = V_PTP(PTP_INDEX).MAPTP AND ( (BO_VALUE = 'TH1' OR BO_VALUE = 'TH4')
                                                        OR ((BO_VALUE = 'TH2' OR BO_VALUE = 'TH5')AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPTT))
                                                        OR ((BO_VALUE = 'TH3' OR BO_VALUE = 'TH6')AND MAPTP = V_PTP(PTP_INDEX).MAPTP)
                                                        )
            ORDER BY MAPHONG, NGAYNP;

            FOR CTPTP_INDEX IN 1 .. V_CTPTP.COUNT
            LOOP
                DBMS_OUTPUT.PUT_LINE('                      '||V_CTPTP(CTPTP_INDEX).MAPHONG||'        '|| V_CTPTP(CTPTP_INDEX).NGAYNP||'        '|| V_CTPTP(CTPTP_INDEX).NGAYTPTT
                                            ||'        '|| V_CTPTP(CTPTP_INDEX).SLNGUOI||'        '|| V_CTPTP(CTPTP_INDEX).PHUTHU);
            END LOOP;   

            PTP_INDEX := V_PTP.NEXT(PTP_INDEX);
        END LOOP;
    END;
    PROCEDURE KIEMTRA IS
    BEGIN
        IF V_TTP = 1 THEN
            BO_VALUE := CASE WHEN V_NGAYBD IS NOT NULL AND V_NGAYKT IS NOT NULL THEN 'TRUE' ELSE 'FALSE' END;
        ELSE
            BO_VALUE := CASE 
                        WHEN V_TT IS NULL THEN( CASE
                                                WHEN V_NGAYBD IS NULL AND V_NGAYKT IS NULL AND V_PHIEU IS NULL THEN 'TH1'
                                                WHEN V_NGAYBD IS NOT NULL AND V_NGAYKT IS NOT NULL AND V_PHIEU IS NULL THEN 'TH2'
                                                WHEN V_NGAYBD IS NULL AND V_NGAYKT IS NULL AND V_PHIEU IS NOT NULL THEN 'TH3'
                                                END
                                                )
                         WHEN V_TT IS NOT NULL THEN (  CASE
                                WHEN V_NGAYBD IS NULL AND V_NGAYKT IS NULL AND V_PHIEU IS NULL THEN 'TH4'
                                WHEN V_NGAYBD IS NOT NULL AND V_NGAYKT IS NOT NULL AND V_PHIEU IS NULL THEN 'TH5'
                                WHEN V_NGAYBD IS NULL AND V_NGAYKT IS NULL AND V_PHIEU IS NOT NULL THEN 'TH6'
                                END
                                )
                        END;
        END IF;
    END;

BEGIN
    LOCK TABLE PHONG IN ROW SHARE MODE;
    LOCK TABLE CHITIETTTP IN ROW SHARE MODE;
    LOCK TABLE PHIEUDATTRUOC IN ROW SHARE MODE;
    LOCK TABLE CHITIETPDT IN ROW SHARE MODE;
    LOCK TABLE PHIEUTHUEPHONG IN ROW SHARE MODE;
    LOCK TABLE CHITIETPTP IN ROW SHARE MODE;
    IF V_TTP = 1 THEN 
        BEGIN
            KIEMTRA;

           SELECT DISTINCT P.MAPHONG, TENPHONG, GIAPHONG 
                    BULK COLLECT INTO V_HH
            FROM PHONG P JOIN LOAIPHONG LP ON P.MALP = LP.MALP JOIN CHITIETTTP CTTTP ON CTTTP.MAPHONG = P.MAPHONG
            WHERE  ( (BO_VALUE = 'TRUE') AND TRUNC(NGAYBD) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYKT) )
                    OR (BO_VALUE = 'FALSE')           
            ORDER BY P.MAPHONG;

             HIEN_THI_CHI_TIET_1;
        END;
    ELSIF V_TTP = 2 THEN
        BEGIN
            KIEMTRA;

            SELECT DISTINCT PDT.MAPDT, PDT.NGAYDT, PDT.MAKH, PDT.MANV, PDT.MATT  BULK COLLECT INTO V_PDT
            FROM PHIEUDATTRUOC PDT JOIN CHITIETPDT CTPDT ON CTPDT.MAPDT = PDT.MAPDT
            WHERE ( (BO_VALUE = 'TH1' ) OR 
                    (BO_VALUE = 'TH2' AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPDD)) OR 
                    (BO_VALUE = 'TH3' AND PDT.MAPDT = V_PHIEU) 
                  )
                    OR (
                        MATT = V_TT AND 
                                        (   (BO_VALUE = 'TH4' ) OR 
                                            (BO_VALUE = 'TH5' AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPDD)) OR 
                                            (BO_VALUE = 'TH6' AND PDT.MAPDT = V_PHIEU)
                                        )
                        )
            ORDER BY MAPDT;

             HIEN_THI_CHI_TIET_2;
        END;
    ELSIF V_TTP = 3 THEN
        BEGIN
            KIEMTRA;

            SELECT DISTINCT PTP.MAPTP, PTP.TIENPHONG, PTP.MAKH, PTP.MANV, PTP.MAPDT, PTP.MATT  BULK COLLECT INTO V_PTP
            FROM PHIEUTHUEPHONG PTP JOIN CHITIETPTP CTPTP ON CTPTP.MAPTP = PTP.MAPTP
            WHERE ( (BO_VALUE = 'TH1' ) OR 
                    (BO_VALUE = 'TH2' AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPTT)) OR 
                    (BO_VALUE = 'TH3' AND PTP.MAPTP = V_PHIEU) 
                  )
                    OR (
                        MATT = V_TT AND 
                                        (   (BO_VALUE = 'TH4' ) OR 
                                            (BO_VALUE = 'TH5' AND TRUNC(NGAYNP) <= TRUNC(V_NGAYBD) AND TRUNC(V_NGAYKT) <= TRUNC(NGAYTPTT)) OR 
                                            (BO_VALUE = 'TH6' AND PTP.MAPTP = V_PHIEU)
                                        )
                        )
            ORDER BY MAPTP;

             HIEN_THI_CHI_TIET_3;
        END;
    ELSE
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Không tồn tại tình trạng phòng này, vui lòng kiểm tra lại');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_CCCDKH_KH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_CCCDKH_KH" (V_KH IN KHACHHANG.MAKH%TYPE, V_CCCDKH IN KHACHHANG.CCCDKH%TYPE)
IS
    KIEM_TRA KHACHHANG.MAKH%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM KHACHHANG
    WHERE MAKH = V_KH;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Khach hang nay khong ton tai, vui long kiem tra lai');
    ELSE
        BEGIN
            UPDATE KHACHHANG
            SET CCCDKH = V_CCCDKH
            WHERE MAKH = V_KH;

            DBMS_OUTPUT.PUT_LINE('Cap nhat CCCD khach hang thanh cong');
        END;
    END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure SUA_CCCDNV_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_CCCDNV_NV" (V_NV IN NHANVIEN.MANV%TYPE, V_CCCDNV IN NHANVIEN.CCCDNV%TYPE)
IS
    KIEM_TRA NHANVIEN.MANV%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Nhan vien nay khong ton tai, vui long kiem tra lai');
    ELSE
        BEGIN
            UPDATE NHANVIEN
            SET CCCDNV = V_CCCDNV
            WHERE MANV = V_NV;
            DBMS_OUTPUT.PUT_LINE('Cap nhat CCCD nhan vien thanh cong');
        END;
    END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure SUA_DENNGAY_KM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_DENNGAY_KM" (  V_KM IN KHUYENMAI.MAKM%TYPE,
                                             V_DN IN  KHUYENMAI.DENNGAY%TYPE
                                            )
IS
    KIEM_TRA KHUYENMAI.MAKM%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM KHUYENMAI
    WHERE MAKM = V_KM;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Chương trình khuyến mãi này không tồn tại, vui lòng kiểm tra lại.');
    ELSE
        BEGIN
            UPDATE KHUYENMAI
            SET DENNGAY = V_DN
            WHERE MAKM = V_KM;

            DBMS_OUTPUT.PUT_LINE('Cập nhật ngày kết thúc chương trình khuyến mãi thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_EMAIL_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_EMAIL_NV" (V_NV IN NHANVIEN.MANV%TYPE, V_E IN NHANVIEN.EMAILNV%TYPE)
IS
    V_KT NHANVIEN.MANV%TYPE;
BEGIN
    SELECT MANV INTO V_KT 
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF V_KT IS NULL THEN
        DBMS_OUTPUT.PUT_LINE('Mã nhân viên không tồn tại');
    ELSE
        BEGIN
            UPDATE NHANVIEN
            SET EMAILNV = V_E
            WHERE MANV = V_NV;
            DBMS_OUTPUT.PUT_LINE('Cập nhật email nhân viên thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_GHICHU_PHONG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_GHICHU_PHONG" (   V_P IN PHONG.MAPHONG%TYPE,
                                                V_GHICHU IN PHONG.GHICHU%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = V_P;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phòng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE PHONG
            SET GHICHU = V_GHICHU
            WHERE MAPHONG = V_P;

            DBMS_OUTPUT.PUT_LINE('Cập nhật ghi chú thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_GIADV_DICHVU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_GIADV_DICHVU" (   V_DV IN DICHVU.MADV%TYPE,
                                                V_GIADV IN DICHVU.GIADV%TYPE
                                            )
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV= V_DV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Dịch vụ này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE DICHVU
            SET GIADV = V_GIADV 
            WHERE MADV = V_DV;

            DBMS_OUTPUT.PUT_LINE('Cập nhạt giá dịch vụ thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_GIAPHONG_PHONG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_GIAPHONG_PHONG" ( V_PHONG IN PHONG.MAPHONG%TYPE,
                                            V_GIA IN LOAIPHONG.GIAPHONG%TYPE
                                            )
IS
    KIEM_TRA INT;
    V_LP LOAIPHONG.MALP%TYPE;
BEGIN
    --LOCK TABLE LOAIPHONG IN ROW EXCLUSIVE MODE;

    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG= V_PHONG;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Pphòng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            SELECT LP.MALP INTO V_LP 
            FROM LOAIPHONG LP JOIN PHONG P ON P.MALP = LP.MALP
            WHERE MAPHONG = V_PHONG;

            UPDATE LOAIPHONG
            SET GIAPHONG = V_GIA
            WHERE MALP = V_LP;

            DBMS_OUTPUT.PUT_LINE('Cập nhật loại phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MADONVI_DICHVU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MADONVI_DICHVU" ( V_DV IN DICHVU.MADV%TYPE,
                                                V_DONVI IN DONVI.MADONVI%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV= V_DV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Dịch vụ này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE DICHVU
            SET MADONVI = V_DONVI
            WHERE MADV = V_DV;

            DBMS_OUTPUT.PUT_LINE('Cập nhật đơn vị thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MADV_CTPDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MADV_CTPDV" (   V_PDV IN PHIEUDICHVU.MAPDV%TYPE,
                                                V_DV IN DICHVU.MADV%TYPE,
                                                V_NGAYSD IN CHITIETPDV.NGAYSD%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE CHITIETPDV IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM CHITIETPDV
    WHERE   MAPDV = V_PDV 
            AND TRUNC(NGAYSD) = TRUNC(V_NGAYSD) ;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Chi tiết phiếu dịch vụ khách hàng không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE CHITIETPDV
            SET MADV = V_DV
            WHERE MADV = V_DV 
                AND TRUNC(NGAYSD) = TRUNC(V_NGAYSD) ;

            DBMS_OUTPUT.PUT_LINE('Cập nhật phiếu dịch vụ có mapdv là : '|| V_PDV|| ' với ngày sử dụng dịch vụ : '|| V_NGAYSD||' thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MALP_PHONG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MALP_PHONG" ( V_P IN PHONG.MAPHONG%TYPE,
                                            V_LP IN LOAIPHONG.MALP%TYPE
                                            )
IS
    KIEM_TRA INT;
    V_TENPHONG PHONG.TENPHONG%TYPE;
BEGIN
    --LOCK TABLE PHONG IN EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM LOAIPHONG
    WHERE MALP= V_LP;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Loại phòng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE PHONG
            SET MALP = V_LP, TENPHONG = V_TENPHONG
            WHERE MAPHONG = V_P;

            DBMS_OUTPUT.PUT_LINE('Cập nhật loại phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MATTP_CTTTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MATTP_CTTTP" (    V_PHONG PHONG.MAPHONG%TYPE,
                                                V_TTP TINHTRANGPHONG.MATTP%TYPE,
                                                V_NGAYBD CHITIETTTP.NGAYBD%TYPE,
                                                V_NGAYKT CHITIETTTP.NGAYKT%TYPE
                                           )
IS
    XU_LY_MATTP_1 EXCEPTION;
    XU_LY_MATTP_2_HOAC_3 EXCEPTION;
    ----------------XU_LY_MATTP_1--------------------
    V_BD CHITIETTTP.NGAYBD%TYPE;--CU
    V_KT CHITIETTTP.NGAYKT%TYPE;--CU

    V_BD1 CHITIETTTP.NGAYBD%TYPE;--CU
    V_KT1 CHITIETTTP.NGAYKT%TYPE;--CU

    TEMP CHITIETTTP.NGAYBD%TYPE;

    DEM_DANG_TRUOC INT;
    DEM_DANG_SAU INT;
    ----------------XU_LY_MATTP_2_HOAC_3---------------
    V_BD3 CHITIETTTP.NGAYBD%TYPE;
    V_KT3 CHITIETTTP.NGAYKT%TYPE;
    V_TP CHITIETTTP.MATTP%TYPE;

BEGIN
    LOCK TABLE CHITIETTTP IN ROW EXCLUSIVE MODE;
    IF V_TTP = 1 THEN
        BEGIN
            RAISE XU_LY_MATTP_1;
        END;
    ELSIF V_TTP = 2 OR V_TTP = 3 THEN
        BEGIN
            RAISE XU_LY_MATTP_2_HOAC_3;
        END;
    END IF;

    EXCEPTION
        WHEN XU_LY_MATTP_1 THEN
            BEGIN
                UPDATE CHITIETTTP
                SET MATTP = V_TTP
                WHERE MAPHONG = V_PHONG AND TRUNC(NGAYBD) = TRUNC(V_NGAYBD) AND TRUNC(NGAYKT) = TRUNC(V_NGAYKT);
                TEMP := V_NGAYBD;
                
                SELECT COUNT(*) INTO DEM_DANG_TRUOC
                FROM CHITIETTTP 
                WHERE MAPHONG = V_PHONG AND MATTP = 1 AND TRUNC(NGAYKT + 1) = TRUNC(V_NGAYBD);

                SELECT COUNT(*) INTO DEM_DANG_SAU
                FROM CHITIETTTP 
                WHERE MAPHONG = V_PHONG AND MATTP = 1
                            AND TRUNC(NGAYBD - 1)  = TRUNC(V_NGAYKT);


                IF DEM_DANG_TRUOC = 1 THEN
                    BEGIN                   
                        SELECT NGAYBD, NGAYKT INTO V_BD, V_KT 
                        FROM CHITIETTTP 
                        WHERE MAPHONG = V_PHONG AND MATTP = 1 AND TRUNC(NGAYKT + 1) = TRUNC(V_NGAYBD);                       

                        DELETE FROM CHITIETTTP 
                        WHERE MAPHONG = V_PHONG AND MATTP = 1 
                                            AND TRUNC(NGAYKT)=TRUNC(V_KT) AND TRUNC(V_BD) = TRUNC(NGAYBD);

                        UPDATE CHITIETTTP
                        SET NGAYBD = V_BD
                        WHERE MAPHONG = V_PHONG AND MATTP = 1 AND  
                                            TRUNC(NGAYBD) = TRUNC(TEMP) AND 
                                            TRUNC(NGAYKT) = TRUNC(V_NGAYKT);

                        TEMP :=V_BD;
                    END;
                END IF;

                IF DEM_DANG_SAU = 1 THEN
                    BEGIN

                        SELECT NGAYBD, NGAYKT INTO V_BD1, V_KT1 
                        FROM CHITIETTTP 
                        WHERE MAPHONG = V_PHONG AND MATTP = 1
                                    AND TRUNC(NGAYBD - 1)  = TRUNC(V_NGAYKT);


                        DELETE FROM CHITIETTTP 
                        WHERE MAPHONG = V_PHONG AND MATTP = 1 AND TRUNC(NGAYKT)=TRUNC(V_KT1) AND TRUNC(V_BD1) = TRUNC(NGAYBD);

                        UPDATE CHITIETTTP
                        SET NGAYKT = V_KT1
                        WHERE MAPHONG = V_PHONG AND MATTP = 1 AND  
                                            TRUNC(NGAYBD) = TRUNC(TEMP) AND 
                                            TRUNC(NGAYKT) = TRUNC(V_NGAYKT);
                    END;
                END IF;
            END;
        WHEN XU_LY_MATTP_2_HOAC_3 THEN
            BEGIN
                SELECT NGAYBD, NGAYKT  INTO V_BD3, V_KT3
                FROM CHITIETTTP
                WHERE MAPHONG = V_PHONG AND MATTP = 1 AND 
                        TRUNC(NGAYBD) <= TRUNC(V_NGAYBD) AND
                        TRUNC(NGAYKT) >= TRUNC(V_NGAYKT);
                UPDATE CHITIETTTP
                SET MATTP = V_TTP, NGAYBD = V_NGAYBD , NGAYKT = V_NGAYKT
                WHERE MAPHONG = V_PHONG AND 
                                TRUNC(NGAYBD) <= TRUNC(V_NGAYBD) AND
                                TRUNC(NGAYKT) >= TRUNC(V_NGAYKT);

                IF TRUNC(V_NGAYBD) = TRUNC(V_BD3) AND TRUNC(V_NGAYKT) < TRUNC(V_KT3) THEN
                    BEGIN
                        INSERT INTO CHITIETTTP(MAPHONG, MATTP, NGAYBD, NGAYKT)
                        VALUES(V_PHONG, 1, V_NGAYKT + 1, V_KT3);
                    END;
                ELSIF TRUNC(V_NGAYKT) = TRUNC(V_KT3) AND TRUNC(V_NGAYBD) > TRUNC(V_BD3) THEN
                    BEGIN
                        INSERT INTO CHITIETTTP(MAPHONG, MATTP, NGAYBD, NGAYKT)
                        VALUES(V_PHONG, 1, V_BD3, V_NGAYBD - 1);
                    END;
                ELSIF TRUNC(V_NGAYBD) > TRUNC(V_BD3) AND TRUNC(V_NGAYKT) < TRUNC(V_KT3) THEN
                    BEGIN
                        INSERT INTO CHITIETTTP(MAPHONG, MATTP, NGAYBD, NGAYKT)
                        VALUES(V_PHONG, 1, V_NGAYKT + 1, V_KT3);

                        INSERT INTO CHITIETTTP(MAPHONG, MATTP, NGAYBD, NGAYKT)
                        VALUES(V_PHONG, 1, V_BD3, V_NGAYBD - 1);
                    END;
                END IF;
            END;
        WHEN NO_DATA_FOUND THEN
            BEGIN
                DBMS_OUTPUT.PUT_LINE('Cập nhật chi tiết tình trạng phòng thất bại');
            END;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MATT_PDT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MATT_PDT" (   V_PDT IN PHIEUDATTRUOC.MAPDT%TYPE,
                                            V_TT IN TINHTRANGPHIEU.MATT%TYPE
                                            )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE PHIEUDATTRUOC IN EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM TINHTRANGPHIEU
    WHERE MATT= V_TT;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tình trạng phòng không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE PHIEUDATTRUOC
            SET MATT = V_TT
            WHERE MAPDT= V_PDT;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tình trạng phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MATT_PDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MATT_PDV" (   V_PDV IN PHIEUDICHVU.MAPDV%TYPE,
                                            V_TT IN TINHTRANGPHIEU.MATT%TYPE
                                            )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE PHIEUDICHVU IN EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM TINHTRANGPHIEU
    WHERE MATT= V_TT;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tình trạng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE PHIEUDICHVU
            SET MATT = V_TT
            WHERE MAPDV = V_PDV;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tình trạng phiếu thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_MATT_PTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_MATT_PTP" (   V_PTP IN PHIEUTHUEPHONG.MAPTP%TYPE,
                                            V_TT IN TINHTRANGPHIEU.MATT%TYPE
                                            )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE PHIEUTHUEPHONG IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM TINHTRANGPHIEU
    WHERE MATT= V_TT;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Tình trạng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE PHIEUTHUEPHONG
            SET MATT = V_TT
            WHERE MAPTP= V_PTP;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tình trạng phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_PASSWORD_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_PASSWORD_NV" (V_NV IN NHANVIEN.MANV%TYPE, V_PASSWORD IN NHANVIEN.PASSWORD%TYPE)
IS
    KIEM_TRA NHANVIEN.MANV%TYPE;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE NHANVIEN
            SET PASSWORD = V_PASSWORD
            WHERE MANV = V_NV;
            DBMS_OUTPUT.PUT_LINE('Cập nhật mật khẩu nhân viên thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_PHANTRAMKM_CTKM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_PHANTRAMKM_CTKM" (   V_KM IN KHUYENMAI.MAKM%TYPE,
                                                    V_LKH IN LOAIKHACHHANG.MALKH%TYPE,
                                                    V_PTKM IN CHITIETKM.PHANTRAMKM%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE CHITIETKM IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM CHITIETKM
    WHERE MAKM = V_KM AND MALKH = V_LKH;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Chi tiết chương trình khuyến mãi này không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE CHITIETKM
            SET PHANTRAMKM = V_PTKM
            WHERE MAKM = V_KM AND MALKH = V_LKH;

            DBMS_OUTPUT.PUT_LINE('Cập nhật phần trăm khuyến mãi của chương trình khuyên mãi có makm là : '|| V_KM|| ' của loại khách hàng: '|| V_LKH||'  thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_SDTKH_KH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_SDTKH_KH" (V_KH IN KHACHHANG.MAKH%TYPE, V_SDTKH IN KHACHHANG.SDTKH%TYPE)
IS
    KIEM_TRA KHACHHANG.MAKH%TYPE;
BEGIN
    --LOCK TABLE KHACHHANG IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM KHACHHANG
    WHERE MAKH = V_KH;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE KHACHHANG
            SET SDTKH = V_SDTKH
            WHERE MAKH = V_KH;

            DBMS_OUTPUT.PUT_LINE('Cập nhật sdt khách hàng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_SLDV_CTPDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_SLDV_CTPDV" (   V_PDV IN PHIEUDICHVU.MAPDV%TYPE,
                                                V_DV IN DICHVU.MADV%TYPE,
                                                V_SLDV IN CHITIETPDV.SLDV%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE CHITIETPDV IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM CHITIETPDV
    WHERE   MAPDV = V_PDV AND MADV = V_DV;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Chi tiết phiếu dịch vụ của khách hàng không tồn tạ, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE CHITIETPDV
            SET SLDV = V_SLDV
            WHERE MADV = V_DV AND MADV = V_DV;

            DBMS_OUTPUT.PUT_LINE('Cập nhật số lượng dịch vụ có mapdv là : '|| V_PDV|| ' và madv là : '|| V_DV||' thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_TENDONVI_DONVI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_TENDONVI_DONVI" (   V_DONVI IN DONVI.MADONVI%TYPE,
                                                    V_TENDONVI IN DONVI.TENDONVI%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE DONVI IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DONVI
    WHERE MADONVI= V_DONVI;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Đơn vị này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE DONVI
            SET TENDONVI = V_TENDONVI
            WHERE MADONVI = V_DONVI;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tên đơn vị thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_TENDV_DICHVU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_TENDV_DICHVU" (   V_DV IN DICHVU.MADV%TYPE,
                                                V_TENDV IN DICHVU.TENDV%TYPE
                                            )
IS
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE DICHVU IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV= V_DV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Dịch vụ này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            UPDATE DICHVU
            SET TENDV = V_TENDV
            WHERE MADV = V_DV;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tên dịch vụ thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_TENND_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_TENND_NV" (V_NV IN NHANVIEN.MANV%TYPE, V_TENND IN NHANVIEN.TENND%TYPE)
IS
    KIEM_TRA NHANVIEN.MANV%TYPE;
BEGIN
    --LOCK TABLE NHANVIEN IN ROW EXCLUSIVE MODE;
    SELECT MANV INTO KIEM_TRA 
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE NHANVIEN
            SET TENND = TENND
            WHERE MANV = V_NV;
            DBMS_OUTPUT.PUT_LINE('Cập nhật tên tài khoản nhân viên thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_TENQD_QD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_TENQD_QD" (   V_QD IN QUYDINH.MAQD%TYPE,
                                            V_TENQD IN QUYDINH.TENQD%TYPE)
AS
    QD QUYDINH%ROWTYPE;
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE QUYDINH IN ROW EXCLUSIVE MODE;
    SELECT MAQD INTO KIEM_TRA
    FROM QUYDINH
    WHERE MAQD = V_QD;

    IF KIEM_TRA = 0 THEN
            DBMS_OUTPUT.PUT_LINE('Quy định này không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE QUYDINH
            SET TENQD = V_TENQD
            WHERE MAQD = V_QD;

            DBMS_OUTPUT.PUT_LINE('Cập nhật tên quy định có maqd là: '||V_QD||' thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUA_TUNGAY_KM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."SUA_TUNGAY_KM" (  V_KM IN KHUYENMAI.MAKM%TYPE,
                                            V_TN IN VARCHAR2
                                            )
IS
    KIEM_TRA KHUYENMAI.MAKM%TYPE;
BEGIN
    --LOCK TABLE KHUYENMAI IN ROW EXCLUSIVE MODE;
    SELECT COUNT(*) INTO KIEM_TRA 
    FROM KHUYENMAI
    WHERE MAKM = V_KM;

    IF KIEM_TRA = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Chương trình khuyến mãi này không tồn tại, vui lòng kiểm tra lại');
    ELSE
        BEGIN
            UPDATE KHUYENMAI
            SET TUNGAY = TO_DATE(V_TN, 'DD/MM/YYYY HH24:MI')
            WHERE MAKM = V_KM;

            DBMS_OUTPUT.PUT_LINE('Cập nhật ngày bắt đầu chương trình khuyến mãi thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_CTKM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_CTKM" ( V_KM IN KHUYENMAI.MAKM%TYPE,
                                        V_LKH IN LOAIKHACHHANG.MALKH%TYPE,
                                        V_PTKM IN CHITIETKM.PHANTRAMKM%TYPE
                                        )
IS
    KIEM_TRA INT;
BEGIN
    INSERT INTO ChiTietKM (maKM, maLKH, phanTramKM)
    VALUES (V_KM, V_LKH ,  V_PTKM); 

    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETKM
    WHERE MAKM = V_KM AND MALKH = V_LKH;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm chi tiết khuyến mãi thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_CTPDT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_CTPDT" (    V_PDT IN PHIEUDATTRUOC.MAPDT%TYPE,
                                            V_PHONG IN PHONG.MAPHONG%TYPE,
                                            V_NGAYNP IN CHITIETTTP.NGAYBD%TYPE,
                                            V_NGAYTPDD IN CHITIETTTP.NGAYKT%TYPE
                                        )
IS
    KIEM_TRA INT;
    V_NGAYBD CHITIETTTP.NGAYBD%TYPE;
    V_NGAYKT CHITIETTTP.NGAYKT%TYPE;
BEGIN
    --NGAYNP VA NGAYTPDD => CTTTP
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = V_PHONG AND MATTP = 1 AND TRUNC(NGAYBD) <= TRUNC(V_NGAYNP)
            AND TRUNC(NGAYKT) >= TRUNC(V_NGAYTPDD);

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Không có phòng phù hợp');
        END;
    ELSE
        BEGIN
            --CAP NHAT TINH TRANG
            SUA_MATTP_CTTTP(V_PHONG, 2, V_NGAYNP, V_NGAYTPDD);
            --THEM CHITIETPDT
            INSERT INTO ChiTietPDT (maPDT, maPhong, ngayNP, ngayTPDD) 
            VALUES(V_PDT, V_PHONG, V_NGAYNP, V_NGAYTPDD);
        END;
    END IF;

    SELECT COUNT(MAPDT) INTO KIEM_TRA
    FROM CHITIETPDT
    WHERE MAPDT = V_PDT;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm chi tiết phiếu đặt trước thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_CTPDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_CTPDV" ( V_PDV IN PHIEUDICHVU.MAPDV%TYPE,
                                        V_DV IN DICHVU.MADV%TYPE,
                                        V_SLDV IN CHITIETPDV.SLDV%TYPE
                                        )
IS
    KIEM_TRA INT;
BEGIN
    INSERT INTO CHITIETPDV (maPDV, maDV, slDV)
    VALUES (V_PDV, V_DV , V_SLDV); 

    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETPDV
    WHERE MAPDV = V_PDV AND MADV = V_DV AND NGAYSD = SYSDATE;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm  chi tiết phiếu dịch vụ thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_CTPTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_CTPTP" (    V_PTP IN PHIEUTHUEPHONG.MAPTP%TYPE,
                                            V_PHONG IN PHONG.MAPHONG%TYPE,
                                            V_NGAYNP IN CHITIETPTP.NGAYNP%TYPE,
                                            V_NGAYTPTT IN CHITIETPTP.NGAYTPTT%TYPE,
                                            V_SLNGUOI IN CHITIETPTP.SLNGUOI%TYPE
                                        )
IS
    KIEM_TRA INT;
    V_NGAYBD CHITIETTTP.NGAYBD%TYPE;
    V_NGAYKT CHITIETTTP.NGAYKT%TYPE;
BEGIN
    --NGAYNP VA NGAYTPDD => CTTTP
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE MAPHONG = V_PHONG AND MATTP = 1 AND TRUNC(NGAYBD) <= TRUNC(V_NGAYNP)
            AND TRUNC(NGAYKT) >= TRUNC(V_NGAYTPTT);

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Không có phòng phù hợp');
        END;
    ELSE
        BEGIN
            SUA_MATTP_CTTTP(V_PHONG, 3, V_NGAYNP, V_NGAYTPTT);
            --THEM CHITIETPTP
            INSERT INTO ChiTietPTP (maPTP, maPhong, ngayNP, ngayTPTT, SLNGUOI) 
            VALUES(V_PTP, V_PHONG, V_NGAYNP, V_NGAYTPTT, V_SLNGUOI);
        END;
    END IF;

    SELECT COUNT(MAPTP) INTO KIEM_TRA
    FROM CHITIETPTP
    WHERE MAPTP = V_PTP AND MAPHONG = V_PHONG;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm chi tiết phiếu thuê phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_CTTTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_CTTTP" (    V_P IN PHONG.MAPHONG%TYPE,
                                            V_TTP IN TINHTRANGPHONG.MATTP%TYPE,
                                            V_BD IN CHITIETTTP.NGAYBD%TYPE,
                                            V_KT IN CHITIETTTP.NGAYKT%TYPE
                                        )
IS
    KIEM_TRA INT;
BEGIN
    INSERT INTO ChiTietTTP (maPhong, maTTP, ngayBD, ngayKT)
    VALUES (V_P, V_TTP, V_BD, V_KT); 

    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETTTP
    WHERE           MATTP = V_TTP AND MAPHONG = V_P 
                    AND TRUNC(NGAYBD) = TRUNC(V_BD) 
                    AND TRUNC(NGAYKT) = TRUNC(V_KT);

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm chi tiết tình trạng phòng thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_DICHVU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_DICHVU" (   V_TENDV IN DICHVU.TENDV%TYPE,
                                            V_GIADV IN DICHVU.GIADV%TYPE,
                                            V_MADONVI IN DONVI.MADONVI%TYPE
                                        )
IS
    V_DV DICHVU.MADV%TYPE;
    KIEM_TRA INT;
BEGIN
    V_DV := DV_S.NEXTVAL;

    INSERT INTO DichVu (maDV, tenDV, giaDV, maDonVi) 
    VALUES(V_DV, V_TENDV, V_GIADV, V_MADONVI);

    SELECT COUNT(MADV) INTO KIEM_TRA
    FROM DICHVU
    WHERE MADV = V_DV;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm dịch vụ thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_DONVI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_DONVI" (V_TENDONVI DONVI.TENDONVI%TYPE)
AS
    V_DONVI DONVI.MADONVI%TYPE;
    KIEM_TRA INT;
BEGIN
    V_DONVI := DONVI_S.NEXTVAL;

    INSERT INTO DonVi (maDonVi, tenDonVi) 
    VALUES(V_DONVI, V_TENDONVI);

    SELECT COUNT(MADONVI) INTO KIEM_TRA
    FROM DONVI
    WHERE MADONVI = V_DONVI;

    IF KIEM_TRA > 0 THEN
        DBMS_OUTPUT.PUT_LINE('Thêm đơn vị thành công');
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_HOADON
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_HOADON" (    V_KH IN KHACHHANG.MAKH%TYPE,
                                            V_NV IN NHANVIEN.MANV%TYPE
                                        )
IS
    V_HD HOADON.MAHD%TYPE;
    KIEM_TRA INT;

    V_PTP PHIEUTHUEPHONG.MAPTP%TYPE;
    V_TIENPHONG PHIEUTHUEPHONG.TIENPHONG%TYPE;

    V_GIAPHONG LOAIPHONG.GIAPHONG%TYPE;

    V_NGAYNP CHITIETPTP.NGAYNP%TYPE;
    V_NGAYTP CHITIETPTP.NGAYTPTT%TYPE;
    V_PHUTHU CHITIETPTP.PHUTHU%TYPE;
    CURSOR CUR_PHONG IS SELECT NGAYNP, NGAYTPTT, PHUTHU, GIAPHONG
                        FROM CHITIETPTP CTPTP JOIN PHONG P ON CTPTP.MAPHONG = P.MAPHONG 
                                JOIN LOAIPHONG LP ON P.MALP = LP.MALP
                        WHERE CTPTP.MAPTP = V_PTP;

    V_TUNGAY KHUYENMAI.TUNGAY%TYPE;
    V_DENNGAY KHUYENMAI.DENNGAY%TYPE;
    V_PHANTRAMKM CHITIETKM.PHANTRAMKM%TYPE;
    V_MAXKM CHITIETKM.PHANTRAMKM%TYPE;

    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    CURSOR CUR_KHUYENMAI IS SELECT TUNGAY, DENNGAY, PHANTRAMKM
                            FROM CHITIETKM CTKM JOIN KHUYENMAI KM ON CTKM.MAKM = KM.MAKM
                            WHERE MALKH = V_LKH;

      V_PDV PHIEUDICHVU.MAPDV%TYPE;
      V_TIENDV PHIEUDICHVU.TIENDV%TYPE;

      V_DV DICHVU.MADV%TYPE;
      V_GIADV DICHVU.GIADV%TYPE;

      V_SLDV CHITIETPDV.SLDV%TYPE;
      V_NGAYSD CHITIETPDV.NGAYSD%TYPE;

      CURSOR CUR_DICHVU IS SELECT NGAYSD, SLDV, GIADV
                            FROM CHITIETPDV CTPDV JOIN DICHVU DV ON CTPDV.MADV =DV.MADV
                            WHERE CTPDV.MAPDV = V_PDV;

     V_TONGTIEN HOADON.TONGTIEN%TYPE;                                 
BEGIN
    V_HD := HD_S.NEXTVAL;

    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = V_KH;

    IF KIEM_TRA = 1 THEN 
        BEGIN
            --TIM MALKH
            SELECT MALKH INTO V_LKH
            FROM KHACHHANG
            WHERE MAKH = V_KH;

            --TINH TIEN PHONG
            SELECT COUNT(MAPTP) INTO KIEM_TRA
            FROM PHIEUTHUEPHONG
            WHERE MAKH = V_KH AND MATT = 1;

            V_TIENPHONG := 0;

            IF KIEM_TRA <> 0 THEN
                BEGIN
                    SELECT MAPTP INTO V_PTP
                    FROM PHIEUTHUEPHONG
                    WHERE MAKH = V_KH AND MATT = 1;

                    OPEN CUR_PHONG;
                    LOOP
                        FETCH CUR_PHONG INTO V_NGAYNP, V_NGAYTP, V_PHUTHU, V_GIAPHONG;

                        EXIT WHEN CUR_PHONG%NOTFOUND;

                        WHILE TRUNC(V_NGAYNP) < TRUNC(V_NGAYTP)
                        LOOP
                            V_MAXKM := 0;

                            OPEN CUR_KHUYENMAI;
                            LOOP
                                FETCH CUR_KHUYENMAI INTO V_TUNGAY, V_DENNGAY, V_PHANTRAMKM;
                                EXIT WHEN CUR_KHUYENMAI%NOTFOUND;

                                IF TRUNC(V_NGAYNP) >= TRUNC(V_TUNGAY) AND TRUNC(V_NGAYTP) <= TRUNC(V_DENNGAY) THEN
                                    IF V_MAXKM = 0 OR V_MAXKM < V_PHANTRAMKM THEN
                                        V_MAXKM := V_PHANTRAMKM;
                                    END IF;
                                END IF;
                            END LOOP;
                            CLOSE CUR_KHUYENMAI;

                            V_TIENPHONG := V_TIENPHONG + (V_GIAPHONG * (1 + V_PHUTHU - V_MAXKM));
                            V_NGAYNP := V_NGAYNP + 1;
                        END LOOP;
                    END LOOP;
                    CLOSE CUR_PHONG;
                    --CAP NHAT TIENPHONG VAO PHIETHUEPHONG
                    UPDATE PHIEUTHUEPHONG
                    SET TIENPHONG = V_TIENPHONG
                    WHERE MAPTP = V_PTP;
                END;
            END IF;

            --TINH TIEN DICHVU
            SELECT COUNT(*) INTO KIEM_TRA
            FROM PHIEUDICHVU
            WHERE MAKH = V_KH AND MATT = 1;

            V_TIENDV := 0;

            IF KIEM_TRA <> 0 THEN
                BEGIN
                    SELECT MAPDV INTO V_PDV
                    FROM PHIEUDICHVU
                    WHERE MAKH = V_KH AND MATT = 1;

                    OPEN CUR_DICHVU;
                    LOOP
                        FETCH CUR_DICHVU INTO V_NGAYSD, V_SLDV, V_GIADV;
                        EXIT WHEN CUR_DICHVU%NOTFOUND;
                        V_MAXKM := 0;
                        OPEN CUR_KHUYENMAI;
                        LOOP
                            FETCH CUR_KHUYENMAI INTO V_TUNGAY, V_DENNGAY, V_PHANTRAMKM;
                            EXIT WHEN CUR_KHUYENMAI%NOTFOUND;
                            IF TRUNC(V_NGAYSD) BETWEEN TRUNC(V_TUNGAY) AND TRUNC(V_DENNGAY) THEN
                                IF V_MAXKM = 0 OR V_MAXKM < V_PHANTRAMKM THEN
                                    V_MAXKM := V_PHANTRAMKM;
                                END IF;
                            END IF;
                        END LOOP;
                        CLOSE CUR_KHUYENMAI;
                        V_TIENDV := V_TIENDV + (V_SLDV * V_GIADV) * (1 - V_MAXKM); 
                    END LOOP;
                    CLOSE CUR_DICHVU;
                    --CAP NHAT TIENDV VAO PHIEUDIHVU
                    UPDATE PHIEUDICHVU
                    SET TIENDV = V_TIENDV
                    WHERE MAPDV = V_PDV;
                END;
            END IF;

            --TINH TIEN HOADON
            V_TONGTIEN := (V_TIENPHONG + V_TIENDV) * 1.1;

        END;
    END IF;


    INSERT INTO HoaDon (maHD, tongTien, maKH, maNV, maPTP, maPDV) 
    VALUES(V_HD, V_TONGTIEN, V_KH, V_NV, V_PTP, V_PDV);

    SELECT COUNT(*) INTO KIEM_TRA
    FROM HOADON
    WHERE MAHD = V_HD;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Them hoa don thanh cong');
        END;
    END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure THEM_KH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_KH" (   V_TEN IN KHACHHANG.TENKH%TYPE,
                                        V_CCCD IN KHACHHANG.CCCDKH%TYPE,
                                        V_NS IN VARCHAR2,
                                        V_GT IN KHACHHANG.GIOITINHKH%TYPE,
                                        V_SDT IN KHACHHANG.SDTKH%TYPE,
                                        V_QT IN KHACHHANG.QUOCTICH%TYPE
                                    )
IS
    V_KH KHACHHANG.MAKH%TYPE;
    KIEM_TRA INT;
BEGIN
    V_KH := KH_S.NEXTVAL;


    INSERT INTO KhachHang (maKH, tenKH, cccdKH, ngaySinhKH, gioiTinhKH, sdtKH, quocTich)
    VALUES(V_KH, V_TEN, V_CCCD, TO_DATE(V_NS, 'DD/MM/YYYY'), V_GT, V_SDT, V_QT);

    SELECT COUNT(MAKH) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = V_KH;

    IF KIEM_TRA > 0 THEN
        DBMS_OUTPUT.PUT_LINE('Thêm khách hàng thành công');
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_KM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_KM" (   V_TEN IN KHUYENMAI.TENKM%TYPE,
                                        V_TUNGAY IN VARCHAR2,
                                        V_DENNGAY IN VARCHAR2
                                    )
IS
    KIEM_TRA INT;
    V_KM KHUYENMAI.MAKM%TYPE;
    LKH LOAIKHACHHANG%ROWTYPE;
    V_PTKM CHITIETKM.PHANTRAMKM%TYPE;
BEGIN
    V_KM := KM_S.NEXTVAL;

    INSERT INTO KhuyenMai (maKM, tenKM, tuNgay, denNgay) 
    VALUES(V_KM, V_TEN, TO_DATE(V_TUNGAY, 'DD/MM/YYYY HH24:MI'), TO_DATE(V_DENNGAY, 'DD/MM/YYYY HH24:MI'));

    SELECT COUNT(MAKM) INTO KIEM_TRA
    FROM KHUYENMAI
    WHERE MAKM = V_KM;

    IF KIEM_TRA > 0 THEN
        DBMS_OUTPUT.PUT_LINE('Thêm khuyến mãi thành công');
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_NV" (V_TEN IN NHANVIEN.TENNV%TYPE,
                                    V_NS IN VARCHAR2,
                                    V_GT IN NHANVIEN.GIOITINHNV%TYPE,
                                    V_EMAIL IN NHANVIEN.EMAILNV%TYPE,
                                    V_CCCD IN NHANVIEN.CCCDNV%TYPE,
                                    V_CHUCVU IN NHANVIEN.CHUCVU%TYPE,
                                    V_MAQL IN NHANVIEN.MAQL%TYPE
                                    )
IS
    V_NV NHANVIEN.MANV%TYPE;
    KIEM_TRA INT;
BEGIN
    V_NV := NV_S.NEXTVAL;

    INSERT INTO NHANVIEN (maNV, tenNV, ngaySinhNV, gioiTinhNV, cccdNV, emailNV, ngayVL, chucVu, maQL)
    VALUES(V_NV, V_TEN, to_date(V_NS, 'dd/mm/yyyy'), V_GT, V_CCCD, V_EMAIL, SYSDATE, V_CHUCVU, V_MAQL);


    SELECT COUNT(MANV) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF KIEM_TRA > 0 THEN
        DBMS_OUTPUT.PUT_LINE('Thêm nhân viên thành công');
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_PDT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_PDT" (  V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
IS
    V_PDT PHIEUDATTRUOC.MAPDT%TYPE;
    KIEM_TRA INT;
BEGIN
    V_PDT := PDT_S.NEXTVAL;


    INSERT INTO PhieuDatTruoc (maPDT, maKH, maNV) 
    VALUES(V_PDT, V_KH, V_NV);


    SELECT COUNT(MAPDT) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = V_PDT;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm phiếu đặt trước thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_PDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_PDV" (  V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
IS
    V_PDV PHIEUDICHVU.MAPDV%TYPE;
    KIEM_TRA INT;
BEGIN
    V_PDV := PDV_S.NEXTVAL;


    INSERT INTO PHIEUDICHVU (maPDV, maKH, maNV) 
    VALUES(V_PDV, V_KH, V_NV);


    SELECT COUNT(MAPDV) INTO KIEM_TRA
    FROM PHIEUDICHVU
    WHERE MAPDV = V_PDV;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm phiếu dịch vụ thành công');
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_PHONG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_PHONG" (   V_GC IN PHONG.GHICHU%TYPE,
                                            V_LP IN LOAIPHONG.MALP%TYPE
                                        )
IS
    V_P PHONG.MAPHONG%TYPE;
    KIEM_TRA INT;
BEGIN
    V_P := P_S.NEXTVAL;

    INSERT INTO Phong (maPhong, ghiChu, maLP) 
    VALUES(V_P, V_GC, V_LP);


    SELECT COUNT(MAPHONG) INTO KIEM_TRA
    FROM PHONG
    WHERE MAPHONG = V_P;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Them phong thanh cong'); 
            INSERT INTO ChiTietTTP (maPhong, maTTP,ngayBD, ngayKT) 
            VALUES(V_P, 1, SYSDATE, ADD_MONTHS(SYSDATE, 36));
        END;
    END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure THEM_PTP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_PTP" (  V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
IS
    V_PTP PHIEUTHUEPHONG.MAPTP%TYPE;
    KIEM_TRA INT;
    V_PDT PHIEUDATTRUOC.MAPDT%TYPE;
    V_SLNGUOI CHITIETPTP.SLNGUOI%TYPE;
    CURSOR THONG_TIN IS SELECT MAPHONG, NGAYNP, NGAYTPDD 
                        FROM CHITIETPDT WHERE MAPDT = V_PDT;
    V_PHONG PHONG.MAPHONG%TYPE;
    V_NGAYNP CHITIETPDT.NGAYNP%TYPE;
    V_NGAYTPDD CHITIETPDT.NGAYTPDD%TYPE;

    XU_LY_PDT EXCEPTION;
BEGIN
    V_PTP := PTP_S.NEXTVAL;

    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC P
    WHERE MAKH = V_KH AND MATT = 1 AND TRUNC(SYSDATE) = (   SELECT TRUNC(MIN(NGAYNP))
                                                            FROM CHITIETPDT CT
                                                            WHERE P.MAPDT = CT.MAPDT
                                                            GROUP BY MAPDT
                                                        );

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chưa có phiếu đặt trước');
            INSERT INTO PhieuThuePhong(maPTP, maKH, maNV, maPDT) 
            VALUES(V_PTP, V_KH, V_NV, null); 
        END;
    ELSE
        BEGIN
            SELECT MAPDT INTO V_PDT
            FROM PHIEUDATTRUOC P
            WHERE MAKH = V_KH AND MATT = 1 AND TRUNC(SYSDATE) = (   SELECT TRUNC(MIN(NGAYNP))
                                                                    FROM CHITIETPDT CT
                                                                    WHERE P.MAPDT = CT.MAPDT
                                                                    GROUP BY MAPDT
                                                                );

            INSERT INTO PhieuThuePhong(maPTP, maKH, maNV, maPDT) 
            VALUES(V_PTP, V_KH, V_NV, V_PDT); 
        END;
    END IF;
    SELECT COUNT(MAPTP) INTO KIEM_TRA
    FROM PHIEUTHUEPHONG
    WHERE MAPTP = V_PTP;

    IF KIEM_TRA > 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Thêm phiếu thuê phòng thành công');
            IF KIEM_TRA <> 0 THEN
                BEGIN
                    RAISE XU_LY_PDT;
                END;
            END IF;
        END;
    END IF;

    EXCEPTION WHEN XU_LY_PDT THEN
        BEGIN
            SUA_MATT_PDT(V_PDT, 2);
            OPEN THONG_TIN;
            LOOP
                FETCH THONG_TIN INTO V_PHONG, V_NGAYNP, V_NGAYTPDD;
                EXIT WHEN THONG_TIN%NOTFOUND;

                UPDATE CHITIETTTP
                SET MATTP = 3
                WHERE   MAPHONG = V_PHONG AND MATTP = 2 
                        AND TRUNC(NGAYBD) = TRUNC(V_NGAYNP) 
                        AND TRUNC(NGAYKT) = TRUNC(V_NGAYTPDD); 

                --THEM_CTPTP(:NEW.MAPTP, V_PHONG, V_NGAYNP, V_NGAYTPDD, 0);     
                INSERT INTO ChiTietPTP (maPTP, maPhong, ngayNP, ngayTPTT, slNguoi) 
                VALUES(V_PTP, V_PHONG, V_NGAYNP, V_NGAYTPDD, 0);
            END LOOP;
            CLOSE THONG_TIN;
        END;
END;

/
--------------------------------------------------------
--  DDL for Procedure THEM_QD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."THEM_QD" (V_TENQD IN QUYDINH.TENQD%TYPE,
                                    V_MOTA IN QUYDINH.MOTA%TYPE
                                    )
IS
    V_QD QUYDINH.MAQD%TYPE;
    KIEM_TRA INT;
BEGIN
    --LOCK TABLE QUYDINH IN ROW EXCLUSIVE MODE;
    V_QD := QD_S.NEXTVAL;

    INSERT INTO QUYDINH (maQD, tenQD, moTa)
    VALUES(V_QD, V_TENQD,V_MOTA);


    SELECT COUNT(MAQD) INTO KIEM_TRA
    FROM QUYDINH
    WHERE MAQD = V_QD;

    IF KIEM_TRA > 0 THEN
        DBMS_OUTPUT.PUT_LINE('Thêm quy định thành công');
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_CCCD_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_CCCD_NV" (V_CCCDNV IN NHANVIEN.CCCDNV%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE CCCDNV = V_CCCDNV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Cccd này không toonft ại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM NHANVIEN WHERE CCCDNV = V_CCCDNV;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công nhân viên có cccd là : '|| V_CCCDNV);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_EMAIL_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_EMAIL_NV" (V_EMAILNV IN NHANVIEN.EMAILNV%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE EMAILNV = V_EMAILNV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Email nay khong ton tai, vui long kiem tra lai');
        END;
    ELSE
        BEGIN
            DELETE FROM NHANVIEN WHERE EMAILNV = V_EMAILNV;
            DBMS_OUTPUT.PUT_LINE('Xoa thanh cong nhan vien co email la : '|| V_EMAILNV);
        END;
    END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure XOA_MAKH_PDT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAKH_PDT" (V_KH IN KHACHHANG.MAKH%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHACHHANG
    WHERE MAKH = V_KH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Khách hàng này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            SELECT COUNT(*) INTO KIEM_TRA
            FROM CHITIETPDT
            WHERE MAPDT IN (    SELECT MAPDT
                                FROM PHIEUDATTRUOC
                                WHERE MAKH = V_KH
                            );

            IF KIEM_TRA > 0 THEN
                BEGIN
                    DELETE FROM CHITIETPDT WHERE MAPDT IN (     SELECT MAPDT
                                                                FROM PHIEUDATTRUOC
                                                                WHERE MAKH = V_KH
                                                            );
                    DBMS_OUTPUT.PUT_LINE('Xóa thành công chi tiết phiếu đặt trước của khách hàng: '||V_KH);
                END;
            END IF;

            DELETE FROM PHIEUDATTRUOC WHERE MAKH = V_KH;
            DBMS_OUTPUT.PUT_LINE('Xoá thành công phiếu đặt trước của khách hàng có makh là: '|| V_KH);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MAKM_KM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAKM_KM" (V_KM IN KHUYENMAI.MAKM%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM KHUYENMAI
    WHERE MAKM = V_KM;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chương trình khuyến mãi này không tồ tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            SELECT COUNT(*) INTO KIEM_TRA
            FROM CHITIETKM
            WHERE MAKM = V_KM;

            IF KIEM_TRA > 0 THEN
                BEGIN
                    DELETE FROM CHITIETKM WHERE MAKM = V_KM;
                    DBMS_OUTPUT.PUT_LINE('Xóa thành công chi tiết khuyến mãi có makh là: '||V_KM);
                END;
            END IF;

            DELETE FROM KHUYENMAI WHERE MAKM = V_KM;
            DBMS_OUTPUT.PUT_LINE('Xoa thanh cong chuong trinh khuyen mai co makm la : '|| V_KM);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MAKM_MALKH_CTKM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAKM_MALKH_CTKM" (    V_KM IN KHUYENMAI.MAKM%TYPE,
                                                    V_LKH IN LOAIKHACHHANG.MALKH%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETKM
    WHERE MAKM = V_KM AND MALKH = V_LKH;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chi tiết chương trình khuyến mãi của loại khách hàng này không tồn tại, vui lòng kiểm tả lại');
        END;
    ELSE
        BEGIN
            DELETE FROM CHITIETKM WHERE MAKM = V_KM AND MALKH = V_LKH;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công chương trình khuyến mãi có makm là : '|| V_KM || ' ucar malkh là : '|| V_LKH);

            SELECT COUNT(*) INTO KIEM_TRA
            FROM CHITIETKM
            WHERE MAKM = V_KM;

            IF KIEM_TRA = 0 THEN 
                DELETE FROM KHUYENMAI WHERE MAKM = V_KM;
            END IF;
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MANV_NV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MANV_NV" (V_NV IN NHANVIEN.MANV%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM NHANVIEN
    WHERE MANV = V_NV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Nhân viên này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM NHANVIEN WHERE MANV = V_NV;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công nhân viên có manv là : '|| V_NV);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MAPDT_PDT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAPDT_PDT" (V_PDT IN PHIEUDATTRUOC.MAPDT%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUDATTRUOC
    WHERE MAPDT = V_PDT AND MATT = 1;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Phiếu đặt trước này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM PHIEUDATTRUOC WHERE MAPDT = V_PDT;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công phiếu đặt trước có mapdt là : '|| V_PDT);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MAPDV_MADV_CTPDV
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAPDV_MADV_CTPDV" (    V_PDV IN PHIEUDICHVU.MAPDV%TYPE,
                                                        V_DV IN DICHVU.MADV%TYPE
                                                )
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM CHITIETPDV
    WHERE MAPDV = V_PDV AND MADV = V_DV;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Chi tiết phiếu dịch vụ của khách hàng không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM CHITIETPDV WHERE MAPDV = V_PDV AND MADV = V_DV;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công chi tiết phiếu dịch vụ có mapdv là : '|| V_PDV || ' và madv là : '|| V_DV);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_MAQD_QD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_MAQD_QD" (V_QD IN QUYDINH.MAQD%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM QUYDINH
    WHERE MAQD = V_QD;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Quy định này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM QUYDINH WHERE MAQD = V_QD;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công quy định có maqd là : '|| V_QD);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XOA_TENQD_QD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XOA_TENQD_QD" (V_TENQD IN QUYDINH.TENQD%TYPE)
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM QUYDINH
    WHERE TENQD = V_TENQD;

    IF KIEM_TRA = 0 THEN
        BEGIN
            DBMS_OUTPUT.PUT_LINE('Quy định này không tồn tại, vui lòng kiểm tra lại');
        END;
    ELSE
        BEGIN
            DELETE FROM QUYDINH WHERE TENQD = V_TENQD;
            DBMS_OUTPUT.PUT_LINE('Xóa thành công quy định có tên quy định là: '|| V_TENQD);
        END;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure XUAT_HOADON
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##LUCIFER"."XUAT_HOADON" ( V_MAHD HOADON.MAHD%TYPE
                                        )
IS
    V_TONGTIEN HOADON.TONGTIEN%TYPE;
    V_TENNV NHANVIEN.TENNV%TYPE;
    V_TENKH KHACHHANG.TENKH%TYPE;
    V_PTP HOADON.MAPTP%TYPE;
    V_TIENPHONG PHIEUTHUEPHONG.TIENPHONG%TYPE;
    V_PDV HOADON.MAPDV%TYPE;
    V_TIENDV PHIEUDICHVU.TIENDV%TYPE;
    V_SUM PHIEUTHUEPHONG.TIENPHONG%TYPE;

    CURSOR CUR_HOADON IS SELECT TONGTIEN, TENNV, TENKH, HD.MAPTP,  TIENPHONG, HD.MAPDV, TIENDV
                        FROM HOADON HD  JOIN NHANVIEN NV ON HD.MANV = NV.MANV
                                        JOIN KHACHHANG KH ON KH.MAKH = HD.MAKH
                                        LEFT JOIN PHIEUTHUEPHONG PTP ON PTP.MAPTP = HD.MAPTP
                                        LEFT JOIN PHIEUDICHVU PDV ON PDV.MAPDV = HD.MAPDV
                        WHERE MAHD = V_MAHD;
BEGIN 
    --LOCK TABLE HOADON IN SHARE MODE;
    OPEN CUR_HOADON;
    LOOP
        FETCH CUR_HOADON INTO V_TONGTIEN, V_TENNV, V_TENKH, V_PTP, V_TIENPHONG, V_PDV, V_TIENDV;
        EXIT WHEN CUR_HOADON%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('Mã hóa đơn: '|| V_MAHD ||'           Tên nhân viên: '||  V_TENNV||'       Tên khách hàng: '|| V_TENKH);

        IF V_PTP IS NOT NULL THEN
            BEGIN
                DBMS_OUTPUT.PUT_LINE('==========> Phiếu thuê phòng: '|| V_PTP);
                DECLARE
                    CURSOR CUR_PHIEUTHUEPHONG IS SELECT TENPHONG, GIAPHONG, NGAYNP, NGAYTPTT, GIAPHONG*(ROUND(NGAYTPTT - NGAYNP))
                                                    FROM CHITIETPTP CTPTP JOIN PHONG P ON P.MAPHONG = CTPTP.MAPHONG
                                                                            JOIN LOAIPHONG LP ON LP.MALP = P.MALP
                                                    WHERE MAPTP = V_PTP;
                    V_TENPHONG PHONG.TENPHONG%TYPE;
                    V_GIAPHONG LOAIPHONG.GIAPHONG%TYPE;
                    V_NGAYNP CHITIETPTP.NGAYNP%TYPE;
                    V_NGAYTPTT CHITIETPTP.NGAYTPTT%TYPE;
                    TIENTUNGPHONG PHIEUTHUEPHONG.TIENPHONG%TYPE;
                BEGIN
                    V_SUM := 0;
                    OPEN CUR_PHIEUTHUEPHONG;
                    LOOP
                        FETCH CUR_PHIEUTHUEPHONG INTO V_TENPHONG, V_GIAPHONG, V_NGAYNP, V_NGAYTPTT, TIENTUNGPHONG;
                        EXIT WHEN CUR_PHIEUTHUEPHONG%NOTFOUND;
                        DBMS_OUTPUT.PUT_LINE('                  Tên phòng:'|| V_TENPHONG||'     giá phòng: '||V_GIAPHONG||'     ngày nhận phòng: '|| V_NGAYNP||'       ngày trả phòng: '||V_NGAYTPTT||'        tiền phòng: '||TIENTUNGPHONG);
                        V_SUM := V_SUM + TIENTUNGPHONG;
                    END LOOP;
                    CLOSE CUR_PHIEUTHUEPHONG;
                END;
                DBMS_OUTPUT.PUT_LINE('Tiền phòng thực tế: '||V_SUM||'         Tiền phòng sau khi sử dụng chương trình khuyến mãi: '||V_TIENPHONG);
            END;
        ELSE
            V_TIENPHONG := 0;
        END IF;

        IF V_PDV IS NOT NULL THEN
            BEGIN
                DBMS_OUTPUT.PUT_LINE('==========> Phiếu dịch vụ: '|| V_PDV);
                DECLARE
                    CURSOR CUR_PHIEUDICHVU IS SELECT TENDV, GIADV, NGAYSD, SLDV, TENDONVI, GIADV*(SLDV)
                                                FROM CHITIETPDV CTPDV JOIN DICHVU DV ON CTPDV.MADV = DV.MADV
                                                            JOIN DONVI DVI ON DV.MADONVI = DVI.MADONVI
                                                WHERE MAPDV = V_PDV;
                    V_TENDV DICHVU.TENDV%TYPE;
                    V_GIADV DICHVU.GIADV%TYPE;
                    V_NGAYSD CHITIETPDV.NGAYSD%TYPE;
                    V_SLDV CHITIETPDV.SLDV%TYPE;
                    V_TENDONVI DONVI.TENDONVI%TYPE;
                    TIENTUNGDV PHIEUDICHVU.TIENDV%TYPE;
                BEGIN
                    V_SUM := 0;
                    OPEN CUR_PHIEUDICHVU;
                    LOOP
                        FETCH CUR_PHIEUDICHVU INTO V_TENDV, V_GIADV, V_NGAYSD, V_SLDV, V_TENDONVI, TIENTUNGDV;
                        EXIT WHEN CUR_PHIEUDICHVU%NOTFOUND;
                        DBMS_OUTPUT.PUT_LINE('                  Tên dịch vụ:'|| V_TENDV||'     giá dịch vụ: '||V_GIADV||'     ngày sử dụng: '|| V_NGAYSD||'       số lượng dịch vụ: '||V_SLDV||'       tên đơn vị tổ chức: '||V_TENDONVI||'       tiền dịch vụ: '||TIENTUNGDV);
                        V_SUM := V_SUM + TIENTUNGDV;
                    END LOOP;
                    CLOSE CUR_PHIEUDICHVU;
                END;
                DBMS_OUTPUT.PUT_LINE('Tiền dịch vụ thục tế: '||V_SUM||'         Tiền dịch vụ sau khi sử dụng khuyến mãi: '||V_TIENDV);
            END;
        ELSE
            V_TIENDV := 0;
        END IF;
        DBMS_OUTPUT.PUT_LINE('');
        DBMS_OUTPUT.PUT_LINE('=====> Tổng tiền: '|| (V_TIENPHONG + V_TIENDV) ||'         Tông tiền sau khi tính thuế: '||V_TONGTIEN);
    END LOOP;
    CLOSE CUR_HOADON;
END;

/
--------------------------------------------------------
--  DDL for Function LAY_MAPDT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."LAY_MAPDT" (   V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
RETURN PHIEUDATTRUOC.MAPDT%TYPE
IS
    V_PDT PHIEUDATTRUOC.MAPDT%TYPE;
BEGIN
    SELECT MAPDT INTO V_PDT
    FROM PHIEUDATTRUOC
    WHERE MATT = 1 AND MAKH = V_KH AND MANV = V_NV;

    RETURN V_PDT;
END;


/
--------------------------------------------------------
--  DDL for Function LAY_MAPDV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."LAY_MAPDV" (   V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
RETURN PHIEUDICHVU.MAPDV%TYPE
IS
    V_PDV PHIEUDICHVU.MAPDV%TYPE;
BEGIN
    SELECT MAPDV INTO V_PDV
    FROM PHIEUDICHVU
    WHERE MATT = 1 AND MAKH = V_KH AND MANV = V_NV;

    RETURN V_PDV;
END;

/
--------------------------------------------------------
--  DDL for Function LAY_MAPTP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."LAY_MAPTP" (   V_KH IN KHACHHANG.MAKH%TYPE,
                                        V_NV IN NHANVIEN.MANV%TYPE
                                        )
RETURN PHIEUTHUEPHONG.MAPTP%TYPE
IS
    V_PTP PHIEUTHUEPHONG.MAPTP%TYPE;
BEGIN
    SELECT MAPTP INTO V_PTP
    FROM PHIEUTHUEPHONG
    WHERE MATT = 1 AND MAKH = V_KH AND MANV = V_NV;

    RETURN V_PTP;
END;


/
--------------------------------------------------------
--  DDL for Function TINH_PHU_THU_KH
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."TINH_PHU_THU_KH" (V_PHIEU PHIEUTHUEPHONG.MAPTP%TYPE)
RETURN NUMBER
IS
    KIEM_TRA INT;
BEGIN
    SELECT COUNT(*) INTO KIEM_TRA
    FROM PHIEUTHUEPHONG PDT JOIN KHACHHANG KH ON PDT.MAKH = KH.MAKH
    WHERE MAPTP = V_PHIEU AND QUOCTICH <> 'Việt Nam';

    IF KIEM_TRA = 1 THEN
        BEGIN
            RETURN 0.15;
        END;
    ELSE RETURN 0;
    END IF;
END;

/
--------------------------------------------------------
--  DDL for Function TINH_TIEN_DICHVU
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."TINH_TIEN_DICHVU" (V_PDV IN PHIEUDICHVU.MAPDV%TYPE)
RETURN PHIEUDICHVU.TIENDV%TYPE
IS
    V_TONGDV PHIEUDICHVU.TIENDV%TYPE;
    V_NGAY  CHITIETPDV.NGAYSD%TYPE;
    V_SLDV CHITIETPDV.SLDV%TYPE;
    V_GIADV DICHVU.GIADV%TYPE;
    CURSOR SO_1 IS SELECT NGAYSD, SLDV, GIADV
                    FROM CHITIETPDV CTPDV, DICHVU DV
                    WHERE DV.MADV = CTPDV.MADV AND CTPDV.MAPDV = V_PDV ;
    V_TN KHUYENMAI.TUNGAY%TYPE;
    V_DN KHUYENMAI.DENNGAY%TYPE;
    V_PTKM CHITIETKM.PHANTRAMKM%TYPE;
    V_MAX CHITIETKM.PHANTRAMKM%TYPE;

    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    CURSOR SO_2 IS SELECT TUNGAY, DENNGAY, PHANTRAMKM
                    FROM KHUYENMAI KM, CHITIETKM CTKM
                    WHERE KM.MAKM = CTKM.MAKM AND MALKH = V_LKH;
BEGIN
    SELECT MALKH INTO V_LKH
    FROM KHACHHANG KH JOIN PHIEUDICHVU PDV ON PDV.MAKH = KH.MAKH
    WHERE MAPDV = V_PDV;

    V_TONGDV := 0;
    OPEN SO_1;
    LOOP
        FETCH SO_1 INTO V_NGAY, V_SLDV, V_GIADV;
        EXIT WHEN SO_1%NOTFOUND;
        V_MAX := 0;
        OPEN SO_2;
        LOOP
            FETCH SO_2 INTO V_TN, V_DN, V_PTKM;
            EXIT WHEN SO_2%NOTFOUND;
            IF V_NGAY >= V_TN AND V_NGAY <= V_DN THEN
                IF V_MAX = 0 OR V_MAX < V_PTKM THEN
                    V_MAX := V_PTKM;
                END IF;
            END IF;
        END LOOP;
        CLOSE SO_2;
        V_TONGDV := V_TONGDV + (V_SLDV * V_GIADV)*(1 - V_MAX);
    END LOOP;
    CLOSE SO_1;

    RETURN V_TONGDV;
END;


/
--------------------------------------------------------
--  DDL for Function TINH_TIEN_PHONG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##LUCIFER"."TINH_TIEN_PHONG" (V_PTP IN PHIEUTHUEPHONG.MAPTP%TYPE)
RETURN PHIEUTHUEPHONG.TIENPHONG%TYPE
IS
    V_TONG PHIEUTHUEPHONG.TIENPHONG%TYPE;
    V_NP CHITIETPTP.NGAYNP%TYPE;
    V_TP CHITIETPTP.NGAYTPTT%TYPE;
    V_GIAP LOAIPHONG.GIAPHONG%TYPE;
    V_PT CHITIETPTP.PHUTHU%TYPE;
    V_LKH LOAIKHACHHANG.MALKH%TYPE;
    CURSOR SO_3 IS SELECT NGAYNP, NGAYTPTT, PHUTHU, GIAPHONG
                    FROM CHITIETPTP CTPTP, PHONG P, LOAIPHONG LP
                    WHERE CTPTP.MAPHONG= P.MAPHONG AND LP.MALP = P.MALP AND CTPTP.MAPTP = V_PTP;
    V_TN KHUYENMAI.TUNGAY%TYPE;
    V_DN KHUYENMAI.DENNGAY%TYPE;
    V_PTKM CHITIETKM.PHANTRAMKM%TYPE;
    V_MAX CHITIETKM.PHANTRAMKM%TYPE;
    CURSOR SO_4 IS SELECT TUNGAY, DENNGAY, PHANTRAMKM
                    FROM KHUYENMAI KM, CHITIETKM CTKM
                    WHERE KM.MAKM = CTKM.MAKM AND MALKH = V_LKH;
BEGIN
    SELECT MALKH INTO V_LKH
    FROM PHIEUTHUEPHONG PTP JOIN KHACHHANG KH ON KH.MAKH =  PTP.MAKH
    WHERE MAPTP = V_PTP;
    V_TONG := 0;
    OPEN SO_3;
    LOOP
        FETCH SO_3 INTO V_NP, V_TP, V_PT, V_GIAP;
        EXIT WHEN SO_3%NOTFOUND;
        WHILE V_NP <= V_TP
        LOOP
            V_MAX := 0;
            OPEN SO_4;
            LOOP
                FETCH SO_4 INTO V_TN, V_DN, V_PTKM;
                EXIT WHEN SO_4%NOTFOUND;
                IF TRUNC(V_NP) >= TRUNC(V_TN) AND TRUNC(V_TP) <= TRUNC(V_DN) THEN
                    IF V_MAX = 0 OR V_MAX < V_PTKM THEN
                        V_MAX := V_PTKM;
                    END IF;
                END IF;
            END LOOP;
            CLOSE SO_4;
            V_TONG := V_TONG + (V_GIAP * (1 + V_PT - V_MAX));
            V_NP := V_NP + 1;
        END LOOP;
    END LOOP;
    CLOSE SO_3;

    RETURN V_TONG;
END;

/
--------------------------------------------------------
--  Constraints for Table CHITIETKM
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETKM" ADD CONSTRAINT "CTKM_MAKM_NOT_NULL" CHECK ('MAKM' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETKM" ADD CONSTRAINT "CTKM_MALKH_NOT_NULL" CHECK ('MALKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETKM" ADD CONSTRAINT "CTKM_PK" PRIMARY KEY ("MAKM", "MALKH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CHITIETPDT
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPDT" ADD CONSTRAINT "CTPDT_PK" PRIMARY KEY ("MAPDT", "MAPHONG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDT" ADD CONSTRAINT "CTPDT_MAPDT_NOT_NULL" CHECK ('MAPDT' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDT" ADD CONSTRAINT "CTPDT_MAPHONG_NOT_NULL" CHECK ('MAPHONG' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table CHITIETPDV
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "CTPDV_NGAYSD_NOT_NULL" CHECK ('NGAYSD' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "CTPDV_MAPDV_NOT_NULL" CHECK ('MAPDV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "CTPDV_MADV_NOT_NULL" CHECK ('MADV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "CTPDV_PK" PRIMARY KEY ("MADV", "MAPDV", "NGAYSD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CHITIETPTP
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPTP" ADD CONSTRAINT "CTPTP_PK" PRIMARY KEY ("MAPTP", "MAPHONG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPTP" ADD CONSTRAINT "CTPTP_MAPTP_NOT_NULL" CHECK ('MAPTP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPTP" ADD CONSTRAINT "CTPTP_MAPHONG_NOT_NULL" CHECK ('MAPHONG' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table CHITIETTTP
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "CTTTP_MATTP_NOT_NULL" CHECK ('MATTP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "CTTTP_MAPHONG_NOT_NULL" CHECK ('MAPHONG' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "CTTTP_NGAYBD_NOT_NULL" CHECK ('NGAYBD' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "CTTTP_NGAYKT_NOT_NULL" CHECK ('NGAYKT' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "CTTTP_PK" PRIMARY KEY ("MAPHONG", "MATTP", "NGAYBD", "NGAYKT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DICHVU
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."DICHVU" ADD CONSTRAINT "DV_MADV_NOT_NULL" CHECK ('MADV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."DICHVU" ADD CONSTRAINT "DV_MADONVI_NOT_NULL" CHECK ('MADONVI' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."DICHVU" ADD CONSTRAINT "DV_TENDV_NOT_NULL" CHECK ('TENDV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."DICHVU" ADD CONSTRAINT "DV_PK" PRIMARY KEY ("MADV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DONVI
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."DONVI" ADD CONSTRAINT "DONVI_MADONVI_NOT_NULL" CHECK ('MADONVI' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."DONVI" ADD CONSTRAINT "DONVI_TENDONVI_NOT_NULL" CHECK ('TENDONVI' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."DONVI" ADD CONSTRAINT "DONVI_PK" PRIMARY KEY ("MADONVI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HOADON
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "HD_MAHD_NOT_NULL" CHECK ('MAHD' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "HD_MAKH_NOT_NULL" CHECK ('MAKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "HD_MANV_NOT_NULL" CHECK ('MANV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "HD_PK" PRIMARY KEY ("MAHD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KHACHHANG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_MAKH_NOT_NULL" CHECK ('MAKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_MALKH_NOT_NULL" CHECK ('MALKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_TENKH_NOT_NULL" CHECK ('TENKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_SDTKH_NOT_NULL" CHECK ('SDTKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_QUOCTICH_NOT_NULL" CHECK ('QUOCTICH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "KH_PK" PRIMARY KEY ("MAKH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KHUYENMAI
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."KHUYENMAI" ADD CONSTRAINT "KM_MAKM_NOT_NULL" CHECK ('MAKM' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHUYENMAI" ADD CONSTRAINT "KM_TENKM_NOT_NULL" CHECK ('TENKM' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."KHUYENMAI" ADD CONSTRAINT "KM_PK" PRIMARY KEY ("MAKM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOAIKHACHHANG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."LOAIKHACHHANG" ADD CONSTRAINT "LKH_MALKH_NOT_NULL" CHECK ('MALKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."LOAIKHACHHANG" ADD CONSTRAINT "LKH_TENLKH_NOT_NULL" CHECK ('TENLKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."LOAIKHACHHANG" ADD CONSTRAINT "LKH_PK" PRIMARY KEY ("MALKH")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOAIPHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."LOAIPHONG" ADD CONSTRAINT "LP_MALP_NOT_NULL" CHECK ('MALP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."LOAIPHONG" ADD CONSTRAINT "LP_TENLP_NOT_NULL" CHECK ('TENLP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."LOAIPHONG" ADD CONSTRAINT "LP_PK" PRIMARY KEY ("MALP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NHANVIEN
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_MANV_NOT_NULL" CHECK ('MANV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_TENNV_NOT_NULL" CHECK ('TENNV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_NGAYSINHNV_NOT_NULL" CHECK ('NGAYSINHNV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_CHUCVU_NOT_NULL" CHECK ('CHUCVU' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_NGAYVL_NOT_NULL" CHECK ('NGAYVL' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "NV_PK" PRIMARY KEY ("MANV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "UK_NV" UNIQUE ("CCCDNV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PHIEUDATTRUOC
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "PDT_PK" PRIMARY KEY ("MAPDT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "PDT_MAPDT_NOT_NULL" CHECK ('MAPDT' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "PDT_MAKH_NOT_NULL" CHECK ('MAKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "PDT_MANV_NOT_NULL" CHECK ('MANV' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table PHIEUDICHVU
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "PDV_MAKH_NOT_NULL" CHECK ('MAKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "PDV_MANV_NOT_NULL" CHECK ('MANV' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "PDV_PK" PRIMARY KEY ("MAPDV")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "PDV_MAPDV_NOT_NULL" CHECK ('MAPDV' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table PHIEUTHUEPHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "PTP_PK" PRIMARY KEY ("MAPTP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "PTP_MAPTP_NOT_NULL" CHECK ('MAPTP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "PTP_MAKH_NOT_NULL" CHECK ('MAKH' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "PTP_MANV_NOT_NULL" CHECK ('MANV' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table PHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHONG" ADD CONSTRAINT "P_MAPHONG_NOT_NULL" CHECK ('MAPHONG' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHONG" ADD CONSTRAINT "P_MALP_NOT_NULL" CHECK ('MALP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."PHONG" ADD CONSTRAINT "P_PK" PRIMARY KEY ("MAPHONG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QUYDINH
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."QUYDINH" ADD CONSTRAINT "QD_MAQD_NOT_NULL" CHECK ('MAQD' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."QUYDINH" ADD CONSTRAINT "QD_TENQD_NOT_NULL" CHECK ('TENQD' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."QUYDINH" ADD CONSTRAINT "QD_PK" PRIMARY KEY ("MAQD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TINHTRANGPHIEU
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."TINHTRANGPHIEU" ADD CONSTRAINT "TT_PK" PRIMARY KEY ("MATT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LUCIFER"."TINHTRANGPHIEU" ADD CONSTRAINT "TT_MATT_NOT_NULL" CHECK ('MATT' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."TINHTRANGPHIEU" ADD CONSTRAINT "TT_TENTT_NOT_NULL" CHECK ('TENTP' IS NOT NULL) ENABLE;
--------------------------------------------------------
--  Constraints for Table TINHTRANGPHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."TINHTRANGPHONG" ADD CONSTRAINT "TTP_MATTP_NOT_NULL" CHECK ('MATTP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."TINHTRANGPHONG" ADD CONSTRAINT "TTP_TENTTP_NOT_NULL" CHECK ('TENTTP' IS NOT NULL) ENABLE;
  ALTER TABLE "C##LUCIFER"."TINHTRANGPHONG" ADD CONSTRAINT "TTP_PK" PRIMARY KEY ("MATTP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHITIETKM
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETKM" ADD CONSTRAINT "FK_CTKM_LKH" FOREIGN KEY ("MALKH")
	  REFERENCES "C##LUCIFER"."LOAIKHACHHANG" ("MALKH") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHITIETPDT
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPDT" ADD CONSTRAINT "FK_CTPDT_PDT" FOREIGN KEY ("MAPDT")
	  REFERENCES "C##LUCIFER"."PHIEUDATTRUOC" ("MAPDT") ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDT" ADD CONSTRAINT "FK_CTPDT_P" FOREIGN KEY ("MAPHONG")
	  REFERENCES "C##LUCIFER"."PHONG" ("MAPHONG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHITIETPDV
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "FK_CTPDV_DV" FOREIGN KEY ("MADV")
	  REFERENCES "C##LUCIFER"."DICHVU" ("MADV") ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPDV" ADD CONSTRAINT "FK_CTPDV_PDV" FOREIGN KEY ("MAPDV")
	  REFERENCES "C##LUCIFER"."PHIEUDICHVU" ("MAPDV") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHITIETPTP
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETPTP" ADD CONSTRAINT "FK_CTPTP_PTP" FOREIGN KEY ("MAPTP")
	  REFERENCES "C##LUCIFER"."PHIEUTHUEPHONG" ("MAPTP") ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETPTP" ADD CONSTRAINT "FK_CTPTP_P" FOREIGN KEY ("MAPHONG")
	  REFERENCES "C##LUCIFER"."PHONG" ("MAPHONG") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHITIETTTP
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "FK_CTTTP_P" FOREIGN KEY ("MAPHONG")
	  REFERENCES "C##LUCIFER"."PHONG" ("MAPHONG") ENABLE;
  ALTER TABLE "C##LUCIFER"."CHITIETTTP" ADD CONSTRAINT "FK_CTTTP_TTP" FOREIGN KEY ("MATTP")
	  REFERENCES "C##LUCIFER"."TINHTRANGPHONG" ("MATTP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DICHVU
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."DICHVU" ADD CONSTRAINT "FK_DV_DV" FOREIGN KEY ("MADONVI")
	  REFERENCES "C##LUCIFER"."DONVI" ("MADONVI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HOADON
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "FK_HD_PTP" FOREIGN KEY ("MAPTP")
	  REFERENCES "C##LUCIFER"."PHIEUTHUEPHONG" ("MAPTP") ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "FK_HD_PDV" FOREIGN KEY ("MAPDV")
	  REFERENCES "C##LUCIFER"."PHIEUDICHVU" ("MAPDV") ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "FK_HD_KH" FOREIGN KEY ("MAKH")
	  REFERENCES "C##LUCIFER"."KHACHHANG" ("MAKH") ENABLE;
  ALTER TABLE "C##LUCIFER"."HOADON" ADD CONSTRAINT "FK_HD_NV" FOREIGN KEY ("MANV")
	  REFERENCES "C##LUCIFER"."NHANVIEN" ("MANV") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table KHACHHANG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."KHACHHANG" ADD CONSTRAINT "FK_KH_LKH" FOREIGN KEY ("MALKH")
	  REFERENCES "C##LUCIFER"."LOAIKHACHHANG" ("MALKH") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NHANVIEN
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."NHANVIEN" ADD CONSTRAINT "FK_NV_QL" FOREIGN KEY ("MAQL")
	  REFERENCES "C##LUCIFER"."NHANVIEN" ("MANV") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHIEUDATTRUOC
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "FK_PDT_KH" FOREIGN KEY ("MAKH")
	  REFERENCES "C##LUCIFER"."KHACHHANG" ("MAKH") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "FK_PDT_NV" FOREIGN KEY ("MANV")
	  REFERENCES "C##LUCIFER"."NHANVIEN" ("MANV") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDATTRUOC" ADD CONSTRAINT "FK_PDT_TT" FOREIGN KEY ("MATT")
	  REFERENCES "C##LUCIFER"."TINHTRANGPHIEU" ("MATT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHIEUDICHVU
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "FK_PDV_KH" FOREIGN KEY ("MAKH")
	  REFERENCES "C##LUCIFER"."KHACHHANG" ("MAKH") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "FK_PDV_NV" FOREIGN KEY ("MANV")
	  REFERENCES "C##LUCIFER"."NHANVIEN" ("MANV") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUDICHVU" ADD CONSTRAINT "FK_PDV_TT" FOREIGN KEY ("MATT")
	  REFERENCES "C##LUCIFER"."TINHTRANGPHIEU" ("MATT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHIEUTHUEPHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "FK_PTP_KH" FOREIGN KEY ("MAKH")
	  REFERENCES "C##LUCIFER"."KHACHHANG" ("MAKH") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "FK_PTP_NV" FOREIGN KEY ("MANV")
	  REFERENCES "C##LUCIFER"."NHANVIEN" ("MANV") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "FK_PTP_PDT" FOREIGN KEY ("MAPDT")
	  REFERENCES "C##LUCIFER"."PHIEUDATTRUOC" ("MAPDT") ENABLE;
  ALTER TABLE "C##LUCIFER"."PHIEUTHUEPHONG" ADD CONSTRAINT "FK_PTP_TT" FOREIGN KEY ("MATT")
	  REFERENCES "C##LUCIFER"."TINHTRANGPHIEU" ("MATT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHONG
--------------------------------------------------------

  ALTER TABLE "C##LUCIFER"."PHONG" ADD CONSTRAINT "FK_P_LP" FOREIGN KEY ("MALP")
	  REFERENCES "C##LUCIFER"."LOAIPHONG" ("MALP") ENABLE;
